{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/auth';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: API_URL\n});\napi.interceptors.request.use(config => {\n  try {\n    const userData = localStorage.getItem('user');\n    if (!userData) return config;\n    const parsed = JSON.parse(userData);\n    if (!(parsed !== null && parsed !== void 0 && parsed.token)) {\n      console.error('No token found in storage');\n      return config;\n    }\n\n    // Validate token structure before attaching\n    if (typeof parsed.token !== 'string' || parsed.token.split('.').length !== 3) {\n      console.error('Invalid token structure in interceptor:', parsed.token);\n      localStorage.removeItem('user');\n      return config;\n    }\n    config.headers.Authorization = `Bearer ${parsed.token}`;\n    return config;\n  } catch (error) {\n    console.error('Interceptor error:', error);\n    return config;\n  }\n}, error => {\n  return Promise.reject(error);\n});\n// Enhanced response interceptor\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nconst getAuthHeader = () => {\n  const userData = localStorage.getItem('user');\n  if (userData) {\n    const user = JSON.parse(userData);\n    if (user !== null && user !== void 0 && user.token) {\n      return {\n        Authorization: `Bearer ${user.token}`\n      };\n    }\n  }\n  return {};\n};\nconst register = async userData => {\n  try {\n    const response = await api.post('/register', userData);\n    if (response.data.token) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n    }\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      var _error$response$data, _error$response$data$, _error$response$data$2, _error$response$data2;\n      throw new Error(((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : (_error$response$data$ = _error$response$data.errors) === null || _error$response$data$ === void 0 ? void 0 : (_error$response$data$2 = _error$response$data$[0]) === null || _error$response$data$2 === void 0 ? void 0 : _error$response$data$2.msg) || ((_error$response$data2 = error.response.data) === null || _error$response$data2 === void 0 ? void 0 : _error$response$data2.message) || 'Registration failed');\n    } else {\n      throw new Error('Network error. Please try again.');\n    }\n  }\n};\nconst login = async userData => {\n  try {\n    const response = await api.post('/login', userData);\n\n    // Validate token before storage\n    if (!response.data.token || typeof response.data.token !== 'string') {\n      throw new Error('Invalid token received from server');\n    }\n    const tokenParts = response.data.token.split('.');\n    if (tokenParts.length !== 3) {\n      throw new Error('Received malformed token from server');\n    }\n\n    // Store token securely\n    const userDataToStore = {\n      token: response.data.token,\n      user: response.data.user\n    };\n    localStorage.setItem('user', JSON.stringify(userDataToStore));\n\n    // Verify storage worked\n    const storedData = localStorage.getItem('user');\n    if (!storedData || !JSON.parse(storedData).token) {\n      throw new Error('Failed to store token');\n    }\n    return response.data;\n  } catch (error) {\n    console.error('Login error:', error);\n    localStorage.removeItem('user');\n    throw error;\n  }\n};\nconst logout = () => {\n  localStorage.removeItem('user');\n};\nconst getUser = async () => {\n  const response = await api.get('/user');\n  return response.data;\n};\nconst updateFunds = async fundsData => {\n  const response = await api.post('/funds', fundsData);\n  return response.data;\n};\nconst authService = {\n  register,\n  login,\n  logout,\n  getUser,\n  updateFunds,\n  getAuthHeader\n};\nexport default authService;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","interceptors","request","use","config","userData","localStorage","getItem","parsed","JSON","parse","token","console","error","split","length","removeItem","headers","Authorization","Promise","reject","response","_error$response","status","window","location","href","getAuthHeader","user","register","post","data","setItem","stringify","_error$response$data","_error$response$data$","_error$response$data$2","_error$response$data2","Error","errors","msg","message","login","tokenParts","userDataToStore","storedData","logout","getUser","get","updateFunds","fundsData","authService"],"sources":["C:/Users/Shagun Khandelwal/zerodha/client/src/api/auth.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/auth';\r\n\r\n// Create axios instance with base URL\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n  try {\r\n    const userData = localStorage.getItem('user');\r\n    if (!userData) return config;\r\n    \r\n    const parsed = JSON.parse(userData);\r\n    if (!parsed?.token) {\r\n      console.error('No token found in storage');\r\n      return config;\r\n    }\r\n\r\n    // Validate token structure before attaching\r\n    if (typeof parsed.token !== 'string' || parsed.token.split('.').length !== 3) {\r\n      console.error('Invalid token structure in interceptor:', parsed.token);\r\n      localStorage.removeItem('user');\r\n      return config;\r\n    }\r\n\r\n    config.headers.Authorization = `Bearer ${parsed.token}`;\r\n    return config;\r\n  } catch (error) {\r\n    console.error('Interceptor error:', error);\r\n    return config;\r\n  }\r\n}, (error) => {\r\n  return Promise.reject(error);\r\n});\r\n// Enhanced response interceptor\r\napi.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst getAuthHeader = () => {\r\n  const userData = localStorage.getItem('user');\r\n  if (userData) {\r\n    const user = JSON.parse(userData);\r\n    if (user?.token) {\r\n      return { Authorization: `Bearer ${user.token}` };\r\n    }\r\n  }\r\n  return {};\r\n};\r\n\r\nconst register = async (userData) => {\r\n  try {\r\n    const response = await api.post('/register', userData);\r\n    if (response.data.token) {\r\n      localStorage.setItem('user', JSON.stringify(response.data));\r\n    }\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error.response) {\r\n      throw new Error(\r\n        error.response.data?.errors?.[0]?.msg || \r\n        error.response.data?.message || \r\n        'Registration failed'\r\n      );\r\n    } else {\r\n      throw new Error('Network error. Please try again.');\r\n    }\r\n  }\r\n};\r\n\r\nconst login = async (userData) => {\r\n  try {\r\n    const response = await api.post('/login', userData);\r\n    \r\n    // Validate token before storage\r\n    if (!response.data.token || typeof response.data.token !== 'string') {\r\n      throw new Error('Invalid token received from server');\r\n    }\r\n\r\n    const tokenParts = response.data.token.split('.');\r\n    if (tokenParts.length !== 3) {\r\n      throw new Error('Received malformed token from server');\r\n    }\r\n\r\n    // Store token securely\r\n    const userDataToStore = {\r\n      token: response.data.token,\r\n      user: response.data.user\r\n    };\r\n    \r\n    localStorage.setItem('user', JSON.stringify(userDataToStore));\r\n    \r\n    // Verify storage worked\r\n    const storedData = localStorage.getItem('user');\r\n    if (!storedData || !JSON.parse(storedData).token) {\r\n      throw new Error('Failed to store token');\r\n    }\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Login error:', error);\r\n    localStorage.removeItem('user');\r\n    throw error;\r\n  }\r\n};\r\nconst logout = () => {\r\n  localStorage.removeItem('user');\r\n};\r\n\r\nconst getUser = async () => {\r\n  const response = await api.get('/user');\r\n  return response.data;\r\n};\r\n\r\nconst updateFunds = async (fundsData) => {\r\n  const response = await api.post('/funds', fundsData);\r\n  return response.data;\r\n};\r\n\r\nconst authService = {\r\n  register,\r\n  login,\r\n  logout,\r\n  getUser,\r\n  updateFunds,\r\n   getAuthHeader,\r\n};\r\n\r\nexport default authService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shagun Khandelwal\\\\zerodha\\\\client\\\\src\\\\components\\\\AIPrediction\\\\AIPrediction.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './AIPrediction.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AIPrediction = () => {\n  _s();\n  const {\n    symbol\n  } = useParams();\n  const navigate = useNavigate();\n  const [prediction, setPrediction] = useState(null);\n  const [sentiment, setSentiment] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [news, setNews] = useState([]);\n\n  // API Keys\n  const FINNHUB_API_KEY = 'd1aopp9r01qjhvtqeebgd1aopp9r01qjhvtqeec0';\n  const OPENROUTER_API_KEY = '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';\n  const ALPHA_VANTAGE_KEY = 'OH0ZQBRUAB4ABC4X';\n\n  // Clean AI response by removing markdown hashes\n  const cleanPredictionText = text => {\n    return text.replace(/^#+\\s*/gm, '') // Remove markdown headers\n    .replace(/\\*\\*(.*?)\\*\\*/g, '$1') // Remove bold markdown\n    .split('\\n').filter(line => line.trim() !== '') // Remove empty lines\n    .map(line => line.trim());\n  };\n\n  // Generate AI prediction using OpenRouter API\n  const generateAIPrediction = async stockSymbol => {\n    try {\n      // Step 1: Gather data from APIs\n      const [priceData, newsData] = await Promise.all([axios.get(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${stockSymbol}&apikey=${ALPHA_VANTAGE_KEY}`), axios.get(`https://finnhub.io/api/v1/company-news?symbol=${stockSymbol}&from=${new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString().split('T')[0]}&to=${new Date().toISOString().split('T')[0]}&token=${FINNHUB_API_KEY}`)]);\n\n      // Step 2: Prepare data for AI analysis\n      const priceChange = priceData.data['Global Quote'] ? priceData.data['Global Quote']['10. change percent'] : 'No recent price data available';\n      const latestNews = newsData.data && newsData.data.length > 0 ? newsData.data.slice(0, 3).map(item => item.headline).join('\\n- ') : 'No recent news available';\n\n      // Step 3: Send to AI for prediction\n      const response = await axios.post('https://openrouter.ai/api/v1/chat/completions', {\n        model: \"openai/gpt-3.5-turbo\",\n        messages: [{\n          \"role\": \"system\",\n          \"content\": `You are an advanced stock prediction AI that analyzes multiple data points to forecast stock movements.\n                        Provide a detailed prediction for the next 24 hours including:\n                        - Predicted direction and percentage change\n                        - Key factors influencing the prediction\n                        - Confidence level (low/medium/high)\n                        - Technical analysis insights\n                        - Important disclaimer about predictions being speculative\n                        \n                        Format your response with clear sections and bullet points for better readability.\n                        Do not use markdown headers (###) or bold formatting.`\n        }, {\n          \"role\": \"user\",\n          \"content\": `Generate a 24-hour prediction for ${stockSymbol} based on:\n                        - Recent price change: ${priceChange}\n                        - Latest news headlines:\n                          - ${latestNews}`\n        }],\n        max_tokens: 1000\n      }, {\n        headers: {\n          'Authorization': `Bearer ${OPENROUTER_API_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const cleanedPrediction = cleanPredictionText(response.data.choices[0].message.content);\n      setPrediction(cleanedPrediction);\n\n      // Generate more realistic sentiment score based on price change\n      const priceChangeNum = parseFloat(priceChange) || 0;\n      const sentimentScore = Math.min(1, Math.max(-1, priceChangeNum / 5));\n      setSentiment({\n        sentiment: sentimentScore > 0.2 ? 'bullish' : sentimentScore < -0.2 ? 'bearish' : 'neutral',\n        score: sentimentScore.toFixed(2)\n      });\n    } catch (err) {\n      console.error(\"Error generating prediction:\", err);\n      setError('Failed to generate prediction. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch market news\n  const fetchStockNews = async stockSymbol => {\n    try {\n      const response = await axios.get(`https://finnhub.io/api/v1/company-news?symbol=${stockSymbol}&from=${new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]}&to=${new Date().toISOString().split('T')[0]}&token=${FINNHUB_API_KEY}`);\n      const filteredNews = response.data.filter(item => item.headline && item.image && item.url).slice(0, 5);\n      setNews(filteredNews);\n    } catch (err) {\n      console.error(\"Error fetching news:\", err);\n    }\n  };\n\n  // Load all data when symbol changes\n  useEffect(() => {\n    if (symbol) {\n      setLoading(true);\n      generateAIPrediction(symbol);\n      fetchStockNews(symbol);\n    }\n  }, [symbol]);\n  if (!symbol) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-prediction-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-icon\",\n          children: \"\\uD83D\\uDCC8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No Stock Selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please select a stock symbol to view AI predictions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/watchlist'),\n          className: \"primary-button\",\n          children: \"Browse Stocks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-prediction-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-prediction-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"stock-symbol\",\n          children: symbol.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stock-name\",\n          children: \"24-Hour AI Prediction Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(-1),\n        className: \"back-button\",\n        children: \"\\u2190 Back to Watchlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-state\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-animation\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Analyzing market data for \", symbol.toUpperCase(), \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-state\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-icon\",\n        children: \"\\u26A0\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Prediction Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"primary-button\",\n        children: \"Retry Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prediction-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prediction-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sentiment-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `sentiment-dot ${sentiment.sentiment}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sentiment-label\",\n                children: [sentiment.sentiment, \" sentiment (\", sentiment.score, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"prediction-title\",\n              children: \"AI Prediction Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prediction-content\",\n            children: prediction.map((line, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"prediction-line\",\n              children: line\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prediction-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"disclaimer\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Disclaimer: This AI-generated forecast is for informational purposes only and should not be considered financial advice.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => generateAIPrediction(symbol),\n              className: \"refresh-button\",\n              children: \"\\u21BB Refresh Prediction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"news-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Latest Market News\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), news.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"news-grid\",\n          children: news.map((item, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n            href: item.url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"news-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"news-image-container\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.image,\n                alt: item.headline,\n                className: \"news-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"news-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"news-headline\",\n                children: item.headline\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"news-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"news-source\",\n                  children: item.source\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"news-date\",\n                  children: new Date(item.datetime * 1000).toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"news-summary\",\n                children: item.summary || 'Read more...'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-news\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"No recent news found for \", symbol.toUpperCase()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(AIPrediction, \"MEiWloMXguAQpjL5P6VMS4cbVME=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AIPrediction;\nexport default AIPrediction;\nvar _c;\n$RefreshReg$(_c, \"AIPrediction\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AIPrediction","_s","symbol","navigate","prediction","setPrediction","sentiment","setSentiment","loading","setLoading","error","setError","news","setNews","FINNHUB_API_KEY","OPENROUTER_API_KEY","ALPHA_VANTAGE_KEY","cleanPredictionText","text","replace","split","filter","line","trim","map","generateAIPrediction","stockSymbol","priceData","newsData","Promise","all","get","Date","now","toISOString","priceChange","data","latestNews","length","slice","item","headline","join","response","post","model","messages","max_tokens","headers","cleanedPrediction","choices","message","content","priceChangeNum","parseFloat","sentimentScore","Math","min","max","score","toFixed","err","console","fetchStockNews","filteredNews","image","url","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toUpperCase","window","location","reload","i","index","href","target","rel","src","alt","source","datetime","toLocaleDateString","summary","_c","$RefreshReg$"],"sources":["C:/Users/Shagun Khandelwal/zerodha/client/src/components/AIPrediction/AIPrediction.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport './AIPrediction.css';\r\n\r\nconst AIPrediction = () => {\r\n  const { symbol } = useParams();\r\n  const navigate = useNavigate();\r\n  const [prediction, setPrediction] = useState(null);\r\n  const [sentiment, setSentiment] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [news, setNews] = useState([]);\r\n\r\n  // API Keys\r\n  const FINNHUB_API_KEY = 'd1aopp9r01qjhvtqeebgd1aopp9r01qjhvtqeec0';\r\n  const OPENROUTER_API_KEY = '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';\r\n  const ALPHA_VANTAGE_KEY = 'OH0ZQBRUAB4ABC4X';\r\n\r\n  // Clean AI response by removing markdown hashes\r\n  const cleanPredictionText = (text) => {\r\n    return text\r\n      .replace(/^#+\\s*/gm, '') // Remove markdown headers\r\n      .replace(/\\*\\*(.*?)\\*\\*/g, '$1') // Remove bold markdown\r\n      .split('\\n')\r\n      .filter(line => line.trim() !== '') // Remove empty lines\r\n      .map(line => line.trim());\r\n  };\r\n\r\n  // Generate AI prediction using OpenRouter API\r\n  const generateAIPrediction = async (stockSymbol) => {\r\n    try {\r\n      // Step 1: Gather data from APIs\r\n      const [priceData, newsData] = await Promise.all([\r\n        axios.get(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${stockSymbol}&apikey=${ALPHA_VANTAGE_KEY}`),\r\n        axios.get(`https://finnhub.io/api/v1/company-news?symbol=${stockSymbol}&from=${new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString().split('T')[0]}&to=${new Date().toISOString().split('T')[0]}&token=${FINNHUB_API_KEY}`),\r\n      ]);\r\n\r\n      // Step 2: Prepare data for AI analysis\r\n      const priceChange = priceData.data['Global Quote'] ? \r\n        priceData.data['Global Quote']['10. change percent'] : \r\n        'No recent price data available';\r\n      \r\n      const latestNews = newsData.data && newsData.data.length > 0 ? \r\n        newsData.data.slice(0, 3).map(item => item.headline).join('\\n- ') : \r\n        'No recent news available';\r\n\r\n      // Step 3: Send to AI for prediction\r\n      const response = await axios.post('https://openrouter.ai/api/v1/chat/completions', {\r\n        model: \"openai/gpt-3.5-turbo\",\r\n        messages: [\r\n          { \r\n            \"role\": \"system\", \r\n            \"content\": `You are an advanced stock prediction AI that analyzes multiple data points to forecast stock movements.\r\n                        Provide a detailed prediction for the next 24 hours including:\r\n                        - Predicted direction and percentage change\r\n                        - Key factors influencing the prediction\r\n                        - Confidence level (low/medium/high)\r\n                        - Technical analysis insights\r\n                        - Important disclaimer about predictions being speculative\r\n                        \r\n                        Format your response with clear sections and bullet points for better readability.\r\n                        Do not use markdown headers (###) or bold formatting.`\r\n          },\r\n          { \r\n            \"role\": \"user\", \r\n            \"content\": `Generate a 24-hour prediction for ${stockSymbol} based on:\r\n                        - Recent price change: ${priceChange}\r\n                        - Latest news headlines:\r\n                          - ${latestNews}`\r\n          }\r\n        ],\r\n        max_tokens: 1000\r\n      }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${OPENROUTER_API_KEY}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      const cleanedPrediction = cleanPredictionText(response.data.choices[0].message.content);\r\n      setPrediction(cleanedPrediction);\r\n      \r\n      // Generate more realistic sentiment score based on price change\r\n      const priceChangeNum = parseFloat(priceChange) || 0;\r\n      const sentimentScore = Math.min(1, Math.max(-1, priceChangeNum / 5));\r\n      setSentiment({\r\n        sentiment: sentimentScore > 0.2 ? 'bullish' : sentimentScore < -0.2 ? 'bearish' : 'neutral',\r\n        score: sentimentScore.toFixed(2)\r\n      });\r\n    } catch (err) {\r\n      console.error(\"Error generating prediction:\", err);\r\n      setError('Failed to generate prediction. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch market news\r\n  const fetchStockNews = async (stockSymbol) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://finnhub.io/api/v1/company-news?symbol=${stockSymbol}&from=${new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]}&to=${new Date().toISOString().split('T')[0]}&token=${FINNHUB_API_KEY}`\r\n      );\r\n      \r\n      const filteredNews = response.data\r\n        .filter(item => item.headline && item.image && item.url)\r\n        .slice(0, 5);\r\n      \r\n      setNews(filteredNews);\r\n    } catch (err) {\r\n      console.error(\"Error fetching news:\", err);\r\n    }\r\n  };\r\n\r\n  // Load all data when symbol changes\r\n  useEffect(() => {\r\n    if (symbol) {\r\n      setLoading(true);\r\n      generateAIPrediction(symbol);\r\n      fetchStockNews(symbol);\r\n    }\r\n  }, [symbol]);\r\n\r\n  if (!symbol) {\r\n    return (\r\n      <div className=\"ai-prediction-container\">\r\n        <div className=\"empty-state\">\r\n          <div className=\"empty-icon\">📈</div>\r\n          <h3>No Stock Selected</h3>\r\n          <p>Please select a stock symbol to view AI predictions</p>\r\n          <button onClick={() => navigate('/watchlist')} className=\"primary-button\">\r\n            Browse Stocks\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"ai-prediction-container\">\r\n      <div className=\"ai-prediction-header\">\r\n        <div className=\"header-content\">\r\n          <h1 className=\"stock-symbol\">{symbol.toUpperCase()}</h1>\r\n          <p className=\"stock-name\">24-Hour AI Prediction Analysis</p>\r\n        </div>\r\n        <button onClick={() => navigate(-1)} className=\"back-button\">\r\n          ← Back to Watchlist\r\n        </button>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <div className=\"loading-state\">\r\n          <div className=\"loading-animation\">\r\n            <div className=\"loading-bar\"></div>\r\n            <div className=\"loading-bar\"></div>\r\n            <div className=\"loading-bar\"></div>\r\n          </div>\r\n          <p>Analyzing market data for {symbol.toUpperCase()}...</p>\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"error-state\">\r\n          <div className=\"error-icon\">⚠️</div>\r\n          <h3>Prediction Error</h3>\r\n          <p>{error}</p>\r\n          <button onClick={() => window.location.reload()} className=\"primary-button\">\r\n            Retry Analysis\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {prediction && (\r\n            <div className=\"prediction-section\">\r\n              <div className=\"prediction-card\">\r\n                <div className=\"card-header\">\r\n                  <div className=\"sentiment-indicator\">\r\n                    <div className={`sentiment-dot ${sentiment.sentiment}`}></div>\r\n                    <span className=\"sentiment-label\">\r\n                      {sentiment.sentiment} sentiment ({sentiment.score})\r\n                    </span>\r\n                  </div>\r\n                  <h2 className=\"prediction-title\">AI Prediction Summary</h2>\r\n                </div>\r\n                \r\n                <div className=\"prediction-content\">\r\n                  {prediction.map((line, i) => (\r\n                    <p key={i} className=\"prediction-line\">{line}</p>\r\n                  ))}\r\n                </div>\r\n                \r\n                <div className=\"prediction-footer\">\r\n                  <div className=\"disclaimer\">\r\n                    <p>Disclaimer: This AI-generated forecast is for informational purposes only and should not be considered financial advice.</p>\r\n                  </div>\r\n                  <button \r\n                    onClick={() => generateAIPrediction(symbol)} \r\n                    className=\"refresh-button\"\r\n                  >\r\n                    ↻ Refresh Prediction\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"news-section\">\r\n            <h2 className=\"section-title\">Latest Market News</h2>\r\n            {news.length > 0 ? (\r\n              <div className=\"news-grid\">\r\n                {news.map((item, index) => (\r\n                  <a \r\n                    key={index} \r\n                    href={item.url} \r\n                    target=\"_blank\" \r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"news-card\"\r\n                  >\r\n                    <div className=\"news-image-container\">\r\n                      <img src={item.image} alt={item.headline} className=\"news-image\" />\r\n                    </div>\r\n                    <div className=\"news-content\">\r\n                      <h3 className=\"news-headline\">{item.headline}</h3>\r\n                      <div className=\"news-meta\">\r\n                        <span className=\"news-source\">{item.source}</span>\r\n                        <span className=\"news-date\">\r\n                          {new Date(item.datetime * 1000).toLocaleDateString()}\r\n                        </span>\r\n                      </div>\r\n                      <p className=\"news-summary\">{item.summary || 'Read more...'}</p>\r\n                    </div>\r\n                  </a>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"empty-news\">\r\n                <p>No recent news found for {symbol.toUpperCase()}</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AIPrediction;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
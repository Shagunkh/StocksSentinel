{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shagun Khandelwal\\\\zerodha\\\\client\\\\src\\\\components\\\\Watchlist\\\\Watchlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Watchlist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Watchlist = () => {\n  _s();\n  const FINNHUB_API_KEY = 'd17tfrhr01qteuvpuh10d17tfrhr01qteuvpuh1g';\n  const [marketIndices, setMarketIndices] = useState([]);\n  const [stocks, setStocks] = useState([]);\n  const [filteredStocks, setFilteredStocks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [socketStatus, setSocketStatus] = useState('disconnected');\n  const socketRef = useRef(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const reconnectTimerRef = useRef(null);\n  const isMountedRef = useRef(false);\n\n  // Filter stocks based on search term\n  useEffect(() => {\n    if (searchTerm === '') {\n      setFilteredStocks(stocks);\n    } else {\n      const filtered = stocks.filter(stock => stock.symbol.toLowerCase().includes(searchTerm.toLowerCase()));\n      setFilteredStocks(filtered);\n    }\n  }, [searchTerm, stocks]);\n\n  // WebSocket connection management\n  const setupWebSocket = () => {\n    // Clear any existing reconnection timer\n    if (reconnectTimerRef.current) {\n      clearTimeout(reconnectTimerRef.current);\n      reconnectTimerRef.current = null;\n    }\n\n    // Close existing connection if it exists\n    if (socketRef.current) {\n      socketRef.current.close();\n    }\n    setSocketStatus('connecting');\n    const ws = new WebSocket(`wss://ws.finnhub.io?token=${FINNHUB_API_KEY}`);\n    socketRef.current = ws;\n    ws.onopen = () => {\n      if (!isMountedRef.current) return;\n      console.log('WebSocket connected');\n      setSocketStatus('connected');\n      setError(null);\n      try {\n        // Subscribe to all stocks\n        stocks.forEach(stock => {\n          if (ws.readyState === WebSocket.OPEN) {\n            ws.send(JSON.stringify({\n              type: 'subscribe',\n              symbol: `BSE:${stock.symbol}`\n            }));\n          }\n        });\n        // Subscribe to indices\n        if (ws.readyState === WebSocket.OPEN) {\n          ws.send(JSON.stringify({\n            type: 'subscribe',\n            symbol: 'NSE:NIFTY_50'\n          }));\n          ws.send(JSON.stringify({\n            type: 'subscribe',\n            symbol: 'BSE:SENSEX'\n          }));\n        }\n      } catch (err) {\n        console.error('Error sending subscriptions:', err);\n        setError('Failed to subscribe to updates. Please refresh the page.');\n      }\n    };\n    ws.onmessage = e => {\n      if (!isMountedRef.current) return;\n      try {\n        const data = JSON.parse(e.data);\n        if (data.type === 'trade') {\n          const symbolParts = data.symbol.split(':');\n          const exchange = symbolParts[0];\n          const symbol = symbolParts[1];\n          const price = data.p;\n          if (exchange === 'BSE') {\n            setStocks(prevStocks => prevStocks.map(stock => stock.symbol === symbol ? {\n              ...stock,\n              price: price,\n              change: price - (stock.price - stock.change),\n              changePercent: (price - (stock.price - stock.change)) / (stock.price - stock.change) * 100\n            } : stock));\n          }\n          if (data.symbol === 'NSE:NIFTY_50' || data.symbol === 'BSE:SENSEX') {\n            setMarketIndices(prevIndices => prevIndices.map(index => index.name === (data.symbol.includes('NIFTY') ? 'NIFTY' : 'SENSEX') ? {\n              ...index,\n              value: price,\n              change: price - (index.value - index.change),\n              changePercent: (price - (index.value - index.change)) / (index.value - index.change) * 100\n            } : index));\n          }\n        }\n      } catch (err) {\n        console.error('Error processing WebSocket message:', err);\n      }\n    };\n    ws.onerror = err => {\n      if (!isMountedRef.current) return;\n      console.error('WebSocket error:', err);\n      setSocketStatus('error');\n      setError('Connection error. Attempting to reconnect...');\n      scheduleReconnect();\n    };\n    ws.onclose = e => {\n      if (!isMountedRef.current) return;\n      console.log('WebSocket disconnected', e.code, e.reason);\n      setSocketStatus('disconnected');\n\n      // Only attempt to reconnect if the close wasn't intentional\n      if (e.code !== 1000) {\n        setError('Connection lost. Attempting to reconnect...');\n        scheduleReconnect();\n      }\n    };\n  };\n  const scheduleReconnect = () => {\n    if (!isMountedRef.current) return;\n    if (reconnectTimerRef.current) return; // Already scheduled\n\n    reconnectTimerRef.current = setTimeout(() => {\n      if (!isMountedRef.current) return;\n      console.log('Attempting to reconnect...');\n      setupWebSocket();\n    }, 3000); // Try to reconnect after 3 seconds\n  };\n\n  // Initialize WebSocket connection after initial data is loaded\n  useEffect(() => {\n    isMountedRef.current = true;\n    if (loading || stocks.length === 0) return;\n    setupWebSocket();\n    return () => {\n      isMountedRef.current = false;\n\n      // Clean up WebSocket connection\n      if (socketRef.current) {\n        try {\n          // Unsubscribe from all stocks and indices\n          stocks.forEach(stock => {\n            socketRef.current.send(JSON.stringify({\n              type: 'unsubscribe',\n              symbol: `BSE:${stock.symbol}`\n            }));\n          });\n          socketRef.current.send(JSON.stringify({\n            type: 'unsubscribe',\n            symbol: 'NSE:NIFTY_50'\n          }));\n          socketRef.current.send(JSON.stringify({\n            type: 'unsubscribe',\n            symbol: 'BSE:SENSEX'\n          }));\n\n          // Close with normal status code (1000)\n          socketRef.current.close(1000, 'Component unmounting');\n        } catch (err) {\n          console.error('Error during WebSocket cleanup:', err);\n        }\n      }\n\n      // Clear any pending reconnection attempt\n      if (reconnectTimerRef.current) {\n        clearTimeout(reconnectTimerRef.current);\n      }\n    };\n  }, [loading, stocks]);\n\n  // Initial data fetch\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        const niftyResponse = await fetch(`https://finnhub.io/api/v1/quote?symbol=BSESN&token=${FINNHUB_API_KEY}`);\n        const sensexResponse = await fetch(`https://finnhub.io/api/v1/quote?symbol=BSE:SENSEX&token=${FINNHUB_API_KEY}`);\n        const niftyData = await niftyResponse.json();\n        const sensexData = await sensexResponse.json();\n        setMarketIndices([{\n          name: 'NIFTY',\n          number: '50',\n          value: niftyData.c,\n          change: niftyData.d,\n          changePercent: niftyData.dp\n        }, {\n          name: 'SENSEX',\n          number: '',\n          value: sensexData.c,\n          change: sensexData.d,\n          changePercent: sensexData.dp\n        }]);\n        const stockSymbols = ['AAPL', 'MSFT', 'PYPL', 'BABA', 'MSTR', 'GOOGL', 'AMZN', 'META', 'TSLA', 'NVDA', 'INTC', 'AMD', 'DIS', 'NFLX', 'ASML', 'QCOM', 'F', 'GM', 'HD', 'COST'];\n        const stockPromises = stockSymbols.map(symbol => fetch(`https://finnhub.io/api/v1/quote?symbol=${symbol}&token=${FINNHUB_API_KEY}`));\n        const stockResponses = await Promise.all(stockPromises);\n        const stockData = await Promise.all(stockResponses.map(res => res.json()));\n        const initialStocks = stockSymbols.map((symbol, index) => ({\n          symbol,\n          price: stockData[index].c,\n          change: stockData[index].d,\n          changePercent: stockData[index].dp\n        }));\n        setStocks(initialStocks);\n        setFilteredStocks(initialStocks);\n        setLoading(false);\n      } catch (err) {\n        console.error('Initial fetch failed:', err);\n        setError('Failed to load initial data. Trying real-time connection...');\n        setLoading(false);\n      }\n    };\n    fetchInitialData();\n  }, []);\n  const formatNumber = num => {\n    if (num === undefined || num === null) return '--';\n    return num.toLocaleString('en-IN', {\n      maximumFractionDigits: 2\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"watchlist-loading\",\n      children: \"Loading market data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"watchlist\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `connection-status ${socketStatus}`,\n      children: socketStatus === 'connected' ? 'Live' : socketStatus === 'connecting' ? 'Connecting...' : socketStatus === 'error' ? 'Connection Error' : 'Disconnected'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"watchlist-search\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search stocks...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        className: \"search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"market-data-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stock-list\",\n      children: filteredStocks.length > 0 ? filteredStocks.map((stock, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stock-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stock-symbol\",\n            children: stock.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `stock-change ${stock.change >= 0 ? 'positive' : 'negative'}`,\n            children: [stock.change >= 0 ? '+' : '', formatNumber(stock.change)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-price\",\n          children: formatNumber(stock.price)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 15\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results\",\n        children: \"No stocks found matching your search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s(Watchlist, \"kBS8cpjVyzCMahZOYCkohN3Q4Lg=\");\n_c = Watchlist;\nexport default Watchlist;\nvar _c;\n$RefreshReg$(_c, \"Watchlist\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Watchlist","_s","FINNHUB_API_KEY","marketIndices","setMarketIndices","stocks","setStocks","filteredStocks","setFilteredStocks","loading","setLoading","error","setError","socketStatus","setSocketStatus","socketRef","searchTerm","setSearchTerm","reconnectTimerRef","isMountedRef","filtered","filter","stock","symbol","toLowerCase","includes","setupWebSocket","current","clearTimeout","close","ws","WebSocket","onopen","console","log","forEach","readyState","OPEN","send","JSON","stringify","type","err","onmessage","e","data","parse","symbolParts","split","exchange","price","p","prevStocks","map","change","changePercent","prevIndices","index","name","value","onerror","scheduleReconnect","onclose","code","reason","setTimeout","length","fetchInitialData","niftyResponse","fetch","sensexResponse","niftyData","json","sensexData","number","c","d","dp","stockSymbols","stockPromises","stockResponses","Promise","all","stockData","res","initialStocks","formatNumber","num","undefined","toLocaleString","maximumFractionDigits","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","target","i","_c","$RefreshReg$"],"sources":["C:/Users/Shagun Khandelwal/zerodha/client/src/components/Watchlist/Watchlist.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './Watchlist.css';\r\n\r\nconst Watchlist = () => {\r\n  const FINNHUB_API_KEY = 'd17tfrhr01qteuvpuh10d17tfrhr01qteuvpuh1g'; \r\n  const [marketIndices, setMarketIndices] = useState([]);\r\n  const [stocks, setStocks] = useState([]);\r\n  const [filteredStocks, setFilteredStocks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [socketStatus, setSocketStatus] = useState('disconnected');\r\n  const socketRef = useRef(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const reconnectTimerRef = useRef(null);\r\n  const isMountedRef = useRef(false);\r\n\r\n  // Filter stocks based on search term\r\n  useEffect(() => {\r\n    if (searchTerm === '') {\r\n      setFilteredStocks(stocks);\r\n    } else {\r\n      const filtered = stocks.filter(stock => \r\n        stock.symbol.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n      setFilteredStocks(filtered);\r\n    }\r\n  }, [searchTerm, stocks]);\r\n\r\n  // WebSocket connection management\r\n  const setupWebSocket = () => {\r\n    // Clear any existing reconnection timer\r\n    if (reconnectTimerRef.current) {\r\n      clearTimeout(reconnectTimerRef.current);\r\n      reconnectTimerRef.current = null;\r\n    }\r\n\r\n    // Close existing connection if it exists\r\n    if (socketRef.current) {\r\n      socketRef.current.close();\r\n    }\r\n\r\n    setSocketStatus('connecting');\r\n    const ws = new WebSocket(`wss://ws.finnhub.io?token=${FINNHUB_API_KEY}`);\r\n    socketRef.current = ws;\r\n\r\n    ws.onopen = () => {\r\n      if (!isMountedRef.current) return;\r\n      console.log('WebSocket connected');\r\n      setSocketStatus('connected');\r\n      setError(null);\r\n      \r\n      try {\r\n        // Subscribe to all stocks\r\n        stocks.forEach(stock => {\r\n          if (ws.readyState === WebSocket.OPEN) {\r\n            ws.send(JSON.stringify({ type: 'subscribe', symbol: `BSE:${stock.symbol}` }));\r\n          }\r\n        });\r\n        // Subscribe to indices\r\n        if (ws.readyState === WebSocket.OPEN) {\r\n          ws.send(JSON.stringify({ type: 'subscribe', symbol: 'NSE:NIFTY_50' }));\r\n          ws.send(JSON.stringify({ type: 'subscribe', symbol: 'BSE:SENSEX' }));\r\n        }\r\n      } catch (err) {\r\n        console.error('Error sending subscriptions:', err);\r\n        setError('Failed to subscribe to updates. Please refresh the page.');\r\n      }\r\n    };\r\n\r\n    ws.onmessage = (e) => {\r\n      if (!isMountedRef.current) return;\r\n      try {\r\n        const data = JSON.parse(e.data);\r\n        if (data.type === 'trade') {\r\n          const symbolParts = data.symbol.split(':');\r\n          const exchange = symbolParts[0];\r\n          const symbol = symbolParts[1];\r\n          const price = data.p;\r\n\r\n          if (exchange === 'BSE') {\r\n            setStocks(prevStocks => \r\n              prevStocks.map(stock => \r\n                stock.symbol === symbol \r\n                  ? { \r\n                      ...stock, \r\n                      price: price,\r\n                      change: price - (stock.price - stock.change),\r\n                      changePercent: ((price - (stock.price - stock.change)) / (stock.price - stock.change)) * 100\r\n                    } \r\n                  : stock\r\n              )\r\n            );\r\n          }\r\n\r\n          if (data.symbol === 'NSE:NIFTY_50' || data.symbol === 'BSE:SENSEX') {\r\n            setMarketIndices(prevIndices => \r\n              prevIndices.map(index => \r\n                index.name === (data.symbol.includes('NIFTY') ? 'NIFTY' : 'SENSEX')\r\n                  ? {\r\n                      ...index,\r\n                      value: price,\r\n                      change: price - (index.value - index.change),\r\n                      changePercent: ((price - (index.value - index.change)) / (index.value - index.change)) * 100\r\n                    }\r\n                  : index\r\n              )\r\n            );\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error('Error processing WebSocket message:', err);\r\n      }\r\n    };\r\n\r\n    ws.onerror = (err) => {\r\n      if (!isMountedRef.current) return;\r\n      console.error('WebSocket error:', err);\r\n      setSocketStatus('error');\r\n      setError('Connection error. Attempting to reconnect...');\r\n      scheduleReconnect();\r\n    };\r\n\r\n    ws.onclose = (e) => {\r\n      if (!isMountedRef.current) return;\r\n      console.log('WebSocket disconnected', e.code, e.reason);\r\n      setSocketStatus('disconnected');\r\n      \r\n      // Only attempt to reconnect if the close wasn't intentional\r\n      if (e.code !== 1000) {\r\n        setError('Connection lost. Attempting to reconnect...');\r\n        scheduleReconnect();\r\n      }\r\n    };\r\n  };\r\n\r\n  const scheduleReconnect = () => {\r\n    if (!isMountedRef.current) return;\r\n    if (reconnectTimerRef.current) return; // Already scheduled\r\n    \r\n    reconnectTimerRef.current = setTimeout(() => {\r\n      if (!isMountedRef.current) return;\r\n      console.log('Attempting to reconnect...');\r\n      setupWebSocket();\r\n    }, 3000); // Try to reconnect after 3 seconds\r\n  };\r\n\r\n  // Initialize WebSocket connection after initial data is loaded\r\n  useEffect(() => {\r\n    isMountedRef.current = true;\r\n    \r\n    if (loading || stocks.length === 0) return;\r\n    \r\n    setupWebSocket();\r\n\r\n    return () => {\r\n      isMountedRef.current = false;\r\n      \r\n      // Clean up WebSocket connection\r\n      if (socketRef.current) {\r\n        try {\r\n          // Unsubscribe from all stocks and indices\r\n          stocks.forEach(stock => {\r\n            socketRef.current.send(JSON.stringify({ type: 'unsubscribe', symbol: `BSE:${stock.symbol}` }));\r\n          });\r\n          socketRef.current.send(JSON.stringify({ type: 'unsubscribe', symbol: 'NSE:NIFTY_50' }));\r\n          socketRef.current.send(JSON.stringify({ type: 'unsubscribe', symbol: 'BSE:SENSEX' }));\r\n          \r\n          // Close with normal status code (1000)\r\n          socketRef.current.close(1000, 'Component unmounting');\r\n        } catch (err) {\r\n          console.error('Error during WebSocket cleanup:', err);\r\n        }\r\n      }\r\n      \r\n      // Clear any pending reconnection attempt\r\n      if (reconnectTimerRef.current) {\r\n        clearTimeout(reconnectTimerRef.current);\r\n      }\r\n    };\r\n  }, [loading, stocks]);\r\n\r\n  // Initial data fetch\r\n  useEffect(() => {\r\n    const fetchInitialData = async () => {\r\n      try {\r\n        const niftyResponse = await fetch(\r\n          `https://finnhub.io/api/v1/quote?symbol=BSESN&token=${FINNHUB_API_KEY}`\r\n        );\r\n        \r\n        const sensexResponse = await fetch(\r\n          `https://finnhub.io/api/v1/quote?symbol=BSE:SENSEX&token=${FINNHUB_API_KEY}`\r\n        );\r\n        \r\n        const niftyData = await niftyResponse.json();\r\n        const sensexData = await sensexResponse.json();\r\n\r\n        setMarketIndices([\r\n          { \r\n            name: 'NIFTY', \r\n            number: '50', \r\n            value: niftyData.c, \r\n            change: niftyData.d, \r\n            changePercent: niftyData.dp \r\n          },\r\n          { \r\n            name: 'SENSEX', \r\n            number: '', \r\n            value: sensexData.c, \r\n            change: sensexData.d, \r\n            changePercent: sensexData.dp \r\n          }\r\n        ]);\r\n\r\n        const stockSymbols = [\r\n          'AAPL', 'MSFT', 'PYPL', 'BABA', 'MSTR', \r\n          'GOOGL', 'AMZN', 'META', 'TSLA', 'NVDA', \r\n          'INTC', 'AMD', 'DIS', 'NFLX', 'ASML', \r\n          'QCOM', 'F', 'GM', 'HD', 'COST'\r\n        ];\r\n        \r\n        const stockPromises = stockSymbols.map(symbol => \r\n          fetch(`https://finnhub.io/api/v1/quote?symbol=${symbol}&token=${FINNHUB_API_KEY}`)\r\n        );\r\n\r\n        const stockResponses = await Promise.all(stockPromises);\r\n        const stockData = await Promise.all(stockResponses.map(res => res.json()));\r\n\r\n        const initialStocks = stockSymbols.map((symbol, index) => ({\r\n          symbol,\r\n          price: stockData[index].c,\r\n          change: stockData[index].d,\r\n          changePercent: stockData[index].dp\r\n        }));\r\n\r\n        setStocks(initialStocks);\r\n        setFilteredStocks(initialStocks);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Initial fetch failed:', err);\r\n        setError('Failed to load initial data. Trying real-time connection...');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchInitialData();\r\n  }, []);\r\n\r\n  const formatNumber = (num) => {\r\n    if (num === undefined || num === null) return '--';\r\n    return num.toLocaleString('en-IN', { maximumFractionDigits: 2 });\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"watchlist-loading\">Loading market data...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"watchlist\">\r\n      {/* Connection status indicator */}\r\n      <div className={`connection-status ${socketStatus}`}>\r\n        {socketStatus === 'connected' ? 'Live' : \r\n         socketStatus === 'connecting' ? 'Connecting...' : \r\n         socketStatus === 'error' ? 'Connection Error' : 'Disconnected'}\r\n      </div>\r\n\r\n      {/* Search Bar */}\r\n      <div className=\"watchlist-search\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search stocks...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          className=\"search-input\"\r\n        />\r\n      </div>\r\n\r\n      {error && (\r\n        <div className=\"market-data-error\">\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      {/* Stock List */}\r\n      <div className=\"stock-list\">\r\n        {filteredStocks.length > 0 ? (\r\n          filteredStocks.map((stock, i) => (\r\n            <div key={i} className=\"stock-row\">\r\n              <div className=\"stock-info\">\r\n                <div className=\"stock-symbol\">{stock.symbol}</div>\r\n                <div className={`stock-change ${stock.change >= 0 ? 'positive' : 'negative'}`}>\r\n                  {stock.change >= 0 ? '+' : ''}{formatNumber(stock.change)}\r\n                </div>\r\n              </div>\r\n              <div className=\"stock-price\">{formatNumber(stock.price)}</div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div className=\"no-results\">No stocks found matching your search</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Watchlist;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
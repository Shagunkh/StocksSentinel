{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/auth';\n\n// Create axios instance with base URL\nconst api = axios.create({\n  baseURL: API_URL\n});\napi.interceptors.request.use(config => {\n  try {\n    const userData = localStorage.getItem('user');\n    if (userData) {\n      const parsed = JSON.parse(userData);\n\n      // Validate stored token\n      if (parsed !== null && parsed !== void 0 && parsed.token && typeof parsed.token === 'string') {\n        const tokenParts = parsed.token.split('.');\n        if (tokenParts.length === 3) {\n          config.headers.Authorization = `Bearer ${parsed.token}`;\n        } else {\n          console.error('Malformed token in storage');\n          localStorage.removeItem('user');\n        }\n      }\n    }\n    return config;\n  } catch (error) {\n    console.error('Interceptor error:', error);\n    return config;\n  }\n});\n// Enhanced response interceptor\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nconst getAuthHeader = () => {\n  const userData = localStorage.getItem('user');\n  if (userData) {\n    const user = JSON.parse(userData);\n    if (user !== null && user !== void 0 && user.token) {\n      return {\n        Authorization: `Bearer ${user.token}`\n      };\n    }\n  }\n  return {};\n};\nconst register = async userData => {\n  try {\n    const response = await api.post('/register', userData);\n    if (response.data.token) {\n      localStorage.setItem('user', JSON.stringify(response.data));\n    }\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      var _error$response$data, _error$response$data$, _error$response$data$2, _error$response$data2;\n      throw new Error(((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : (_error$response$data$ = _error$response$data.errors) === null || _error$response$data$ === void 0 ? void 0 : (_error$response$data$2 = _error$response$data$[0]) === null || _error$response$data$2 === void 0 ? void 0 : _error$response$data$2.msg) || ((_error$response$data2 = error.response.data) === null || _error$response$data2 === void 0 ? void 0 : _error$response$data2.message) || 'Registration failed');\n    } else {\n      throw new Error('Network error. Please try again.');\n    }\n  }\n};\nconst login = async userData => {\n  const response = await api.post('/login', userData);\n  if (response.data.token) {\n    // Store token properly\n    localStorage.setItem('user', JSON.stringify({\n      token: response.data.token,\n      // Store the raw token string\n      user: response.data.user\n    }));\n  }\n  return response.data;\n};\nconst logout = () => {\n  localStorage.removeItem('user');\n};\nconst getUser = async () => {\n  const response = await api.get('/user');\n  return response.data;\n};\nconst updateFunds = async fundsData => {\n  const response = await api.post('/funds', fundsData);\n  return response.data;\n};\nconst authService = {\n  register,\n  login,\n  logout,\n  getUser,\n  updateFunds,\n  getAuthHeader\n};\nexport default authService;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","interceptors","request","use","config","userData","localStorage","getItem","parsed","JSON","parse","token","tokenParts","split","length","headers","Authorization","console","error","removeItem","response","_error$response","status","window","location","href","Promise","reject","getAuthHeader","user","register","post","data","setItem","stringify","_error$response$data","_error$response$data$","_error$response$data$2","_error$response$data2","Error","errors","msg","message","login","logout","getUser","get","updateFunds","fundsData","authService"],"sources":["C:/Users/Shagun Khandelwal/zerodha/client/src/api/auth.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/auth';\r\n\r\n// Create axios instance with base URL\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n});\r\n\r\napi.interceptors.request.use((config) => {\r\n  try {\r\n    const userData = localStorage.getItem('user');\r\n    if (userData) {\r\n      const parsed = JSON.parse(userData);\r\n      \r\n      // Validate stored token\r\n      if (parsed?.token && typeof parsed.token === 'string') {\r\n        const tokenParts = parsed.token.split('.');\r\n        if (tokenParts.length === 3) {\r\n          config.headers.Authorization = `Bearer ${parsed.token}`;\r\n        } else {\r\n          console.error('Malformed token in storage');\r\n          localStorage.removeItem('user');\r\n        }\r\n      }\r\n    }\r\n    return config;\r\n  } catch (error) {\r\n    console.error('Interceptor error:', error);\r\n    return config;\r\n  }\r\n});\r\n// Enhanced response interceptor\r\napi.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst getAuthHeader = () => {\r\n  const userData = localStorage.getItem('user');\r\n  if (userData) {\r\n    const user = JSON.parse(userData);\r\n    if (user?.token) {\r\n      return { Authorization: `Bearer ${user.token}` };\r\n    }\r\n  }\r\n  return {};\r\n};\r\n\r\nconst register = async (userData) => {\r\n  try {\r\n    const response = await api.post('/register', userData);\r\n    if (response.data.token) {\r\n      localStorage.setItem('user', JSON.stringify(response.data));\r\n    }\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error.response) {\r\n      throw new Error(\r\n        error.response.data?.errors?.[0]?.msg || \r\n        error.response.data?.message || \r\n        'Registration failed'\r\n      );\r\n    } else {\r\n      throw new Error('Network error. Please try again.');\r\n    }\r\n  }\r\n};\r\n\r\nconst login = async (userData) => {\r\n  const response = await api.post('/login', userData);\r\n  if (response.data.token) {\r\n    // Store token properly\r\n    localStorage.setItem('user', JSON.stringify({\r\n      token: response.data.token,  // Store the raw token string\r\n      user: response.data.user\r\n    }));\r\n  }\r\n  return response.data;\r\n};\r\nconst logout = () => {\r\n  localStorage.removeItem('user');\r\n};\r\n\r\nconst getUser = async () => {\r\n  const response = await api.get('/user');\r\n  return response.data;\r\n};\r\n\r\nconst updateFunds = async (fundsData) => {\r\n  const response = await api.post('/funds', fundsData);\r\n  return response.data;\r\n};\r\n\r\nconst authService = {\r\n  register,\r\n  login,\r\n  logout,\r\n  getUser,\r\n  updateFunds,\r\n   getAuthHeader,\r\n};\r\n\r\nexport default authService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shagun Khandelwal\\\\zerodha\\\\client\\\\src\\\\components\\\\AIPrediction\\\\AIPrediction.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './AIPrediction.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AIPrediction = () => {\n  _s();\n  const {\n    symbol\n  } = useParams();\n  const navigate = useNavigate();\n  const [prediction, setPrediction] = useState(null);\n  const [sentiment, setSentiment] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [news, setNews] = useState([]);\n  const [priceData, setPriceData] = useState(null);\n  const [technicalIndicators, setTechnicalIndicators] = useState(null);\n  const [marketSentiment, setMarketSentiment] = useState(null);\n  const [volumeData, setVolumeData] = useState({\n    average: null,\n    current: null,\n    trend: null\n  });\n  const [priceTrend, setPriceTrend] = useState({\n    direction: null,\n    strength: null\n  });\n\n  // API Keys (consider moving these to environment variables)\n  const FINNHUB_API_KEY = 'd1aopp9r01qjhvtqeebgd1aopp9r01qjhvtqeec0';\n  const OPENROUTER_API_KEY = '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';\n  const ALPHA_VANTAGE_KEY = 'OH0ZQBRUAB4ABC4X';\n  const POLYGON_API_KEY = 'TpJTOM9gDn4q_3d1L0Gyp4mFlap7OSLh';\n  const TWELVE_DATA_KEY = '689a986b8a534491b05fff638cd7f1b1';\n\n  // Clean AI response by removing markdown and formatting\n  const cleanPredictionText = text => {\n    return text.replace(/^#+\\s*/gm, '') // Remove markdown headers\n    .replace(/\\*\\*(.*?)\\*\\*/g, '$1') // Remove bold markdown\n    .replace(/\\[(.*?)\\]\\(.*?\\)/g, '$1') // Remove markdown links\n    .split('\\n').filter(line => line.trim() !== '') // Remove empty lines\n    .map(line => line.trim());\n  };\n\n  // Fetch technical indicators from multiple sources\n  const fetchTechnicalIndicators = async symbol => {\n    try {\n      var _alphaResponse$data, _alphaResponse$data$T, _twelveResponse$data, _twelveResponse$data$, _twelveResponse$data$2;\n      // Fetch from Alpha Vantage\n      const alphaResponse = await axios.get(`https://www.alphavantage.co/query?function=RSI&symbol=${symbol}&interval=daily&time_period=14&series_type=close&apikey=${ALPHA_VANTAGE_KEY}`);\n\n      // Fetch from Twelve Data (fallback)\n      const twelveResponse = await axios.get(`https://api.twelvedata.com/rsi?symbol=${symbol}&interval=1day&outputsize=30&apikey=${TWELVE_DATA_KEY}`);\n\n      // Process indicators\n      const indicators = {\n        rsi: ((_alphaResponse$data = alphaResponse.data) === null || _alphaResponse$data === void 0 ? void 0 : (_alphaResponse$data$T = _alphaResponse$data.TechnicalAnalysis) === null || _alphaResponse$data$T === void 0 ? void 0 : _alphaResponse$data$T.RSI) || ((_twelveResponse$data = twelveResponse.data) === null || _twelveResponse$data === void 0 ? void 0 : (_twelveResponse$data$ = _twelveResponse$data.values) === null || _twelveResponse$data$ === void 0 ? void 0 : (_twelveResponse$data$2 = _twelveResponse$data$[0]) === null || _twelveResponse$data$2 === void 0 ? void 0 : _twelveResponse$data$2.rsi) || null\n        // Add more indicators as needed\n      };\n      setTechnicalIndicators(indicators);\n      return indicators;\n    } catch (err) {\n      console.error(\"Error fetching technical indicators:\", err);\n      return null;\n    }\n  };\n\n  // Fetch broader market sentiment\n  const fetchMarketSentiment = async () => {\n    try {\n      var _fgiResponse$data, _fgiResponse$data$dat, _fgiResponse$data$dat2, _indicesResponse$data, _indicesResponse$data2, _indicesResponse$data3, _indicesResponse$data4, _indicesResponse$data5, _indicesResponse$data6, _indicesResponse$data7, _indicesResponse$data8, _indicesResponse$data9;\n      // Fetch fear and greed index\n      const fgiResponse = await axios.get('https://api.alternative.me/fng/?limit=1');\n\n      // Fetch major indices performance\n      const indicesResponse = await axios.get(`https://www.alphavantage.co/query?function=BATCH_STOCK_QUOTES&symbols=SPY,QQQ,DIA&apikey=${ALPHA_VANTAGE_KEY}`);\n      const sentimentData = {\n        fearGreedIndex: ((_fgiResponse$data = fgiResponse.data) === null || _fgiResponse$data === void 0 ? void 0 : (_fgiResponse$data$dat = _fgiResponse$data.data) === null || _fgiResponse$data$dat === void 0 ? void 0 : (_fgiResponse$data$dat2 = _fgiResponse$data$dat[0]) === null || _fgiResponse$data$dat2 === void 0 ? void 0 : _fgiResponse$data$dat2.value) || null,\n        spyChange: ((_indicesResponse$data = indicesResponse.data) === null || _indicesResponse$data === void 0 ? void 0 : (_indicesResponse$data2 = _indicesResponse$data.StockQuotes) === null || _indicesResponse$data2 === void 0 ? void 0 : (_indicesResponse$data3 = _indicesResponse$data2[0]) === null || _indicesResponse$data3 === void 0 ? void 0 : _indicesResponse$data3.change) || null,\n        qqqChange: ((_indicesResponse$data4 = indicesResponse.data) === null || _indicesResponse$data4 === void 0 ? void 0 : (_indicesResponse$data5 = _indicesResponse$data4.StockQuotes) === null || _indicesResponse$data5 === void 0 ? void 0 : (_indicesResponse$data6 = _indicesResponse$data5[1]) === null || _indicesResponse$data6 === void 0 ? void 0 : _indicesResponse$data6.change) || null,\n        diaChange: ((_indicesResponse$data7 = indicesResponse.data) === null || _indicesResponse$data7 === void 0 ? void 0 : (_indicesResponse$data8 = _indicesResponse$data7.StockQuotes) === null || _indicesResponse$data8 === void 0 ? void 0 : (_indicesResponse$data9 = _indicesResponse$data8[2]) === null || _indicesResponse$data9 === void 0 ? void 0 : _indicesResponse$data9.change) || null\n      };\n      setMarketSentiment(sentimentData);\n      return sentimentData;\n    } catch (err) {\n      console.error(\"Error fetching market sentiment:\", err);\n      return null;\n    }\n  };\n\n  // Enhanced sentiment analysis with NLP techniques\n  const calculateEnhancedSentiment = (priceChange, newsItems, technicalIndicators, marketSentiment) => {\n    // Base sentiment from price change (-1 to 1)\n    const priceChangeNum = parseFloat(priceChange) || 0;\n    let sentimentScore = Math.min(1, Math.max(-1, priceChangeNum / 5));\n\n    // Technical indicators influence\n    if (technicalIndicators !== null && technicalIndicators !== void 0 && technicalIndicators.rsi) {\n      const rsi = parseFloat(technicalIndicators.rsi);\n      // RSI between 30-70 is neutral, below 30 is oversold (bullish), above 70 is overbought (bearish)\n      const rsiInfluence = rsi < 30 ? 0.2 : rsi > 70 ? -0.2 : 0;\n      sentimentScore += rsiInfluence;\n    }\n\n    // Market sentiment influence\n    if (marketSentiment) {\n      // Fear and greed index (0-100, 0=extreme fear, 100=extreme greed)\n      const fgi = parseFloat(marketSentiment.fearGreedIndex) || 50;\n      const fgiInfluence = (fgi - 50) / 100; // Normalize to -0.5 to 0.5\n      sentimentScore += fgiInfluence * 0.3;\n\n      // Major indices performance\n      const spyChange = parseFloat(marketSentiment.spyChange) || 0;\n      const qqqChange = parseFloat(marketSentiment.qqqChange) || 0;\n      const diaChange = parseFloat(marketSentiment.diaChange) || 0;\n      const marketPerformance = (spyChange + qqqChange + diaChange) / 3;\n      sentimentScore += marketPerformance / 10;\n    }\n\n    // Enhanced news analysis with more sophisticated NLP\n    if (newsItems && newsItems.length > 0) {\n      let newsSentiment = 0;\n      const sentimentWords = {\n        positive: ['up', 'rise', 'gain', 'strong', 'beat', 'bullish', 'buy', 'outperform', 'positive', 'growth'],\n        negative: ['down', 'fall', 'drop', 'weak', 'miss', 'bearish', 'sell', 'underperform', 'negative', 'decline'],\n        strongPositive: ['surge', 'soar', 'rocket', 'record high', 'breakout', 'upgrade'],\n        strongNegative: ['plunge', 'crash', 'collapse', 'record low', 'downgrade', 'bankrupt']\n      };\n      newsItems.forEach(item => {\n        const headline = item.headline.toLowerCase();\n        const summary = (item.summary || '').toLowerCase();\n\n        // Check for sentiment words with different weights\n        sentimentWords.strongPositive.forEach(word => {\n          if (headline.includes(word) || summary.includes(word)) {\n            newsSentiment += 0.3;\n          }\n        });\n        sentimentWords.positive.forEach(word => {\n          if (headline.includes(word) || summary.includes(word)) {\n            newsSentiment += 0.1;\n          }\n        });\n        sentimentWords.negative.forEach(word => {\n          if (headline.includes(word) || summary.includes(word)) {\n            newsSentiment -= 0.1;\n          }\n        });\n        sentimentWords.strongNegative.forEach(word => {\n          if (headline.includes(word) || summary.includes(word)) {\n            newsSentiment -= 0.3;\n          }\n        });\n\n        // Check for sentiment shifters\n        if (headline.includes('but') || summary.includes('however')) {\n          newsSentiment *= 0.7; // Reduce sentiment impact for contradictory statements\n        }\n        if (headline.includes('!')) {\n          newsSentiment *= 1.2; // Amplify sentiment for emphatic statements\n        }\n      });\n\n      // Average news sentiment and combine with other factors\n      newsSentiment = newsSentiment / newsItems.length;\n      sentimentScore = sentimentScore * 0.5 + newsSentiment * 0.3 + ((technicalIndicators ? 0.1 : 0) + (marketSentiment ? 0.1 : 0));\n    }\n\n    // Normalize between -1 and 1\n    sentimentScore = Math.min(1, Math.max(-1, sentimentScore));\n\n    // Determine sentiment label with more granularity\n    let sentimentLabel;\n    if (sentimentScore > 0.6) {\n      sentimentLabel = 'extremely bullish';\n    } else if (sentimentScore > 0.3) {\n      sentimentLabel = 'strongly bullish';\n    } else if (sentimentScore > 0.1) {\n      sentimentLabel = 'bullish';\n    } else if (sentimentScore < -0.6) {\n      sentimentLabel = 'extremely bearish';\n    } else if (sentimentScore < -0.3) {\n      sentimentLabel = 'strongly bearish';\n    } else if (sentimentScore < -0.1) {\n      sentimentLabel = 'bearish';\n    } else {\n      sentimentLabel = 'neutral';\n    }\n    return {\n      score: sentimentScore.toFixed(2),\n      label: sentimentLabel,\n      confidence: Math.abs(sentimentScore) > 0.5 ? 'high' : Math.abs(sentimentScore) > 0.2 ? 'medium' : 'low'\n    };\n  };\n\n  // Fetch historical data for trend analysis with fallbacks\n  const fetchHistoricalData = async symbol => {\n    try {\n      var _last5Days$, _last5Days$2;\n      // Try Alpha Vantage first\n      const alphaResponse = await axios.get(`https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol}&outputsize=compact&apikey=${ALPHA_VANTAGE_KEY}`);\n      let timeSeries = alphaResponse.data['Time Series (Daily)'];\n      let source = 'Alpha Vantage';\n\n      // Fallback to Twelve Data if Alpha Vantage fails\n      if (!timeSeries) {\n        var _twelveResponse$data2, _twelveResponse$data3;\n        const twelveResponse = await axios.get(`https://api.twelvedata.com/time_series?symbol=${symbol}&interval=1day&outputsize=5&apikey=${TWELVE_DATA_KEY}`);\n        timeSeries = (_twelveResponse$data2 = twelveResponse.data) === null || _twelveResponse$data2 === void 0 ? void 0 : (_twelveResponse$data3 = _twelveResponse$data2.values) === null || _twelveResponse$data3 === void 0 ? void 0 : _twelveResponse$data3.reduce((acc, val) => {\n          acc[val.datetime] = {\n            '4. close': val.close,\n            '5. volume': val.volume\n          };\n          return acc;\n        }, {});\n        source = 'Twelve Data';\n      }\n\n      // Fallback to Polygon if both fail\n      if (!timeSeries) {\n        var _polygonResponse$data, _polygonResponse$data2;\n        const polygonResponse = await axios.get(`https://api.polygon.io/v2/aggs/ticker/${symbol}/range/1/day/${new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]}/${new Date().toISOString().split('T')[0]}?apiKey=${POLYGON_API_KEY}`);\n        timeSeries = (_polygonResponse$data = polygonResponse.data) === null || _polygonResponse$data === void 0 ? void 0 : (_polygonResponse$data2 = _polygonResponse$data.results) === null || _polygonResponse$data2 === void 0 ? void 0 : _polygonResponse$data2.reduce((acc, val) => {\n          const date = new Date(val.t).toISOString().split('T')[0];\n          acc[date] = {\n            '4. close': val.c,\n            '5. volume': val.v\n          };\n          return acc;\n        }, {});\n        source = 'Polygon';\n      }\n      if (!timeSeries) {\n        console.log(\"No historical data available from any source\");\n        return null;\n      }\n      const dates = Object.keys(timeSeries).sort();\n      const last5Days = dates.slice(0, 5).map(date => ({\n        date,\n        close: parseFloat(timeSeries[date]['4. close']),\n        volume: parseFloat(timeSeries[date]['5. volume'])\n      }));\n\n      // Calculate short-term trend\n      const priceChange = last5Days[0].close - last5Days[last5Days.length - 1].close;\n      const percentChange = priceChange / last5Days[last5Days.length - 1].close * 100;\n      const trend = {\n        direction: priceChange > 0 ? 'up' : priceChange < 0 ? 'down' : 'flat',\n        strength: Math.abs(percentChange) > 5 ? 'strong' : Math.abs(percentChange) > 2 ? 'moderate' : 'weak',\n        percentChange: percentChange.toFixed(2)\n      };\n\n      // Calculate volume metrics\n      const volumes = last5Days.map(day => day.volume).filter(v => v);\n      const avgVolume = volumes.length > 0 ? volumes.reduce((sum, vol) => sum + vol, 0) / volumes.length : null;\n      const volumeTrend = volumes.length > 1 ? volumes[0] > volumes[volumes.length - 1] * 1.2 ? 'increasing' : volumes[0] < volumes[volumes.length - 1] * 0.8 ? 'decreasing' : 'stable' : 'unknown';\n      setPriceTrend(trend);\n      setVolumeData({\n        average: avgVolume,\n        current: ((_last5Days$ = last5Days[0]) === null || _last5Days$ === void 0 ? void 0 : _last5Days$.volume) || null,\n        trend: volumeTrend,\n        source\n      });\n      return {\n        last5Days,\n        trend,\n        volume: ((_last5Days$2 = last5Days[0]) === null || _last5Days$2 === void 0 ? void 0 : _last5Days$2.volume) || null,\n        source\n      };\n    } catch (err) {\n      console.error(\"Error fetching historical data:\", err);\n      return null;\n    }\n  };\n\n  // Generate AI prediction with enhanced data\n  const generateEnhancedPrediction = async stockSymbol => {\n    try {\n      var _volumeData$current, _volumeData$average;\n      setLoading(true);\n      setError(null);\n\n      // Step 1: Gather all data from APIs in parallel\n      const [priceResponse, newsResponse, technicalIndicators, marketSentiment, historicalData] = await Promise.all([axios.get(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${stockSymbol}&apikey=${ALPHA_VANTAGE_KEY}`), axios.get(`https://finnhub.io/api/v1/company-news?symbol=${stockSymbol}&from=${new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString().split('T')[0]}&to=${new Date().toISOString().split('T')[0]}&token=${FINNHUB_API_KEY}`), fetchTechnicalIndicators(stockSymbol), fetchMarketSentiment(), fetchHistoricalData(stockSymbol)]);\n\n      // Process price data\n      const priceData = priceResponse.data['Global Quote'] || {};\n      const priceChange = priceData['10. change percent'] || '0%';\n      setPriceData({\n        current: priceData['05. price'],\n        change: priceData['09. change'],\n        changePercent: priceChange,\n        volume: volumeData.current || (historicalData === null || historicalData === void 0 ? void 0 : historicalData.volume) || null\n      });\n\n      // Process news data\n      const recentNews = newsResponse.data.filter(item => item.headline && item.image && item.url).slice(0, 5);\n      setNews(recentNews);\n\n      // Calculate enhanced sentiment\n      const sentimentAnalysis = calculateEnhancedSentiment(priceChange, recentNews, technicalIndicators, marketSentiment);\n      setSentiment(sentimentAnalysis);\n\n      // Prepare comprehensive data for AI\n      const latestNews = recentNews.length > 0 ? recentNews.slice(0, 3).map(item => item.headline).join('\\n- ') : 'No recent news available';\n      const technicalSummary = technicalIndicators ? `RSI: ${technicalIndicators.rsi || 'N/A'}` : 'No technical indicators available';\n      const marketSummary = marketSentiment ? `Market Sentiment: Fear/Greed Index ${marketSentiment.fearGreedIndex || 'N/A'}, \n         SPY: ${marketSentiment.spyChange || 'N/A'}, \n         QQQ: ${marketSentiment.qqqChange || 'N/A'}, \n         DIA: ${marketSentiment.diaChange || 'N/A'}` : 'No market sentiment data available';\n      const historicalSummary = historicalData ? `Recent trend: ${priceTrend.direction} (${priceTrend.strength}, ${priceTrend.percentChange}%), \n         Volume: ${volumeData.current ? volumeData.current.toLocaleString() : 'N/A'} (${volumeData.trend}), \n         Avg Volume: ${volumeData.average ? volumeData.average.toLocaleString() : 'N/A'}` : 'Limited historical data available';\n\n      // Step 2: Send to AI for enhanced prediction\n      const response = await axios.post('https://openrouter.ai/api/v1/chat/completions', {\n        model: \"anthropic/claude-3-haiku\",\n        messages: [{\n          \"role\": \"system\",\n          \"content\": `You are an advanced stock prediction AI that analyzes multiple data points to forecast stock movements.\n                        Provide a detailed prediction for the next 24 hours including:\n                        - Predicted direction and percentage change with confidence interval\n                        - Key technical factors (RSI, volume, trends)\n                        - Market sentiment context\n                        - News sentiment analysis\n                        - Potential support/resistance levels\n                        - Risk factors to consider\n                        - Trading strategy suggestion (if appropriate)\n                        - Important disclaimer about predictions being speculative\n                        \n                        Format your response with clear sections using markdown headers and bullet points.\n                        Current sentiment: ${sentimentAnalysis.label} (${sentimentAnalysis.score})\n                        Confidence: ${sentimentAnalysis.confidence}`\n        }, {\n          \"role\": \"user\",\n          \"content\": `Generate a comprehensive 24-hour prediction for ${stockSymbol} based on:\n                        - Current price: ${priceData['05. price']}\n                        - Price change: ${priceChange}\n                        - Volume: ${((_volumeData$current = volumeData.current) === null || _volumeData$current === void 0 ? void 0 : _volumeData$current.toLocaleString()) || 'N/A'} (${volumeData.trend || 'trend unknown'})\n                        - Avg Volume: ${((_volumeData$average = volumeData.average) === null || _volumeData$average === void 0 ? void 0 : _volumeData$average.toLocaleString()) || 'N/A'}\n                        - Price Trend: ${priceTrend.direction || 'unknown'} (${priceTrend.strength || 'unknown'}, ${priceTrend.percentChange || 'N/A'}%)\n                        - Technical indicators: ${technicalSummary}\n                        - Market context: ${marketSummary}\n                        - Latest news headlines:\n                          - ${latestNews}`\n        }],\n        max_tokens: 1500\n      }, {\n        headers: {\n          'Authorization': `Bearer ${OPENROUTER_API_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const cleanedPrediction = cleanPredictionText(response.data.choices[0].message.content);\n      setPrediction(cleanedPrediction);\n    } catch (err) {\n      console.error(\"Error generating prediction:\", err);\n      setError('Failed to generate prediction. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch additional market data\n  const fetchStockNews = async stockSymbol => {\n    try {\n      var _polygonNews$data;\n      // Try multiple news sources\n      const [finnhubNews, polygonNews] = await Promise.all([axios.get(`https://finnhub.io/api/v1/company-news?symbol=${stockSymbol}&from=${new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]}&to=${new Date().toISOString().split('T')[0]}&token=${FINNHUB_API_KEY}`), axios.get(`https://api.polygon.io/v2/reference/news?ticker=${stockSymbol}&limit=5&apiKey=${POLYGON_API_KEY}`).catch(() => ({\n        data: {\n          results: []\n        }\n      })) // Fallback if fails\n      ]);\n\n      // Combine and filter news\n      const allNews = [...(finnhubNews.data || []), ...(((_polygonNews$data = polygonNews.data) === null || _polygonNews$data === void 0 ? void 0 : _polygonNews$data.results) || [])];\n      const filteredNews = allNews.filter(item => item.headline && (item.image || item.thumbnail_url) && item.url).slice(0, 5).map(item => ({\n        headline: item.headline || item.title,\n        summary: item.summary || item.description,\n        image: item.image || item.thumbnail_url,\n        url: item.url || item.article_url,\n        source: item.source || (item.publisher ? item.publisher.name : 'Unknown'),\n        date: item.datetime || item.published_utc\n      }));\n      setNews(filteredNews);\n    } catch (err) {\n      console.error(\"Error fetching news:\", err);\n    }\n  };\n\n  // Load all data when symbol changes\n  useEffect(() => {\n    if (symbol) {\n      setLoading(true);\n      generateEnhancedPrediction(symbol);\n      fetchStockNews(symbol);\n    }\n  }, [symbol]);\n  if (!symbol) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-prediction-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-icon\",\n          children: \"\\uD83D\\uDCC8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No Stock Selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please select a stock symbol to view AI predictions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/watchlist'),\n          className: \"primary-button\",\n          children: \"Browse Stocks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-prediction-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-prediction-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"stock-symbol\",\n          children: symbol.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), priceData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `price-display ${parseFloat(priceData.change) >= 0 ? 'positive' : 'negative'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"price\",\n            children: [\"$\", priceData.current]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"change\",\n            children: [parseFloat(priceData.change) >= 0 ? '↑' : '↓', priceData.change, \" (\", priceData.changePercent, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this), priceData.volume && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"volume\",\n            children: [\"Vol: \", priceData.volume.toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stock-name\",\n          children: \"Advanced 24-Hour AI Prediction Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(-1),\n        className: \"back-button\",\n        children: \"\\u2190 Back to Watchlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-state\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-animation\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Analyzing comprehensive market data for \", symbol.toUpperCase(), \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading-subtext\",\n        children: \"Fetching price data, news, technical indicators, and market sentiment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-state\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-icon\",\n        children: \"\\u26A0\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Prediction Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"primary-button\",\n        children: \"Retry Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prediction-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prediction-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sentiment-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `sentiment-dot ${sentiment.label.replace(' ', '-')}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sentiment-label\",\n                children: [sentiment.label, \" sentiment (\", sentiment.score, \") - Confidence: \", sentiment.confidence]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"prediction-title\",\n              children: \"Advanced AI Prediction Analysis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prediction-content\",\n            children: prediction.map((line, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"prediction-line\",\n              children: line\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prediction-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"disclaimer\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Disclaimer:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 551,\n                  columnNumber: 24\n                }, this), \" This AI-generated forecast is for informational purposes only and should not be considered financial advice. Predictions are based on historical data and statistical models which may not account for all market variables. Always conduct your own research before making investment decisions.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => generateEnhancedPrediction(symbol),\n              className: \"refresh-button\",\n              children: \"\\u21BB Refresh with Latest Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-sections\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"technical-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"Technical Indicators\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"indicators-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"indicator-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"RSI (14-day)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"indicator-value\",\n                children: (technicalIndicators === null || technicalIndicators === void 0 ? void 0 : technicalIndicators.rsi) || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"indicator-analysis\",\n                children: (technicalIndicators === null || technicalIndicators === void 0 ? void 0 : technicalIndicators.rsi) > 70 ? 'Overbought' : (technicalIndicators === null || technicalIndicators === void 0 ? void 0 : technicalIndicators.rsi) < 30 ? 'Oversold' : 'Neutral'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"indicator-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Price Trend\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"indicator-value\",\n                children: priceTrend.direction ? `${priceTrend.direction} (${priceTrend.strength})` : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"indicator-analysis\",\n                children: priceTrend.percentChange ? `${priceTrend.percentChange}%` : 'No trend data'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"indicator-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Volume\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"indicator-value\",\n                children: volumeData.current ? volumeData.current.toLocaleString() : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"indicator-analysis\",\n                children: [volumeData.average ? `Avg: ${volumeData.average.toLocaleString()}` : 'No avg data', \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 106\n                }, this), volumeData.trend ? `Trend: ${volumeData.trend}` : 'No trend data']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"market-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"Market Sentiment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 15\n          }, this), marketSentiment ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"market-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"market-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Fear & Greed Index\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"market-value\",\n                children: marketSentiment.fearGreedIndex || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"market-analysis\",\n                children: marketSentiment.fearGreedIndex > 70 ? 'Extreme Greed' : marketSentiment.fearGreedIndex < 30 ? 'Extreme Fear' : 'Neutral'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"market-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"SPY (S&P 500)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 611,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: `market-value ${marketSentiment.spyChange >= 0 ? 'positive' : 'negative'}`,\n                children: marketSentiment.spyChange || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"market-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"QQQ (Nasdaq)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: `market-value ${marketSentiment.qqqChange >= 0 ? 'positive' : 'negative'}`,\n                children: marketSentiment.qqqChange || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"market-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"DIA (Dow Jones)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: `market-value ${marketSentiment.diaChange >= 0 ? 'positive' : 'negative'}`,\n                children: marketSentiment.diaChange || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 624,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-market\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No market sentiment data available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"news-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Latest Market News\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 13\n        }, this), news.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"news-grid\",\n          children: news.map((item, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n            href: item.url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"news-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"news-image-container\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.image,\n                alt: item.headline,\n                className: \"news-image\",\n                onError: e => {\n                  e.target.onerror = null;\n                  e.target.src = 'https://via.placeholder.com/300x200?text=No+Image';\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 650,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"news-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"news-headline\",\n                children: item.headline\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"news-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"news-source\",\n                  children: item.source\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 663,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"news-date\",\n                  children: item.date ? new Date(item.date).toLocaleDateString() : 'Recent'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 664,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"news-summary\",\n                children: item.summary || 'Read more...'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-news\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"No recent news found for \", symbol.toUpperCase()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 486,\n    columnNumber: 5\n  }, this);\n};\n_s(AIPrediction, \"1vieeyPtuOlV5PQ5Xt+pvP7Veyg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AIPrediction;\nexport default AIPrediction;\nvar _c;\n$RefreshReg$(_c, \"AIPrediction\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AIPrediction","_s","symbol","navigate","prediction","setPrediction","sentiment","setSentiment","loading","setLoading","error","setError","news","setNews","priceData","setPriceData","technicalIndicators","setTechnicalIndicators","marketSentiment","setMarketSentiment","volumeData","setVolumeData","average","current","trend","priceTrend","setPriceTrend","direction","strength","FINNHUB_API_KEY","OPENROUTER_API_KEY","ALPHA_VANTAGE_KEY","POLYGON_API_KEY","TWELVE_DATA_KEY","cleanPredictionText","text","replace","split","filter","line","trim","map","fetchTechnicalIndicators","_alphaResponse$data","_alphaResponse$data$T","_twelveResponse$data","_twelveResponse$data$","_twelveResponse$data$2","alphaResponse","get","twelveResponse","indicators","rsi","data","TechnicalAnalysis","RSI","values","err","console","fetchMarketSentiment","_fgiResponse$data","_fgiResponse$data$dat","_fgiResponse$data$dat2","_indicesResponse$data","_indicesResponse$data2","_indicesResponse$data3","_indicesResponse$data4","_indicesResponse$data5","_indicesResponse$data6","_indicesResponse$data7","_indicesResponse$data8","_indicesResponse$data9","fgiResponse","indicesResponse","sentimentData","fearGreedIndex","value","spyChange","StockQuotes","change","qqqChange","diaChange","calculateEnhancedSentiment","priceChange","newsItems","priceChangeNum","parseFloat","sentimentScore","Math","min","max","rsiInfluence","fgi","fgiInfluence","marketPerformance","length","newsSentiment","sentimentWords","positive","negative","strongPositive","strongNegative","forEach","item","headline","toLowerCase","summary","word","includes","sentimentLabel","score","toFixed","label","confidence","abs","fetchHistoricalData","_last5Days$","_last5Days$2","timeSeries","source","_twelveResponse$data2","_twelveResponse$data3","reduce","acc","val","datetime","close","volume","_polygonResponse$data","_polygonResponse$data2","polygonResponse","Date","now","toISOString","results","date","t","c","v","log","dates","Object","keys","sort","last5Days","slice","percentChange","volumes","day","avgVolume","sum","vol","volumeTrend","generateEnhancedPrediction","stockSymbol","_volumeData$current","_volumeData$average","priceResponse","newsResponse","historicalData","Promise","all","changePercent","recentNews","image","url","sentimentAnalysis","latestNews","join","technicalSummary","marketSummary","historicalSummary","toLocaleString","response","post","model","messages","max_tokens","headers","cleanedPrediction","choices","message","content","fetchStockNews","_polygonNews$data","finnhubNews","polygonNews","catch","allNews","filteredNews","thumbnail_url","title","description","article_url","publisher","name","published_utc","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toUpperCase","window","location","reload","i","index","href","target","rel","src","alt","onError","e","onerror","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Shagun Khandelwal/zerodha/client/src/components/AIPrediction/AIPrediction.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport './AIPrediction.css';\r\n\r\nconst AIPrediction = () => {\r\n  const { symbol } = useParams();\r\n  const navigate = useNavigate();\r\n  const [prediction, setPrediction] = useState(null);\r\n  const [sentiment, setSentiment] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [news, setNews] = useState([]);\r\n  const [priceData, setPriceData] = useState(null);\r\n  const [technicalIndicators, setTechnicalIndicators] = useState(null);\r\n  const [marketSentiment, setMarketSentiment] = useState(null);\r\n  const [volumeData, setVolumeData] = useState({ average: null, current: null, trend: null });\r\n  const [priceTrend, setPriceTrend] = useState({ direction: null, strength: null });\r\n\r\n  // API Keys (consider moving these to environment variables)\r\n  const FINNHUB_API_KEY = 'd1aopp9r01qjhvtqeebgd1aopp9r01qjhvtqeec0';\r\n  const OPENROUTER_API_KEY = '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';\r\n  const ALPHA_VANTAGE_KEY = 'OH0ZQBRUAB4ABC4X';\r\n  const POLYGON_API_KEY = 'TpJTOM9gDn4q_3d1L0Gyp4mFlap7OSLh';\r\n  const TWELVE_DATA_KEY = '689a986b8a534491b05fff638cd7f1b1';\r\n\r\n  // Clean AI response by removing markdown and formatting\r\n  const cleanPredictionText = (text) => {\r\n    return text\r\n      .replace(/^#+\\s*/gm, '') // Remove markdown headers\r\n      .replace(/\\*\\*(.*?)\\*\\*/g, '$1') // Remove bold markdown\r\n      .replace(/\\[(.*?)\\]\\(.*?\\)/g, '$1') // Remove markdown links\r\n      .split('\\n')\r\n      .filter(line => line.trim() !== '') // Remove empty lines\r\n      .map(line => line.trim());\r\n  };\r\n\r\n  // Fetch technical indicators from multiple sources\r\n  const fetchTechnicalIndicators = async (symbol) => {\r\n    try {\r\n      // Fetch from Alpha Vantage\r\n      const alphaResponse = await axios.get(\r\n        `https://www.alphavantage.co/query?function=RSI&symbol=${symbol}&interval=daily&time_period=14&series_type=close&apikey=${ALPHA_VANTAGE_KEY}`\r\n      );\r\n      \r\n      // Fetch from Twelve Data (fallback)\r\n      const twelveResponse = await axios.get(\r\n        `https://api.twelvedata.com/rsi?symbol=${symbol}&interval=1day&outputsize=30&apikey=${TWELVE_DATA_KEY}`\r\n      );\r\n      \r\n      // Process indicators\r\n      const indicators = {\r\n        rsi: alphaResponse.data?.TechnicalAnalysis?.RSI || twelveResponse.data?.values?.[0]?.rsi || null,\r\n        // Add more indicators as needed\r\n      };\r\n      \r\n      setTechnicalIndicators(indicators);\r\n      return indicators;\r\n    } catch (err) {\r\n      console.error(\"Error fetching technical indicators:\", err);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Fetch broader market sentiment\r\n  const fetchMarketSentiment = async () => {\r\n    try {\r\n      // Fetch fear and greed index\r\n      const fgiResponse = await axios.get(\r\n        'https://api.alternative.me/fng/?limit=1'\r\n      );\r\n      \r\n      // Fetch major indices performance\r\n      const indicesResponse = await axios.get(\r\n        `https://www.alphavantage.co/query?function=BATCH_STOCK_QUOTES&symbols=SPY,QQQ,DIA&apikey=${ALPHA_VANTAGE_KEY}`\r\n      );\r\n      \r\n      const sentimentData = {\r\n        fearGreedIndex: fgiResponse.data?.data?.[0]?.value || null,\r\n        spyChange: indicesResponse.data?.StockQuotes?.[0]?.change || null,\r\n        qqqChange: indicesResponse.data?.StockQuotes?.[1]?.change || null,\r\n        diaChange: indicesResponse.data?.StockQuotes?.[2]?.change || null,\r\n      };\r\n      \r\n      setMarketSentiment(sentimentData);\r\n      return sentimentData;\r\n    } catch (err) {\r\n      console.error(\"Error fetching market sentiment:\", err);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Enhanced sentiment analysis with NLP techniques\r\n  const calculateEnhancedSentiment = (priceChange, newsItems, technicalIndicators, marketSentiment) => {\r\n    // Base sentiment from price change (-1 to 1)\r\n    const priceChangeNum = parseFloat(priceChange) || 0;\r\n    let sentimentScore = Math.min(1, Math.max(-1, priceChangeNum / 5));\r\n    \r\n    // Technical indicators influence\r\n    if (technicalIndicators?.rsi) {\r\n      const rsi = parseFloat(technicalIndicators.rsi);\r\n      // RSI between 30-70 is neutral, below 30 is oversold (bullish), above 70 is overbought (bearish)\r\n      const rsiInfluence = rsi < 30 ? 0.2 : rsi > 70 ? -0.2 : 0;\r\n      sentimentScore += rsiInfluence;\r\n    }\r\n    \r\n    // Market sentiment influence\r\n    if (marketSentiment) {\r\n      // Fear and greed index (0-100, 0=extreme fear, 100=extreme greed)\r\n      const fgi = parseFloat(marketSentiment.fearGreedIndex) || 50;\r\n      const fgiInfluence = (fgi - 50) / 100; // Normalize to -0.5 to 0.5\r\n      sentimentScore += fgiInfluence * 0.3;\r\n      \r\n      // Major indices performance\r\n      const spyChange = parseFloat(marketSentiment.spyChange) || 0;\r\n      const qqqChange = parseFloat(marketSentiment.qqqChange) || 0;\r\n      const diaChange = parseFloat(marketSentiment.diaChange) || 0;\r\n      const marketPerformance = (spyChange + qqqChange + diaChange) / 3;\r\n      sentimentScore += marketPerformance / 10;\r\n    }\r\n    \r\n    // Enhanced news analysis with more sophisticated NLP\r\n    if (newsItems && newsItems.length > 0) {\r\n      let newsSentiment = 0;\r\n      const sentimentWords = {\r\n        positive: ['up', 'rise', 'gain', 'strong', 'beat', 'bullish', 'buy', 'outperform', 'positive', 'growth'],\r\n        negative: ['down', 'fall', 'drop', 'weak', 'miss', 'bearish', 'sell', 'underperform', 'negative', 'decline'],\r\n        strongPositive: ['surge', 'soar', 'rocket', 'record high', 'breakout', 'upgrade'],\r\n        strongNegative: ['plunge', 'crash', 'collapse', 'record low', 'downgrade', 'bankrupt']\r\n      };\r\n      \r\n      newsItems.forEach(item => {\r\n        const headline = item.headline.toLowerCase();\r\n        const summary = (item.summary || '').toLowerCase();\r\n        \r\n        // Check for sentiment words with different weights\r\n        sentimentWords.strongPositive.forEach(word => {\r\n          if (headline.includes(word) || summary.includes(word)) {\r\n            newsSentiment += 0.3;\r\n          }\r\n        });\r\n        \r\n        sentimentWords.positive.forEach(word => {\r\n          if (headline.includes(word) || summary.includes(word)) {\r\n            newsSentiment += 0.1;\r\n          }\r\n        });\r\n        \r\n        sentimentWords.negative.forEach(word => {\r\n          if (headline.includes(word) || summary.includes(word)) {\r\n            newsSentiment -= 0.1;\r\n          }\r\n        });\r\n        \r\n        sentimentWords.strongNegative.forEach(word => {\r\n          if (headline.includes(word) || summary.includes(word)) {\r\n            newsSentiment -= 0.3;\r\n          }\r\n        });\r\n        \r\n        // Check for sentiment shifters\r\n        if (headline.includes('but') || summary.includes('however')) {\r\n          newsSentiment *= 0.7; // Reduce sentiment impact for contradictory statements\r\n        }\r\n        \r\n        if (headline.includes('!')) {\r\n          newsSentiment *= 1.2; // Amplify sentiment for emphatic statements\r\n        }\r\n      });\r\n      \r\n      // Average news sentiment and combine with other factors\r\n      newsSentiment = newsSentiment / newsItems.length;\r\n      sentimentScore = (sentimentScore * 0.5) + (newsSentiment * 0.3) + \r\n                      ((technicalIndicators ? 0.1 : 0) + (marketSentiment ? 0.1 : 0));\r\n    }\r\n    \r\n    // Normalize between -1 and 1\r\n    sentimentScore = Math.min(1, Math.max(-1, sentimentScore));\r\n    \r\n    // Determine sentiment label with more granularity\r\n    let sentimentLabel;\r\n    if (sentimentScore > 0.6) {\r\n      sentimentLabel = 'extremely bullish';\r\n    } else if (sentimentScore > 0.3) {\r\n      sentimentLabel = 'strongly bullish';\r\n    } else if (sentimentScore > 0.1) {\r\n      sentimentLabel = 'bullish';\r\n    } else if (sentimentScore < -0.6) {\r\n      sentimentLabel = 'extremely bearish';\r\n    } else if (sentimentScore < -0.3) {\r\n      sentimentLabel = 'strongly bearish';\r\n    } else if (sentimentScore < -0.1) {\r\n      sentimentLabel = 'bearish';\r\n    } else {\r\n      sentimentLabel = 'neutral';\r\n    }\r\n    \r\n    return {\r\n      score: sentimentScore.toFixed(2),\r\n      label: sentimentLabel,\r\n      confidence: Math.abs(sentimentScore) > 0.5 ? 'high' : \r\n                 Math.abs(sentimentScore) > 0.2 ? 'medium' : 'low'\r\n    };\r\n  };\r\n\r\n  // Fetch historical data for trend analysis with fallbacks\r\n  const fetchHistoricalData = async (symbol) => {\r\n    try {\r\n      // Try Alpha Vantage first\r\n      const alphaResponse = await axios.get(\r\n        `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol}&outputsize=compact&apikey=${ALPHA_VANTAGE_KEY}`\r\n      );\r\n      \r\n      let timeSeries = alphaResponse.data['Time Series (Daily)'];\r\n      let source = 'Alpha Vantage';\r\n      \r\n      // Fallback to Twelve Data if Alpha Vantage fails\r\n      if (!timeSeries) {\r\n        const twelveResponse = await axios.get(\r\n          `https://api.twelvedata.com/time_series?symbol=${symbol}&interval=1day&outputsize=5&apikey=${TWELVE_DATA_KEY}`\r\n        );\r\n        timeSeries = twelveResponse.data?.values?.reduce((acc, val) => {\r\n          acc[val.datetime] = {\r\n            '4. close': val.close,\r\n            '5. volume': val.volume\r\n          };\r\n          return acc;\r\n        }, {});\r\n        source = 'Twelve Data';\r\n      }\r\n      \r\n      // Fallback to Polygon if both fail\r\n      if (!timeSeries) {\r\n        const polygonResponse = await axios.get(\r\n          `https://api.polygon.io/v2/aggs/ticker/${symbol}/range/1/day/${new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]}/${new Date().toISOString().split('T')[0]}?apiKey=${POLYGON_API_KEY}`\r\n        );\r\n        timeSeries = polygonResponse.data?.results?.reduce((acc, val) => {\r\n          const date = new Date(val.t).toISOString().split('T')[0];\r\n          acc[date] = {\r\n            '4. close': val.c,\r\n            '5. volume': val.v\r\n          };\r\n          return acc;\r\n        }, {});\r\n        source = 'Polygon';\r\n      }\r\n      \r\n      if (!timeSeries) {\r\n        console.log(\"No historical data available from any source\");\r\n        return null;\r\n      }\r\n      \r\n      const dates = Object.keys(timeSeries).sort();\r\n      const last5Days = dates.slice(0, 5).map(date => ({\r\n        date,\r\n        close: parseFloat(timeSeries[date]['4. close']),\r\n        volume: parseFloat(timeSeries[date]['5. volume'])\r\n      }));\r\n      \r\n      // Calculate short-term trend\r\n      const priceChange = last5Days[0].close - last5Days[last5Days.length - 1].close;\r\n      const percentChange = (priceChange / last5Days[last5Days.length - 1].close) * 100;\r\n      \r\n      const trend = {\r\n        direction: priceChange > 0 ? 'up' : priceChange < 0 ? 'down' : 'flat',\r\n        strength: Math.abs(percentChange) > 5 ? 'strong' : \r\n                 Math.abs(percentChange) > 2 ? 'moderate' : 'weak',\r\n        percentChange: percentChange.toFixed(2)\r\n      };\r\n      \r\n      // Calculate volume metrics\r\n      const volumes = last5Days.map(day => day.volume).filter(v => v);\r\n      const avgVolume = volumes.length > 0 ? \r\n        volumes.reduce((sum, vol) => sum + vol, 0) / volumes.length : \r\n        null;\r\n      \r\n      const volumeTrend = volumes.length > 1 ? \r\n        volumes[0] > volumes[volumes.length - 1] * 1.2 ? 'increasing' :\r\n        volumes[0] < volumes[volumes.length - 1] * 0.8 ? 'decreasing' : 'stable' : \r\n        'unknown';\r\n      \r\n      setPriceTrend(trend);\r\n      setVolumeData({\r\n        average: avgVolume,\r\n        current: last5Days[0]?.volume || null,\r\n        trend: volumeTrend,\r\n        source\r\n      });\r\n      \r\n      return {\r\n        last5Days,\r\n        trend,\r\n        volume: last5Days[0]?.volume || null,\r\n        source\r\n      };\r\n    } catch (err) {\r\n      console.error(\"Error fetching historical data:\", err);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Generate AI prediction with enhanced data\r\n  const generateEnhancedPrediction = async (stockSymbol) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // Step 1: Gather all data from APIs in parallel\r\n      const [\r\n        priceResponse, \r\n        newsResponse,\r\n        technicalIndicators,\r\n        marketSentiment,\r\n        historicalData\r\n      ] = await Promise.all([\r\n        axios.get(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${stockSymbol}&apikey=${ALPHA_VANTAGE_KEY}`),\r\n        axios.get(`https://finnhub.io/api/v1/company-news?symbol=${stockSymbol}&from=${new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString().split('T')[0]}&to=${new Date().toISOString().split('T')[0]}&token=${FINNHUB_API_KEY}`),\r\n        fetchTechnicalIndicators(stockSymbol),\r\n        fetchMarketSentiment(),\r\n        fetchHistoricalData(stockSymbol)\r\n      ]);\r\n\r\n      // Process price data\r\n      const priceData = priceResponse.data['Global Quote'] || {};\r\n      const priceChange = priceData['10. change percent'] || '0%';\r\n      setPriceData({\r\n        current: priceData['05. price'],\r\n        change: priceData['09. change'],\r\n        changePercent: priceChange,\r\n        volume: volumeData.current || historicalData?.volume || null\r\n      });\r\n\r\n      // Process news data\r\n      const recentNews = newsResponse.data\r\n        .filter(item => item.headline && item.image && item.url)\r\n        .slice(0, 5);\r\n      setNews(recentNews);\r\n\r\n      // Calculate enhanced sentiment\r\n      const sentimentAnalysis = calculateEnhancedSentiment(\r\n        priceChange, \r\n        recentNews,\r\n        technicalIndicators,\r\n        marketSentiment\r\n      );\r\n      setSentiment(sentimentAnalysis);\r\n\r\n      // Prepare comprehensive data for AI\r\n      const latestNews = recentNews.length > 0 ? \r\n        recentNews.slice(0, 3).map(item => item.headline).join('\\n- ') : \r\n        'No recent news available';\r\n      \r\n      const technicalSummary = technicalIndicators ? \r\n        `RSI: ${technicalIndicators.rsi || 'N/A'}` : \r\n        'No technical indicators available';\r\n      \r\n      const marketSummary = marketSentiment ? \r\n        `Market Sentiment: Fear/Greed Index ${marketSentiment.fearGreedIndex || 'N/A'}, \r\n         SPY: ${marketSentiment.spyChange || 'N/A'}, \r\n         QQQ: ${marketSentiment.qqqChange || 'N/A'}, \r\n         DIA: ${marketSentiment.diaChange || 'N/A'}` : \r\n        'No market sentiment data available';\r\n      \r\n      const historicalSummary = historicalData ? \r\n        `Recent trend: ${priceTrend.direction} (${priceTrend.strength}, ${priceTrend.percentChange}%), \r\n         Volume: ${volumeData.current ? volumeData.current.toLocaleString() : 'N/A'} (${volumeData.trend}), \r\n         Avg Volume: ${volumeData.average ? volumeData.average.toLocaleString() : 'N/A'}` : \r\n        'Limited historical data available';\r\n\r\n      // Step 2: Send to AI for enhanced prediction\r\n      const response = await axios.post('https://openrouter.ai/api/v1/chat/completions', {\r\n        model: \"anthropic/claude-3-haiku\",\r\n        messages: [\r\n          { \r\n            \"role\": \"system\", \r\n            \"content\": `You are an advanced stock prediction AI that analyzes multiple data points to forecast stock movements.\r\n                        Provide a detailed prediction for the next 24 hours including:\r\n                        - Predicted direction and percentage change with confidence interval\r\n                        - Key technical factors (RSI, volume, trends)\r\n                        - Market sentiment context\r\n                        - News sentiment analysis\r\n                        - Potential support/resistance levels\r\n                        - Risk factors to consider\r\n                        - Trading strategy suggestion (if appropriate)\r\n                        - Important disclaimer about predictions being speculative\r\n                        \r\n                        Format your response with clear sections using markdown headers and bullet points.\r\n                        Current sentiment: ${sentimentAnalysis.label} (${sentimentAnalysis.score})\r\n                        Confidence: ${sentimentAnalysis.confidence}`\r\n          },\r\n          { \r\n            \"role\": \"user\", \r\n            \"content\": `Generate a comprehensive 24-hour prediction for ${stockSymbol} based on:\r\n                        - Current price: ${priceData['05. price']}\r\n                        - Price change: ${priceChange}\r\n                        - Volume: ${volumeData.current?.toLocaleString() || 'N/A'} (${volumeData.trend || 'trend unknown'})\r\n                        - Avg Volume: ${volumeData.average?.toLocaleString() || 'N/A'}\r\n                        - Price Trend: ${priceTrend.direction || 'unknown'} (${priceTrend.strength || 'unknown'}, ${priceTrend.percentChange || 'N/A'}%)\r\n                        - Technical indicators: ${technicalSummary}\r\n                        - Market context: ${marketSummary}\r\n                        - Latest news headlines:\r\n                          - ${latestNews}`\r\n          }\r\n        ],\r\n        max_tokens: 1500\r\n      }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${OPENROUTER_API_KEY}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      const cleanedPrediction = cleanPredictionText(response.data.choices[0].message.content);\r\n      setPrediction(cleanedPrediction);\r\n\r\n    } catch (err) {\r\n      console.error(\"Error generating prediction:\", err);\r\n      setError('Failed to generate prediction. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch additional market data\r\n  const fetchStockNews = async (stockSymbol) => {\r\n    try {\r\n      // Try multiple news sources\r\n      const [finnhubNews, polygonNews] = await Promise.all([\r\n        axios.get(\r\n          `https://finnhub.io/api/v1/company-news?symbol=${stockSymbol}&from=${new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]}&to=${new Date().toISOString().split('T')[0]}&token=${FINNHUB_API_KEY}`\r\n        ),\r\n        axios.get(\r\n          `https://api.polygon.io/v2/reference/news?ticker=${stockSymbol}&limit=5&apiKey=${POLYGON_API_KEY}`\r\n        ).catch(() => ({ data: { results: [] }})) // Fallback if fails\r\n      ]);\r\n      \r\n      // Combine and filter news\r\n      const allNews = [\r\n        ...(finnhubNews.data || []),\r\n        ...(polygonNews.data?.results || [])\r\n      ];\r\n      \r\n      const filteredNews = allNews\r\n        .filter(item => item.headline && (item.image || item.thumbnail_url) && item.url)\r\n        .slice(0, 5)\r\n        .map(item => ({\r\n          headline: item.headline || item.title,\r\n          summary: item.summary || item.description,\r\n          image: item.image || item.thumbnail_url,\r\n          url: item.url || item.article_url,\r\n          source: item.source || (item.publisher ? item.publisher.name : 'Unknown'),\r\n          date: item.datetime || item.published_utc\r\n        }));\r\n      \r\n      setNews(filteredNews);\r\n    } catch (err) {\r\n      console.error(\"Error fetching news:\", err);\r\n    }\r\n  };\r\n\r\n  // Load all data when symbol changes\r\n  useEffect(() => {\r\n    if (symbol) {\r\n      setLoading(true);\r\n      generateEnhancedPrediction(symbol);\r\n      fetchStockNews(symbol);\r\n    }\r\n  }, [symbol]);\r\n\r\n  if (!symbol) {\r\n    return (\r\n      <div className=\"ai-prediction-container\">\r\n        <div className=\"empty-state\">\r\n          <div className=\"empty-icon\">📈</div>\r\n          <h3>No Stock Selected</h3>\r\n          <p>Please select a stock symbol to view AI predictions</p>\r\n          <button onClick={() => navigate('/watchlist')} className=\"primary-button\">\r\n            Browse Stocks\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"ai-prediction-container\">\r\n      <div className=\"ai-prediction-header\">\r\n        <div className=\"header-content\">\r\n          <h1 className=\"stock-symbol\">{symbol.toUpperCase()}</h1>\r\n          {priceData && (\r\n            <div className={`price-display ${parseFloat(priceData.change) >= 0 ? 'positive' : 'negative'}`}>\r\n              <span className=\"price\">${priceData.current}</span>\r\n              <span className=\"change\">\r\n                {parseFloat(priceData.change) >= 0 ? '↑' : '↓'} \r\n                {priceData.change} ({priceData.changePercent})\r\n              </span>\r\n              {priceData.volume && (\r\n                <span className=\"volume\">Vol: {priceData.volume.toLocaleString()}</span>\r\n              )}\r\n            </div>\r\n          )}\r\n          <p className=\"stock-name\">Advanced 24-Hour AI Prediction Analysis</p>\r\n        </div>\r\n        <button onClick={() => navigate(-1)} className=\"back-button\">\r\n          ← Back to Watchlist\r\n        </button>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <div className=\"loading-state\">\r\n          <div className=\"loading-animation\">\r\n            <div className=\"loading-bar\"></div>\r\n            <div className=\"loading-bar\"></div>\r\n            <div className=\"loading-bar\"></div>\r\n          </div>\r\n          <p>Analyzing comprehensive market data for {symbol.toUpperCase()}...</p>\r\n          <p className=\"loading-subtext\">Fetching price data, news, technical indicators, and market sentiment</p>\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"error-state\">\r\n          <div className=\"error-icon\">⚠️</div>\r\n          <h3>Prediction Error</h3>\r\n          <p>{error}</p>\r\n          <button onClick={() => window.location.reload()} className=\"primary-button\">\r\n            Retry Analysis\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {prediction && (\r\n            <div className=\"prediction-section\">\r\n              <div className=\"prediction-card\">\r\n                <div className=\"card-header\">\r\n                  <div className=\"sentiment-indicator\">\r\n                    <div className={`sentiment-dot ${sentiment.label.replace(' ', '-')}`}></div>\r\n                    <span className=\"sentiment-label\">\r\n                      {sentiment.label} sentiment ({sentiment.score}) - Confidence: {sentiment.confidence}\r\n                    </span>\r\n                  </div>\r\n                  <h2 className=\"prediction-title\">Advanced AI Prediction Analysis</h2>\r\n                </div>\r\n                \r\n                <div className=\"prediction-content\">\r\n                  {prediction.map((line, i) => (\r\n                    <p key={i} className=\"prediction-line\">{line}</p>\r\n                  ))}\r\n                </div>\r\n                \r\n                <div className=\"prediction-footer\">\r\n                  <div className=\"disclaimer\">\r\n                    <p><strong>Disclaimer:</strong> This AI-generated forecast is for informational purposes only and should not be considered financial advice. Predictions are based on historical data and statistical models which may not account for all market variables. Always conduct your own research before making investment decisions.</p>\r\n                  </div>\r\n                  <button \r\n                    onClick={() => generateEnhancedPrediction(symbol)} \r\n                    className=\"refresh-button\"\r\n                  >\r\n                    ↻ Refresh with Latest Data\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"data-sections\">\r\n            <div className=\"technical-section\">\r\n              <h2 className=\"section-title\">Technical Indicators</h2>\r\n              <div className=\"indicators-grid\">\r\n                <div className=\"indicator-card\">\r\n                  <h3>RSI (14-day)</h3>\r\n                  <p className=\"indicator-value\">{technicalIndicators?.rsi || 'N/A'}</p>\r\n                  <p className=\"indicator-analysis\">\r\n                    {technicalIndicators?.rsi > 70 ? 'Overbought' : \r\n                     technicalIndicators?.rsi < 30 ? 'Oversold' : 'Neutral'}\r\n                  </p>\r\n                </div>\r\n                <div className=\"indicator-card\">\r\n                  <h3>Price Trend</h3>\r\n                  <p className=\"indicator-value\">\r\n                    {priceTrend.direction ? `${priceTrend.direction} (${priceTrend.strength})` : 'N/A'}\r\n                  </p>\r\n                  <p className=\"indicator-analysis\">\r\n                    {priceTrend.percentChange ? `${priceTrend.percentChange}%` : 'No trend data'}\r\n                  </p>\r\n                </div>\r\n                <div className=\"indicator-card\">\r\n                  <h3>Volume</h3>\r\n                  <p className=\"indicator-value\">\r\n                    {volumeData.current ? volumeData.current.toLocaleString() : 'N/A'}\r\n                  </p>\r\n                  <p className=\"indicator-analysis\">\r\n                    {volumeData.average ? `Avg: ${volumeData.average.toLocaleString()}` : 'No avg data'} <br />\r\n                    {volumeData.trend ? `Trend: ${volumeData.trend}` : 'No trend data'}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"market-section\">\r\n              <h2 className=\"section-title\">Market Sentiment</h2>\r\n              {marketSentiment ? (\r\n                <div className=\"market-grid\">\r\n                  <div className=\"market-card\">\r\n                    <h3>Fear & Greed Index</h3>\r\n                    <p className=\"market-value\">{marketSentiment.fearGreedIndex || 'N/A'}</p>\r\n                    <p className=\"market-analysis\">\r\n                      {marketSentiment.fearGreedIndex > 70 ? 'Extreme Greed' :\r\n                       marketSentiment.fearGreedIndex < 30 ? 'Extreme Fear' : 'Neutral'}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"market-card\">\r\n                    <h3>SPY (S&P 500)</h3>\r\n                    <p className={`market-value ${marketSentiment.spyChange >= 0 ? 'positive' : 'negative'}`}>\r\n                      {marketSentiment.spyChange || 'N/A'}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"market-card\">\r\n                    <h3>QQQ (Nasdaq)</h3>\r\n                    <p className={`market-value ${marketSentiment.qqqChange >= 0 ? 'positive' : 'negative'}`}>\r\n                      {marketSentiment.qqqChange || 'N/A'}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"market-card\">\r\n                    <h3>DIA (Dow Jones)</h3>\r\n                    <p className={`market-value ${marketSentiment.diaChange >= 0 ? 'positive' : 'negative'}`}>\r\n                      {marketSentiment.diaChange || 'N/A'}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"empty-market\">\r\n                  <p>No market sentiment data available</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"news-section\">\r\n            <h2 className=\"section-title\">Latest Market News</h2>\r\n            {news.length > 0 ? (\r\n              <div className=\"news-grid\">\r\n                {news.map((item, index) => (\r\n                  <a \r\n                    key={index} \r\n                    href={item.url} \r\n                    target=\"_blank\" \r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"news-card\"\r\n                  >\r\n                    <div className=\"news-image-container\">\r\n                      <img \r\n                        src={item.image} \r\n                        alt={item.headline} \r\n                        className=\"news-image\"\r\n                        onError={(e) => {\r\n                          e.target.onerror = null;\r\n                          e.target.src = 'https://via.placeholder.com/300x200?text=No+Image';\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"news-content\">\r\n                      <h3 className=\"news-headline\">{item.headline}</h3>\r\n                      <div className=\"news-meta\">\r\n                        <span className=\"news-source\">{item.source}</span>\r\n                        <span className=\"news-date\">\r\n                          {item.date ? new Date(item.date).toLocaleDateString() : 'Recent'}\r\n                        </span>\r\n                      </div>\r\n                      <p className=\"news-summary\">{item.summary || 'Read more...'}</p>\r\n                    </div>\r\n                  </a>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"empty-news\">\r\n                <p>No recent news found for {symbol.toUpperCase()}</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AIPrediction;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shagun Khandelwal\\\\zerodha\\\\client\\\\src\\\\components\\\\AISummary\\\\AISummary.js\",\n  _s = $RefreshSig$();\n// src/components/AISummary/AISummary.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './AISummary.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AISummary = ({\n  symbols = []\n}) => {\n  _s();\n  const [summary, setSummary] = useState('');\n  const [sentiment, setSentiment] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchAISummary = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // In a real implementation, you would call your backend API\n      // which would then call the OpenAI API\n      const response = await axios.post('/api/ai/summary', {\n        symbols: symbols.join(',')\n      });\n      setSummary(response.data.summary);\n      setSentiment(response.data.sentiment);\n    } catch (err) {\n      console.error('Error fetching AI summary:', err);\n      setError('Failed to load AI analysis. Please try again later.');\n\n      // Mock data for demonstration\n      setSummary(\"Today's market showed mixed performance with tech stocks gaining while energy sectors declined. AAPL rose 2.3% on positive earnings news, while TSLA dropped 1.8% amid supply chain concerns.\");\n      setSentiment(\"Market sentiment is cautiously optimistic with positive reactions to earnings reports but concerns about inflation persist. News sentiment for tech stocks is largely positive, while energy sector news is more neutral to negative.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (symbols.length > 0) {\n      fetchAISummary();\n    }\n  }, [symbols]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-summary\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"AI Market Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Generating AI analysis...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Today's Stock Movement Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sentiment-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"News Sentiment & Public Reaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: sentiment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(AISummary, \"yLDuQ1ob+qHfZR9fzNt4+tjioNs=\");\n_c = AISummary;\nexport default AISummary;\nvar _c;\n$RefreshReg$(_c, \"AISummary\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","AISummary","symbols","_s","summary","setSummary","sentiment","setSentiment","loading","setLoading","error","setError","fetchAISummary","response","post","join","data","err","console","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shagun Khandelwal/zerodha/client/src/components/AISummary/AISummary.js"],"sourcesContent":["// src/components/AISummary/AISummary.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './AISummary.css';\r\n\r\nconst AISummary = ({ symbols = [] }) => {\r\n  const [summary, setSummary] = useState('');\r\n  const [sentiment, setSentiment] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchAISummary = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // In a real implementation, you would call your backend API\r\n      // which would then call the OpenAI API\r\n      const response = await axios.post('/api/ai/summary', {\r\n        symbols: symbols.join(',')\r\n      });\r\n\r\n      setSummary(response.data.summary);\r\n      setSentiment(response.data.sentiment);\r\n    } catch (err) {\r\n      console.error('Error fetching AI summary:', err);\r\n      setError('Failed to load AI analysis. Please try again later.');\r\n      \r\n      // Mock data for demonstration\r\n      setSummary(\"Today's market showed mixed performance with tech stocks gaining while energy sectors declined. AAPL rose 2.3% on positive earnings news, while TSLA dropped 1.8% amid supply chain concerns.\");\r\n      setSentiment(\"Market sentiment is cautiously optimistic with positive reactions to earnings reports but concerns about inflation persist. News sentiment for tech stocks is largely positive, while energy sector news is more neutral to negative.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (symbols.length > 0) {\r\n      fetchAISummary();\r\n    }\r\n  }, [symbols]);\r\n\r\n  return (\r\n    <div className=\"ai-summary\">\r\n      <h3>AI Market Analysis</h3>\r\n      \r\n      {loading ? (\r\n        <div className=\"loading\">Generating AI analysis...</div>\r\n      ) : error ? (\r\n        <div className=\"error\">{error}</div>\r\n      ) : (\r\n        <>\r\n          <div className=\"summary-section\">\r\n            <h4>Today's Stock Movement Summary</h4>\r\n            <p>{summary}</p>\r\n          </div>\r\n          \r\n          <div className=\"sentiment-section\">\r\n            <h4>News Sentiment & Public Reaction</h4>\r\n            <p>{sentiment}</p>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AISummary;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
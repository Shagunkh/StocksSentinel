{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shagun Khandelwal\\\\zerodha\\\\client\\\\src\\\\components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport './Dashboard.css';\nimport axios from 'axios';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst Dashboard = ({\n  chartData,\n  chartSymbol,\n  showChart,\n  onCloseChart\n}) => {\n  _s();\n  const [currentChartData, setCurrentChartData] = useState(chartData);\n  const [currentTimeRange, setCurrentTimeRange] = useState('3mo');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const FINNHUB_API_KEY = 'd17tfrhr01qteuvpuh10d17tfrhr01qteuvpuh1g';\n  useEffect(() => {\n    if (showChart && chartData) {\n      setCurrentChartData(chartData);\n    }\n  }, [showChart, chartData]);\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        enabled: true,\n        mode: 'index',\n        intersect: false,\n        callbacks: {\n          label: function (context) {\n            return `â‚¹${context.parsed.y.toFixed(2)}`;\n          }\n        }\n      }\n    },\n    scales: {\n      y: {\n        display: true,\n        position: 'left',\n        grid: {\n          drawBorder: false,\n          color: '#f0f0f0'\n        },\n        ticks: {\n          color: '#666',\n          font: {\n            size: 12\n          },\n          callback: function (value) {\n            return value.toFixed(1);\n          }\n        }\n      },\n      x: {\n        grid: {\n          display: false,\n          drawBorder: false\n        },\n        ticks: {\n          color: '#666',\n          font: {\n            size: 12\n          },\n          maxRotation: 0,\n          autoSkip: true,\n          maxTicksLimit: 8\n        }\n      }\n    },\n    elements: {\n      point: {\n        radius: 0,\n        hitRadius: 10,\n        hoverRadius: 5\n      },\n      line: {\n        borderWidth: 2,\n        tension: 0.1,\n        fill: true\n      }\n    },\n    interaction: {\n      mode: 'index',\n      intersect: false\n    }\n  };\n  const fetchChartData = async timeRange => {\n    if (!chartSymbol) return;\n    setLoading(true);\n    setError(null);\n    try {\n      // First try Finnhub\n      try {\n        var _data$c;\n        const to = Math.floor(Date.now() / 1000);\n        let from;\n        let resolution = 'D';\n\n        // Set time range based on selection\n        switch (timeRange) {\n          case '1D':\n            from = to - 24 * 60 * 60;\n            resolution = '5';\n            break;\n          case '5D':\n            from = to - 5 * 24 * 60 * 60;\n            resolution = '15';\n            break;\n          case '1M':\n            from = to - 30 * 24 * 60 * 60;\n            break;\n          case '6M':\n            from = to - 6 * 30 * 24 * 60 * 60;\n            break;\n          case '1Y':\n            from = to - 365 * 24 * 60 * 60;\n            break;\n          case '5Y':\n            from = to - 5 * 365 * 24 * 60 * 60;\n            break;\n          default:\n            // default to 3 months\n            from = to - 90 * 24 * 60 * 60;\n        }\n        const response = await axios.get(`https://finnhub.io/api/v1/stock/candle?symbol=${chartSymbol}&resolution=${resolution}&from=${from}&to=${to}&token=${FINNHUB_API_KEY}`);\n        const data = response.data;\n        if (data.s === 'ok' && ((_data$c = data.c) === null || _data$c === void 0 ? void 0 : _data$c.length) > 0) {\n          const chartLabels = data.t.map(timestamp => timeRange === '1D' || timeRange === '5D' ? new Date(timestamp * 1000).toLocaleTimeString() : new Date(timestamp * 1000).toLocaleDateString());\n          const newChartData = {\n            labels: chartLabels,\n            datasets: [{\n              label: `${chartSymbol} Price`,\n              data: data.c,\n              borderColor: '#3a80e9',\n              backgroundColor: 'rgba(58, 128, 233, 0.1)',\n              borderWidth: 2,\n              tension: 0.1,\n              fill: true\n            }],\n            timeRange\n          };\n          setCurrentChartData(newChartData);\n          setCurrentTimeRange(timeRange);\n          return;\n        }\n      } catch (finnhubError) {\n        console.log('Finnhub failed, trying Yahoo Finance...');\n      }\n\n      // Fallback to Yahoo Finance\n      let yahooRange;\n      let interval;\n      switch (timeRange) {\n        case '1D':\n          yahooRange = '1d';\n          interval = '5m';\n          break;\n        case '5D':\n          yahooRange = '5d';\n          interval = '15m';\n          break;\n        case '1M':\n          yahooRange = '1mo';\n          interval = '1d';\n          break;\n        case '6M':\n          yahooRange = '6mo';\n          interval = '1d';\n          break;\n        case '1Y':\n          yahooRange = '1y';\n          interval = '1wk';\n          break;\n        case '5Y':\n          yahooRange = '5y';\n          interval = '1mo';\n          break;\n        default:\n          yahooRange = '3mo';\n          interval = '1d';\n      }\n      const proxyUrl = 'https://api.allorigins.win/get?url=';\n      const yahooUrl = `https://query1.finance.yahoo.com/v8/finance/chart/${chartSymbol}?range=${yahooRange}&interval=${interval}`;\n      const response = await axios.get(proxyUrl + encodeURIComponent(yahooUrl));\n      const parsedData = JSON.parse(response.data.contents);\n      if (!parsedData.chart.result) {\n        throw new Error('No chart data available');\n      }\n      const result = parsedData.chart.result[0];\n      const timestamps = result.timestamp;\n      const quotes = result.indicators.quote[0];\n      const chartLabels = timestamps.map(timestamp => timeRange === '1D' || timeRange === '5D' ? new Date(timestamp * 1000).toLocaleTimeString() : new Date(timestamp * 1000).toLocaleDateString());\n      const newChartData = {\n        labels: chartLabels,\n        datasets: [{\n          label: `${chartSymbol} Price`,\n          data: quotes.close,\n          borderColor: '#3a80e9',\n          backgroundColor: 'rgba(58, 128, 233, 0.1)',\n          borderWidth: 2,\n          tension: 0.1,\n          fill: true\n        }],\n        timeRange\n      };\n      setCurrentChartData(newChartData);\n      setCurrentTimeRange(timeRange);\n    } catch (err) {\n      console.error('Error fetching chart data:', err);\n      setError('Failed to load chart data. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getTimeRangeLabel = () => {\n    switch (currentTimeRange) {\n      case '1D':\n        return '1 Day';\n      case '5D':\n        return '5 Days';\n      case '1M':\n        return '1 Month';\n      case '6M':\n        return '6 Months';\n      case '1Y':\n        return '1 Year';\n      case '5Y':\n        return '5 Years';\n      default:\n        return '3 Months';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your portfolio summary and analytics will appear here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), showChart && currentChartData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [chartSymbol, \" - \", getTimeRangeLabel(), \" Price History\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-time-range-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: currentTimeRange === '1D' ? 'active' : '',\n              onClick: () => fetchChartData('1D'),\n              children: \"1D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: currentTimeRange === '5D' ? 'active' : '',\n              onClick: () => fetchChartData('5D'),\n              children: \"5D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: currentTimeRange === '1M' ? 'active' : '',\n              onClick: () => fetchChartData('1M'),\n              children: \"1M\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: currentTimeRange === '6M' ? 'active' : '',\n              onClick: () => fetchChartData('6M'),\n              children: \"6M\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: currentTimeRange === '1Y' ? 'active' : '',\n              onClick: () => fetchChartData('1Y'),\n              children: \"1Y\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: currentTimeRange === '5Y' ? 'active' : '',\n              onClick: () => fetchChartData('5Y'),\n              children: \"5Y\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-chart\",\n            onClick: onCloseChart,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-loading\",\n            children: \"Loading chart data...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Line, {\n            data: currentChartData,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"x9Yp5fbIQxVgPeMu8l7g+2hWars=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","axios","jsxDEV","_jsxDEV","register","Dashboard","chartData","chartSymbol","showChart","onCloseChart","_s","currentChartData","setCurrentChartData","currentTimeRange","setCurrentTimeRange","loading","setLoading","error","setError","FINNHUB_API_KEY","chartOptions","responsive","maintainAspectRatio","plugins","legend","display","tooltip","enabled","mode","intersect","callbacks","label","context","parsed","y","toFixed","scales","position","grid","drawBorder","color","ticks","font","size","callback","value","x","maxRotation","autoSkip","maxTicksLimit","elements","point","radius","hitRadius","hoverRadius","line","borderWidth","tension","fill","interaction","fetchChartData","timeRange","_data$c","to","Math","floor","Date","now","from","resolution","response","get","data","s","c","length","chartLabels","t","map","timestamp","toLocaleTimeString","toLocaleDateString","newChartData","labels","datasets","borderColor","backgroundColor","finnhubError","console","log","yahooRange","interval","proxyUrl","yahooUrl","encodeURIComponent","parsedData","JSON","parse","contents","chart","result","Error","timestamps","quotes","indicators","quote","close","err","getTimeRangeLabel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","options","_c","$RefreshReg$"],"sources":["C:/Users/Shagun Khandelwal/zerodha/client/src/components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport './Dashboard.css';\r\nimport axios from 'axios';\r\n\r\n// Register ChartJS components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst Dashboard = ({ chartData, chartSymbol, showChart, onCloseChart }) => {\r\n  const [currentChartData, setCurrentChartData] = useState(chartData);\r\n  const [currentTimeRange, setCurrentTimeRange] = useState('3mo');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const FINNHUB_API_KEY = 'd17tfrhr01qteuvpuh10d17tfrhr01qteuvpuh1g';\r\n\r\n  useEffect(() => {\r\n    if (showChart && chartData) {\r\n      setCurrentChartData(chartData);\r\n    }\r\n  }, [showChart, chartData]);\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n      tooltip: {\r\n        enabled: true,\r\n        mode: 'index',\r\n        intersect: false,\r\n        callbacks: {\r\n          label: function(context) {\r\n            return `â‚¹${context.parsed.y.toFixed(2)}`;\r\n          }\r\n        }\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        display: true,\r\n        position: 'left',\r\n        grid: {\r\n          drawBorder: false,\r\n          color: '#f0f0f0',\r\n        },\r\n        ticks: {\r\n          color: '#666',\r\n          font: {\r\n            size: 12,\r\n          },\r\n          callback: function(value) {\r\n            return value.toFixed(1);\r\n          }\r\n        }\r\n      },\r\n      x: {\r\n        grid: {\r\n          display: false,\r\n          drawBorder: false,\r\n        },\r\n        ticks: {\r\n          color: '#666',\r\n          font: {\r\n            size: 12,\r\n          },\r\n          maxRotation: 0,\r\n          autoSkip: true,\r\n          maxTicksLimit: 8\r\n        }\r\n      }\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 0,\r\n        hitRadius: 10,\r\n        hoverRadius: 5,\r\n      },\r\n      line: {\r\n        borderWidth: 2,\r\n        tension: 0.1,\r\n        fill: true,\r\n      }\r\n    },\r\n    interaction: {\r\n      mode: 'index',\r\n      intersect: false,\r\n    }\r\n  };\r\n\r\n  const fetchChartData = async (timeRange) => {\r\n    if (!chartSymbol) return;\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // First try Finnhub\r\n      try {\r\n        const to = Math.floor(Date.now() / 1000);\r\n        let from;\r\n        let resolution = 'D';\r\n        \r\n        // Set time range based on selection\r\n        switch(timeRange) {\r\n          case '1D':\r\n            from = to - (24 * 60 * 60);\r\n            resolution = '5';\r\n            break;\r\n          case '5D':\r\n            from = to - (5 * 24 * 60 * 60);\r\n            resolution = '15';\r\n            break;\r\n          case '1M':\r\n            from = to - (30 * 24 * 60 * 60);\r\n            break;\r\n          case '6M':\r\n            from = to - (6 * 30 * 24 * 60 * 60);\r\n            break;\r\n          case '1Y':\r\n            from = to - (365 * 24 * 60 * 60);\r\n            break;\r\n          case '5Y':\r\n            from = to - (5 * 365 * 24 * 60 * 60);\r\n            break;\r\n          default: // default to 3 months\r\n            from = to - (90 * 24 * 60 * 60);\r\n        }\r\n        \r\n        const response = await axios.get(\r\n          `https://finnhub.io/api/v1/stock/candle?symbol=${chartSymbol}&resolution=${resolution}&from=${from}&to=${to}&token=${FINNHUB_API_KEY}`\r\n        );\r\n        \r\n        const data = response.data;\r\n        \r\n        if (data.s === 'ok' && data.c?.length > 0) {\r\n          const chartLabels = data.t.map(timestamp => \r\n            timeRange === '1D' || timeRange === '5D'\r\n              ? new Date(timestamp * 1000).toLocaleTimeString() \r\n              : new Date(timestamp * 1000).toLocaleDateString()\r\n          );\r\n          \r\n          const newChartData = {\r\n            labels: chartLabels,\r\n            datasets: [\r\n              {\r\n                label: `${chartSymbol} Price`,\r\n                data: data.c,\r\n                borderColor: '#3a80e9',\r\n                backgroundColor: 'rgba(58, 128, 233, 0.1)',\r\n                borderWidth: 2,\r\n                tension: 0.1,\r\n                fill: true\r\n              }\r\n            ],\r\n            timeRange\r\n          };\r\n          \r\n          setCurrentChartData(newChartData);\r\n          setCurrentTimeRange(timeRange);\r\n          return;\r\n        }\r\n      } catch (finnhubError) {\r\n        console.log('Finnhub failed, trying Yahoo Finance...');\r\n      }\r\n      \r\n      // Fallback to Yahoo Finance\r\n      let yahooRange;\r\n      let interval;\r\n      switch(timeRange) {\r\n        case '1D': \r\n          yahooRange = '1d';\r\n          interval = '5m';\r\n          break;\r\n        case '5D': \r\n          yahooRange = '5d';\r\n          interval = '15m';\r\n          break;\r\n        case '1M': \r\n          yahooRange = '1mo';\r\n          interval = '1d';\r\n          break;\r\n        case '6M': \r\n          yahooRange = '6mo';\r\n          interval = '1d';\r\n          break;\r\n        case '1Y': \r\n          yahooRange = '1y';\r\n          interval = '1wk';\r\n          break;\r\n        case '5Y': \r\n          yahooRange = '5y';\r\n          interval = '1mo';\r\n          break;\r\n        default: \r\n          yahooRange = '3mo';\r\n          interval = '1d';\r\n      }\r\n      \r\n      const proxyUrl = 'https://api.allorigins.win/get?url=';\r\n      const yahooUrl = `https://query1.finance.yahoo.com/v8/finance/chart/${chartSymbol}?range=${yahooRange}&interval=${interval}`;\r\n      \r\n      const response = await axios.get(proxyUrl + encodeURIComponent(yahooUrl));\r\n      const parsedData = JSON.parse(response.data.contents);\r\n      \r\n      if (!parsedData.chart.result) {\r\n        throw new Error('No chart data available');\r\n      }\r\n      \r\n      const result = parsedData.chart.result[0];\r\n      const timestamps = result.timestamp;\r\n      const quotes = result.indicators.quote[0];\r\n      \r\n      const chartLabels = timestamps.map(timestamp => \r\n        timeRange === '1D' || timeRange === '5D'\r\n          ? new Date(timestamp * 1000).toLocaleTimeString() \r\n          : new Date(timestamp * 1000).toLocaleDateString()\r\n      );\r\n      \r\n      const newChartData = {\r\n        labels: chartLabels,\r\n        datasets: [\r\n          {\r\n            label: `${chartSymbol} Price`,\r\n            data: quotes.close,\r\n            borderColor: '#3a80e9',\r\n            backgroundColor: 'rgba(58, 128, 233, 0.1)',\r\n            borderWidth: 2,\r\n            tension: 0.1,\r\n            fill: true\r\n          }\r\n        ],\r\n        timeRange\r\n      };\r\n      \r\n      setCurrentChartData(newChartData);\r\n      setCurrentTimeRange(timeRange);\r\n      \r\n    } catch (err) {\r\n      console.error('Error fetching chart data:', err);\r\n      setError('Failed to load chart data. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getTimeRangeLabel = () => {\r\n    switch(currentTimeRange) {\r\n      case '1D': return '1 Day';\r\n      case '5D': return '5 Days';\r\n      case '1M': return '1 Month';\r\n      case '6M': return '6 Months';\r\n      case '1Y': return '1 Year';\r\n      case '5Y': return '5 Years';\r\n      default: return '3 Months';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-content\">\r\n      <h2>Dashboard Overview</h2>\r\n      <p>Your portfolio summary and analytics will appear here.</p>\r\n\r\n      {/* Chart Modal */}\r\n      {showChart && currentChartData && (\r\n        <div className=\"chart-modal\">\r\n          <div className=\"chart-modal-content\">\r\n            <div className=\"chart-header\">\r\n              <h3>{chartSymbol} - {getTimeRangeLabel()} Price History</h3>\r\n              <div className=\"chart-time-range-buttons\">\r\n                <button \r\n                  className={currentTimeRange === '1D' ? 'active' : ''}\r\n                  onClick={() => fetchChartData('1D')}\r\n                >\r\n                  1D\r\n                </button>\r\n                <button \r\n                  className={currentTimeRange === '5D' ? 'active' : ''}\r\n                  onClick={() => fetchChartData('5D')}\r\n                >\r\n                  5D\r\n                </button>\r\n                <button \r\n                  className={currentTimeRange === '1M' ? 'active' : ''}\r\n                  onClick={() => fetchChartData('1M')}\r\n                >\r\n                  1M\r\n                </button>\r\n                <button \r\n                  className={currentTimeRange === '6M' ? 'active' : ''}\r\n                  onClick={() => fetchChartData('6M')}\r\n                >\r\n                  6M\r\n                </button>\r\n                <button \r\n                  className={currentTimeRange === '1Y' ? 'active' : ''}\r\n                  onClick={() => fetchChartData('1Y')}\r\n                >\r\n                  1Y\r\n                </button>\r\n                <button \r\n                  className={currentTimeRange === '5Y' ? 'active' : ''}\r\n                  onClick={() => fetchChartData('5Y')}\r\n                >\r\n                  5Y\r\n                </button>\r\n              </div>\r\n              <button className=\"close-chart\" onClick={onCloseChart}>Ã—</button>\r\n            </div>\r\n            <div className=\"chart-container\">\r\n              {loading ? (\r\n                <div className=\"chart-loading\">Loading chart data...</div>\r\n              ) : error ? (\r\n                <div className=\"chart-error\">{error}</div>\r\n              ) : (\r\n                <Line data={currentChartData} options={chartOptions} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shagun Khandelwal\\\\zerodha\\\\client\\\\src\\\\components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport NewsFeed from '../NewsFeed/NewsFeed';\nimport { useAuth } from '../../context/AuthContext';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport './Dashboard.css';\nimport axios from 'axios';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst Dashboard = () => {\n  _s();\n  var _user$walletBalance, _user$walletBalance2;\n  const location = useLocation();\n  const [showChart, setShowChart] = useState(false);\n  const [chartSymbol, setChartSymbol] = useState(null);\n  const [currentChartData, setCurrentChartData] = useState(null);\n  const [currentTimeRange, setCurrentTimeRange] = useState('3mo');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const {\n    user\n  } = useAuth();\n  const [holdings, setHoldings] = useState([]);\n  const [marketPrices, setMarketPrices] = useState({});\n  const [totalInvestment, setTotalInvestment] = useState(0);\n  const [totalCurrentValue, setTotalCurrentValue] = useState(0);\n  const [totalPnl, setTotalPnl] = useState(0);\n  const [totalPnlPercent, setTotalPnlPercent] = useState(0);\n  const navigate = useNavigate();\n  const FINNHUB_API_KEY = 'd17tfrhr01qteuvpuh10d17tfrhr01qteuvpuh1g';\n\n  // Initialize chart when navigating from Watchlist\n  useEffect(() => {\n    var _location$state, _location$state2;\n    if ((_location$state = location.state) !== null && _location$state !== void 0 && _location$state.showChart && (_location$state2 = location.state) !== null && _location$state2 !== void 0 && _location$state2.chartSymbol) {\n      setShowChart(true);\n      setChartSymbol(location.state.chartSymbol);\n      // Clear the navigation state to prevent showing chart on refresh\n      window.history.replaceState({}, document.title);\n    }\n  }, [location.state]);\n  const handleCloseChart = () => {\n    setShowChart(false);\n    setChartSymbol(null);\n  };\n\n  // Fetch chart data when symbol changes\n  useEffect(() => {\n    if (chartSymbol) {\n      fetchChartData(currentTimeRange);\n    }\n  }, [chartSymbol, currentTimeRange]);\n  const fetchLivePrices = async symbols => {\n    try {\n      const pricePromises = symbols.map(symbol => axios.get(`https://finnhub.io/api/v1/quote?symbol=${symbol}&token=${FINNHUB_API_KEY}`));\n      const responses = await Promise.all(pricePromises);\n      const newPrices = {};\n      responses.forEach((response, index) => {\n        if (response.data && response.data.c) {\n          newPrices[symbols[index]] = response.data.c;\n        }\n      });\n      setMarketPrices(prev => ({\n        ...prev,\n        ...newPrices\n      }));\n    } catch (err) {\n      console.error('Error fetching live prices:', err);\n    }\n  };\n  useEffect(() => {\n    if (user !== null && user !== void 0 && user.positions && Object.keys(marketPrices).length > 0) {\n      const calculatedHoldings = user.positions.map(position => {\n        const currentPrice = marketPrices[position.symbol] || position.ltp || position.avgPrice;\n        const currentValue = position.quantity * currentPrice;\n        const investment = position.quantity * position.avgPrice;\n        const pnl = currentValue - investment;\n        const pnlPercent = pnl / investment * 100;\n        return {\n          ...position,\n          currentValue,\n          investment,\n          pnl,\n          pnlPercent,\n          currentPrice\n        };\n      });\n      const newTotalCurrentValue = calculatedHoldings.reduce((sum, h) => sum + h.currentValue, 0);\n      const newTotalInvestment = calculatedHoldings.reduce((sum, h) => sum + h.investment, 0);\n      const newTotalPnl = newTotalCurrentValue - newTotalInvestment;\n      const newTotalPnlPercent = newTotalPnl / newTotalInvestment * 100;\n      setHoldings(calculatedHoldings);\n      setTotalCurrentValue(newTotalCurrentValue);\n      setTotalInvestment(newTotalInvestment);\n      setTotalPnl(newTotalPnl);\n      setTotalPnlPercent(newTotalPnlPercent);\n      setLoading(false);\n    }\n  }, [user, marketPrices]);\n  useEffect(() => {\n    if (user !== null && user !== void 0 && user.positions) {\n      const symbols = user.positions.map(p => p.symbol);\n      if (symbols.length > 0) {\n        fetchLivePrices(symbols);\n        const interval = setInterval(() => {\n          fetchLivePrices(symbols);\n        }, 30000);\n        return () => clearInterval(interval);\n      }\n    }\n  }, [user]);\n  const getChartColors = data => {\n    if (!data || !data.length) return {\n      borderColor: '#3a80e9',\n      backgroundColor: 'rgba(58, 128, 233, 0.3)'\n    };\n    const firstValue = data[0];\n    const lastValue = data[data.length - 1];\n    const isIncreasing = lastValue > firstValue;\n    return {\n      borderColor: isIncreasing ? '#4CAF50' : '#F44336',\n      backgroundColor: isIncreasing ? 'rgba(76, 175, 80, 0.3)' : 'rgba(244, 67, 54, 0.3)'\n    };\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        backgroundColor: 'rgba(0, 0, 0, 0.7)',\n        titleFont: {\n          size: 14,\n          weight: 'bold'\n        },\n        bodyFont: {\n          size: 12\n        },\n        padding: 12,\n        callbacks: {\n          label: function (context) {\n            let label = context.dataset.label || '';\n            if (label) {\n              label += ': ';\n            }\n            if (context.parsed.y !== null) {\n              label += '₹' + context.parsed.y.toFixed(2);\n            }\n            return label;\n          },\n          title: function (context) {\n            return context[0].label;\n          }\n        }\n      }\n    },\n    elements: {\n      point: {\n        radius: 0,\n        hoverRadius: 6,\n        hoverBorderWidth: 2,\n        hitRadius: 10\n      },\n      line: {\n        tension: 0,\n        fill: true,\n        borderWidth: 2\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false,\n        grid: {\n          drawBorder: false,\n          color: '#f0f0f0'\n        },\n        ticks: {\n          color: '#666',\n          callback: function (value) {\n            return '₹' + value.toFixed(1);\n          }\n        }\n      },\n      x: {\n        grid: {\n          display: false,\n          drawBorder: false\n        },\n        ticks: {\n          color: '#666',\n          maxRotation: 0,\n          autoSkip: true,\n          maxTicksLimit: 8\n        }\n      }\n    },\n    interaction: {\n      mode: 'index',\n      intersect: false\n    },\n    hover: {\n      mode: 'index',\n      intersect: false\n    }\n  };\n  const fetchChartData = async timeRange => {\n    if (!chartSymbol) return;\n    setLoading(true);\n    setError(null);\n    try {\n      let range, interval;\n      switch (timeRange) {\n        case '1D':\n          range = '1d';\n          interval = '5m';\n          break;\n        case '5D':\n          range = '5d';\n          interval = '15m';\n          break;\n        case '1M':\n          range = '1mo';\n          interval = '1d';\n          break;\n        case '6M':\n          range = '6mo';\n          interval = '1d';\n          break;\n        case '1Y':\n          range = '1y';\n          interval = '1wk';\n          break;\n        case '5Y':\n          range = '5y';\n          interval = '1mo';\n          break;\n        default:\n          range = '3mo';\n          interval = '1d';\n      }\n      const response = await axios.get(`/api/yahoo-finance/${chartSymbol}`, {\n        params: {\n          range,\n          interval\n        }\n      });\n      if (!response.data || !response.data.chart || !response.data.chart.result) {\n        throw new Error('Invalid response from Yahoo Finance API');\n      }\n      const result = response.data.chart.result[0];\n      const timestamps = result.timestamp;\n      const quotes = result.indicators.quote[0];\n      const closes = quotes.close;\n      const chartLabels = timestamps.map(timestamp => timeRange === '1D' || timeRange === '5D' ? new Date(timestamp * 1000).toLocaleTimeString() : new Date(timestamp * 1000).toLocaleDateString());\n      const colors = getChartColors(closes);\n      setCurrentChartData({\n        labels: chartLabels,\n        datasets: [{\n          label: `${chartSymbol} Price`,\n          data: closes,\n          borderColor: colors.borderColor,\n          backgroundColor: colors.backgroundColor,\n          borderWidth: 2,\n          tension: 0,\n          fill: true\n        }],\n        timeRange,\n        symbol: chartSymbol\n      });\n      setCurrentTimeRange(timeRange);\n    } catch (err) {\n      console.error('Error fetching chart data:', err);\n      setError('Failed to load chart data. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getTimeRangeLabel = () => {\n    switch (currentTimeRange) {\n      case '1D':\n        return '1 Day';\n      case '5D':\n        return '5 Days';\n      case '1M':\n        return '1 Month';\n      case '6M':\n        return '6 Months';\n      case '1Y':\n        return '1 Year';\n      case '5Y':\n        return '5 Years';\n      default:\n        return '3 Months';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), showChart && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [chartSymbol, \" - \", getTimeRangeLabel(), \" Price History\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-time-range-buttons\",\n            children: ['1D', '5D', '1M', '6M', '1Y', '5Y'].map(range => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: currentTimeRange === range ? 'active' : '',\n              onClick: () => fetchChartData(range),\n              children: range\n            }, range, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-chart\",\n            onClick: handleCloseChart,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-loading\",\n            children: \"Loading chart data...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 17\n          }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 17\n          }, this) : currentChartData ? /*#__PURE__*/_jsxDEV(Line, {\n            data: currentChartData,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-sections\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Equity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-value\",\n            children: [user === null || user === void 0 ? void 0 : (_user$walletBalance = user.walletBalance) === null || _user$walletBalance === void 0 ? void 0 : _user$walletBalance.toLocaleString('en-IN', {\n              maximumFractionDigits: 2,\n              style: 'currency',\n              currency: 'INR'\n            }).replace('.00', ''), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"card-label\",\n              children: \"Margin available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Margins used\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Opening balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: user === null || user === void 0 ? void 0 : (_user$walletBalance2 = user.walletBalance) === null || _user$walletBalance2 === void 0 ? void 0 : _user$walletBalance2.toLocaleString('en-IN', {\n                  maximumFractionDigits: 2,\n                  style: 'currency',\n                  currency: 'INR'\n                }).replace('.00', '')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Holdings (\", holdings.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-value\",\n            children: [totalPnl.toLocaleString('en-IN', {\n              maximumFractionDigits: 2,\n              style: 'currency',\n              currency: 'INR'\n            }).replace('.00', ''), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `pnl-percent ${totalPnl >= 0 ? 'positive' : 'negative'}`,\n              children: [totalPnl >= 0 ? '+' : '', totalPnlPercent.toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"card-label\",\n              children: \"P&L\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Current Value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: totalCurrentValue.toLocaleString('en-IN', {\n                  maximumFractionDigits: 2,\n                  style: 'currency',\n                  currency: 'INR'\n                }).replace('.00', '')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Investment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: totalInvestment.toLocaleString('en-IN', {\n                  maximumFractionDigits: 2,\n                  style: 'currency',\n                  currency: 'INR'\n                }).replace('.00', '')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewsFeed, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"lFfEmvgAg7qNQk68ivODCKi+Qv8=\", false, function () {\n  return [useLocation, useAuth, useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Line","useNavigate","useLocation","NewsFeed","useAuth","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","axios","jsxDEV","_jsxDEV","register","Dashboard","_s","_user$walletBalance","_user$walletBalance2","location","showChart","setShowChart","chartSymbol","setChartSymbol","currentChartData","setCurrentChartData","currentTimeRange","setCurrentTimeRange","loading","setLoading","error","setError","user","holdings","setHoldings","marketPrices","setMarketPrices","totalInvestment","setTotalInvestment","totalCurrentValue","setTotalCurrentValue","totalPnl","setTotalPnl","totalPnlPercent","setTotalPnlPercent","navigate","FINNHUB_API_KEY","_location$state","_location$state2","state","window","history","replaceState","document","title","handleCloseChart","fetchChartData","fetchLivePrices","symbols","pricePromises","map","symbol","get","responses","Promise","all","newPrices","forEach","response","index","data","c","prev","err","console","positions","Object","keys","length","calculatedHoldings","position","currentPrice","ltp","avgPrice","currentValue","quantity","investment","pnl","pnlPercent","newTotalCurrentValue","reduce","sum","h","newTotalInvestment","newTotalPnl","newTotalPnlPercent","p","interval","setInterval","clearInterval","getChartColors","borderColor","backgroundColor","firstValue","lastValue","isIncreasing","chartOptions","responsive","plugins","legend","display","tooltip","mode","intersect","titleFont","size","weight","bodyFont","padding","callbacks","label","context","dataset","parsed","y","toFixed","elements","point","radius","hoverRadius","hoverBorderWidth","hitRadius","line","tension","fill","borderWidth","scales","beginAtZero","grid","drawBorder","color","ticks","callback","value","x","maxRotation","autoSkip","maxTicksLimit","interaction","hover","timeRange","range","params","chart","result","Error","timestamps","timestamp","quotes","indicators","quote","closes","close","chartLabels","Date","toLocaleTimeString","toLocaleDateString","colors","labels","datasets","getTimeRangeLabel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","options","walletBalance","toLocaleString","maximumFractionDigits","style","currency","replace","_c","$RefreshReg$"],"sources":["C:/Users/Shagun Khandelwal/zerodha/client/src/components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport NewsFeed from '../NewsFeed/NewsFeed';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  Filler,\r\n} from 'chart.js';\r\nimport './Dashboard.css';\r\nimport axios from 'axios';\r\n\r\n// Register ChartJS components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  Filler\r\n);\r\n\r\nconst Dashboard = () => {\r\n  const location = useLocation();\r\n  const [showChart, setShowChart] = useState(false);\r\n  const [chartSymbol, setChartSymbol] = useState(null);\r\n  const [currentChartData, setCurrentChartData] = useState(null);\r\n  const [currentTimeRange, setCurrentTimeRange] = useState('3mo');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const { user } = useAuth();\r\n  const [holdings, setHoldings] = useState([]);\r\n  const [marketPrices, setMarketPrices] = useState({});\r\n  const [totalInvestment, setTotalInvestment] = useState(0);\r\n  const [totalCurrentValue, setTotalCurrentValue] = useState(0);\r\n  const [totalPnl, setTotalPnl] = useState(0);\r\n  const [totalPnlPercent, setTotalPnlPercent] = useState(0);\r\n  const navigate = useNavigate();\r\n  const FINNHUB_API_KEY = 'd17tfrhr01qteuvpuh10d17tfrhr01qteuvpuh1g';\r\n\r\n  // Initialize chart when navigating from Watchlist\r\n  useEffect(() => {\r\n    if (location.state?.showChart && location.state?.chartSymbol) {\r\n      setShowChart(true);\r\n      setChartSymbol(location.state.chartSymbol);\r\n      // Clear the navigation state to prevent showing chart on refresh\r\n      window.history.replaceState({}, document.title);\r\n    }\r\n  }, [location.state]);\r\n\r\n  const handleCloseChart = () => {\r\n    setShowChart(false);\r\n    setChartSymbol(null);\r\n  };\r\n\r\n  // Fetch chart data when symbol changes\r\n  useEffect(() => {\r\n    if (chartSymbol) {\r\n      fetchChartData(currentTimeRange);\r\n    }\r\n  }, [chartSymbol, currentTimeRange]);\r\n\r\n  const fetchLivePrices = async (symbols) => {\r\n    try {\r\n      const pricePromises = symbols.map(symbol => \r\n        axios.get(`https://finnhub.io/api/v1/quote?symbol=${symbol}&token=${FINNHUB_API_KEY}`)\r\n      );\r\n      \r\n      const responses = await Promise.all(pricePromises);\r\n      const newPrices = {};\r\n      \r\n      responses.forEach((response, index) => {\r\n        if (response.data && response.data.c) {\r\n          newPrices[symbols[index]] = response.data.c;\r\n        }\r\n      });\r\n      \r\n      setMarketPrices(prev => ({ ...prev, ...newPrices }));\r\n    } catch (err) {\r\n      console.error('Error fetching live prices:', err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user?.positions && Object.keys(marketPrices).length > 0) {\r\n      const calculatedHoldings = user.positions.map(position => {\r\n        const currentPrice = marketPrices[position.symbol] || position.ltp || position.avgPrice;\r\n        const currentValue = position.quantity * currentPrice;\r\n        const investment = position.quantity * position.avgPrice;\r\n        const pnl = currentValue - investment;\r\n        const pnlPercent = (pnl / investment) * 100;\r\n        \r\n        return {\r\n          ...position,\r\n          currentValue,\r\n          investment,\r\n          pnl,\r\n          pnlPercent,\r\n          currentPrice\r\n        };\r\n      });\r\n      \r\n      const newTotalCurrentValue = calculatedHoldings.reduce((sum, h) => sum + h.currentValue, 0);\r\n      const newTotalInvestment = calculatedHoldings.reduce((sum, h) => sum + h.investment, 0);\r\n      const newTotalPnl = newTotalCurrentValue - newTotalInvestment;\r\n      const newTotalPnlPercent = (newTotalPnl / newTotalInvestment) * 100;\r\n      \r\n      setHoldings(calculatedHoldings);\r\n      setTotalCurrentValue(newTotalCurrentValue);\r\n      setTotalInvestment(newTotalInvestment);\r\n      setTotalPnl(newTotalPnl);\r\n      setTotalPnlPercent(newTotalPnlPercent);\r\n      setLoading(false);\r\n    }\r\n  }, [user, marketPrices]);\r\n\r\n  useEffect(() => {\r\n    if (user?.positions) {\r\n      const symbols = user.positions.map(p => p.symbol);\r\n      if (symbols.length > 0) {\r\n        fetchLivePrices(symbols);\r\n        const interval = setInterval(() => {\r\n          fetchLivePrices(symbols);\r\n        }, 30000);\r\n        \r\n        return () => clearInterval(interval);\r\n      }\r\n    }\r\n  }, [user]);\r\n\r\n  const getChartColors = (data) => {\r\n    if (!data || !data.length) return { borderColor: '#3a80e9', backgroundColor: 'rgba(58, 128, 233, 0.3)' };\r\n    \r\n    const firstValue = data[0];\r\n    const lastValue = data[data.length - 1];\r\n    const isIncreasing = lastValue > firstValue;\r\n    \r\n    return {\r\n      borderColor: isIncreasing ? '#4CAF50' : '#F44336',\r\n      backgroundColor: isIncreasing ? 'rgba(76, 175, 80, 0.3)' : 'rgba(244, 67, 54, 0.3)'\r\n    };\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n      tooltip: {\r\n        mode: 'index',\r\n        intersect: false,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n        titleFont: {\r\n          size: 14,\r\n          weight: 'bold'\r\n        },\r\n        bodyFont: {\r\n          size: 12\r\n        },\r\n        padding: 12,\r\n        callbacks: {\r\n          label: function(context) {\r\n            let label = context.dataset.label || '';\r\n            if (label) {\r\n              label += ': ';\r\n            }\r\n            if (context.parsed.y !== null) {\r\n              label += '₹' + context.parsed.y.toFixed(2);\r\n            }\r\n            return label;\r\n          },\r\n          title: function(context) {\r\n            return context[0].label;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 0,\r\n        hoverRadius: 6,\r\n        hoverBorderWidth: 2,\r\n        hitRadius: 10\r\n      },\r\n      line: {\r\n        tension: 0,\r\n        fill: true,\r\n        borderWidth: 2\r\n      }\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: false,\r\n        grid: {\r\n          drawBorder: false,\r\n          color: '#f0f0f0',\r\n        },\r\n        ticks: {\r\n          color: '#666',\r\n          callback: function(value) {\r\n            return '₹' + value.toFixed(1);\r\n          }\r\n        }\r\n      },\r\n      x: {\r\n        grid: {\r\n          display: false,\r\n          drawBorder: false,\r\n        },\r\n        ticks: {\r\n          color: '#666',\r\n          maxRotation: 0,\r\n          autoSkip: true,\r\n          maxTicksLimit: 8\r\n        }\r\n      }\r\n    },\r\n    interaction: {\r\n      mode: 'index',\r\n      intersect: false\r\n    },\r\n    hover: {\r\n      mode: 'index',\r\n      intersect: false\r\n    }\r\n  };\r\n\r\n  const fetchChartData = async (timeRange) => {\r\n  if (!chartSymbol) return;\r\n  \r\n  setLoading(true);\r\n  setError(null);\r\n  \r\n  try {\r\n    let range, interval;\r\n    \r\n    switch(timeRange) {\r\n      case '1D': range = '1d'; interval = '5m'; break;\r\n      case '5D': range = '5d'; interval = '15m'; break;\r\n      case '1M': range = '1mo'; interval = '1d'; break;\r\n      case '6M': range = '6mo'; interval = '1d'; break;\r\n      case '1Y': range = '1y'; interval = '1wk'; break;\r\n      case '5Y': range = '5y'; interval = '1mo'; break;\r\n      default: range = '3mo'; interval = '1d';\r\n    }\r\n    \r\n    const response = await axios.get(`/api/yahoo-finance/${chartSymbol}`, {\r\n      params: {\r\n        range,\r\n        interval\r\n      }\r\n    });\r\n\r\n    if (!response.data || !response.data.chart || !response.data.chart.result) {\r\n      throw new Error('Invalid response from Yahoo Finance API');\r\n    }\r\n\r\n    const result = response.data.chart.result[0];\r\n    const timestamps = result.timestamp;\r\n    const quotes = result.indicators.quote[0];\r\n    const closes = quotes.close;\r\n\r\n    const chartLabels = timestamps.map(timestamp => \r\n      timeRange === '1D' || timeRange === '5D'\r\n        ? new Date(timestamp * 1000).toLocaleTimeString() \r\n        : new Date(timestamp * 1000).toLocaleDateString()\r\n    );\r\n    \r\n    const colors = getChartColors(closes);\r\n    \r\n    setCurrentChartData({\r\n      labels: chartLabels,\r\n      datasets: [{\r\n        label: `${chartSymbol} Price`,\r\n        data: closes,\r\n        borderColor: colors.borderColor,\r\n        backgroundColor: colors.backgroundColor,\r\n        borderWidth: 2,\r\n        tension: 0,\r\n        fill: true\r\n      }],\r\n      timeRange,\r\n      symbol: chartSymbol\r\n    });\r\n    setCurrentTimeRange(timeRange);\r\n  } catch (err) {\r\n    console.error('Error fetching chart data:', err);\r\n    setError('Failed to load chart data. Please try again later.');\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\n  const getTimeRangeLabel = () => {\r\n    switch(currentTimeRange) {\r\n      case '1D': return '1 Day';\r\n      case '5D': return '5 Days';\r\n      case '1M': return '1 Month';\r\n      case '6M': return '6 Months';\r\n      case '1Y': return '1 Year';\r\n      case '5Y': return '5 Years';\r\n      default: return '3 Months';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-content\">\r\n      <h2>Dashboard Overview</h2>\r\n      {showChart && (\r\n        <div className=\"chart-modal\">\r\n          <div className=\"chart-modal-content\">\r\n            <div className=\"chart-header\">\r\n              <h3>{chartSymbol} - {getTimeRangeLabel()} Price History</h3>\r\n              <div className=\"chart-time-range-buttons\">\r\n                {['1D', '5D', '1M', '6M', '1Y', '5Y'].map((range) => (\r\n                  <button \r\n                    key={range}\r\n                    className={currentTimeRange === range ? 'active' : ''}\r\n                    onClick={() => fetchChartData(range)}\r\n                  >\r\n                    {range}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n              <button className=\"close-chart\" onClick={handleCloseChart}>×</button>\r\n            </div>\r\n            <div className=\"chart-container\">\r\n              {loading ? (\r\n                <div className=\"chart-loading\">Loading chart data...</div>\r\n              ) : error ? (\r\n                <div className=\"chart-error\">{error}</div>\r\n              ) : currentChartData ? (\r\n                <Line data={currentChartData} options={chartOptions} />\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      \r\n      <div className=\"dashboard-sections\">\r\n        <div className=\"dashboard\">\r\n          <div className=\"card-header\">\r\n            <h3>Equity</h3>\r\n          </div>\r\n          <div className=\"card-content\">\r\n            <div className=\"card-value\">\r\n              {user?.walletBalance?.toLocaleString('en-IN', {\r\n                maximumFractionDigits: 2,\r\n                style: 'currency',\r\n                currency: 'INR'\r\n              }).replace('.00', '')}\r\n              <span className=\"card-label\">Margin available</span>\r\n            </div>\r\n            \r\n            <div className=\"card-details\">\r\n              <div className=\"detail-item\">\r\n                <span className=\"detail-label\">Margins used</span>\r\n                <span className=\"detail-value\">0</span>\r\n              </div>\r\n              <div className=\"detail-item\">\r\n                <span className=\"detail-label\">Opening balance</span>\r\n                <span className=\"detail-value\">\r\n                  {user?.walletBalance?.toLocaleString('en-IN', {\r\n                    maximumFractionDigits: 2,\r\n                    style: 'currency',\r\n                    currency: 'INR'\r\n                  }).replace('.00', '')}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"dashboard\">\r\n          <div className=\"card-header\">\r\n            <h3>Holdings ({holdings.length})</h3>\r\n          </div>\r\n          <div className=\"card-content\">\r\n            <div className=\"card-value\">\r\n              {totalPnl.toLocaleString('en-IN', {\r\n                maximumFractionDigits: 2,\r\n                style: 'currency',\r\n                currency: 'INR'\r\n              }).replace('.00', '')}\r\n              <span className={`pnl-percent ${totalPnl >= 0 ? 'positive' : 'negative'}`}>\r\n                {totalPnl >= 0 ? '+' : ''}{totalPnlPercent.toFixed(2)}%\r\n              </span>\r\n              <span className=\"card-label\">P&L</span>\r\n            </div>\r\n            \r\n            <div className=\"card-details\">\r\n              <div className=\"detail-item\">\r\n                <span className=\"detail-label\">Current Value</span>\r\n                <span className=\"detail-value\">\r\n                  {totalCurrentValue.toLocaleString('en-IN', {\r\n                    maximumFractionDigits: 2,\r\n                    style: 'currency',\r\n                    currency: 'INR'\r\n                  }).replace('.00', '')}\r\n                </span>\r\n              </div>\r\n              <div className=\"detail-item\">\r\n                <span className=\"detail-label\">Investment</span>\r\n                <span className=\"detail-value\">\r\n                  {totalInvestment.toLocaleString('en-IN', {\r\n                    maximumFractionDigits: 2,\r\n                    style: 'currency',\r\n                    currency: 'INR'\r\n                  }).replace('.00', '')}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      \r\n      <NewsFeed />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,OAAO,QAAQ,2BAA2B;AACnD,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,MAAM,QACD,UAAU;AACjB,OAAO,iBAAiB;AACxB,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAX,OAAO,CAACY,QAAQ,CACdX,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,MACF,CAAC;AAED,MAAMK,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,mBAAA,EAAAC,oBAAA;EACtB,MAAMC,QAAQ,GAAGrB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC4B,WAAW,EAAEC,cAAc,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC8B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACgC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACkC,OAAO,EAAEC,UAAU,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACoC,KAAK,EAAEC,QAAQ,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM;IAAEsC;EAAK,CAAC,GAAGhC,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACiC,QAAQ,EAAEC,WAAW,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyC,YAAY,EAAEC,eAAe,CAAC,GAAG1C,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAM,CAAC2C,eAAe,EAAEC,kBAAkB,CAAC,GAAG5C,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAAC6C,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG9C,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAM,CAAC+C,QAAQ,EAAEC,WAAW,CAAC,GAAGhD,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACiD,eAAe,EAAEC,kBAAkB,CAAC,GAAGlD,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAMmD,QAAQ,GAAGhD,WAAW,CAAC,CAAC;EAC9B,MAAMiD,eAAe,GAAG,0CAA0C;;EAElE;EACAnD,SAAS,CAAC,MAAM;IAAA,IAAAoD,eAAA,EAAAC,gBAAA;IACd,IAAI,CAAAD,eAAA,GAAA5B,QAAQ,CAAC8B,KAAK,cAAAF,eAAA,eAAdA,eAAA,CAAgB3B,SAAS,KAAA4B,gBAAA,GAAI7B,QAAQ,CAAC8B,KAAK,cAAAD,gBAAA,eAAdA,gBAAA,CAAgB1B,WAAW,EAAE;MAC5DD,YAAY,CAAC,IAAI,CAAC;MAClBE,cAAc,CAACJ,QAAQ,CAAC8B,KAAK,CAAC3B,WAAW,CAAC;MAC1C;MACA4B,MAAM,CAACC,OAAO,CAACC,YAAY,CAAC,CAAC,CAAC,EAAEC,QAAQ,CAACC,KAAK,CAAC;IACjD;EACF,CAAC,EAAE,CAACnC,QAAQ,CAAC8B,KAAK,CAAC,CAAC;EAEpB,MAAMM,gBAAgB,GAAGA,CAAA,KAAM;IAC7BlC,YAAY,CAAC,KAAK,CAAC;IACnBE,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;;EAED;EACA5B,SAAS,CAAC,MAAM;IACd,IAAI2B,WAAW,EAAE;MACfkC,cAAc,CAAC9B,gBAAgB,CAAC;IAClC;EACF,CAAC,EAAE,CAACJ,WAAW,EAAEI,gBAAgB,CAAC,CAAC;EAEnC,MAAM+B,eAAe,GAAG,MAAOC,OAAO,IAAK;IACzC,IAAI;MACF,MAAMC,aAAa,GAAGD,OAAO,CAACE,GAAG,CAACC,MAAM,IACtClD,KAAK,CAACmD,GAAG,CAAC,0CAA0CD,MAAM,UAAUf,eAAe,EAAE,CACvF,CAAC;MAED,MAAMiB,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACN,aAAa,CAAC;MAClD,MAAMO,SAAS,GAAG,CAAC,CAAC;MAEpBH,SAAS,CAACI,OAAO,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;QACrC,IAAID,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACC,CAAC,EAAE;UACpCL,SAAS,CAACR,OAAO,CAACW,KAAK,CAAC,CAAC,GAAGD,QAAQ,CAACE,IAAI,CAACC,CAAC;QAC7C;MACF,CAAC,CAAC;MAEFnC,eAAe,CAACoC,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,GAAGN;MAAU,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZC,OAAO,CAAC5C,KAAK,CAAC,6BAA6B,EAAE2C,GAAG,CAAC;IACnD;EACF,CAAC;EAED9E,SAAS,CAAC,MAAM;IACd,IAAIqC,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAE2C,SAAS,IAAIC,MAAM,CAACC,IAAI,CAAC1C,YAAY,CAAC,CAAC2C,MAAM,GAAG,CAAC,EAAE;MAC3D,MAAMC,kBAAkB,GAAG/C,IAAI,CAAC2C,SAAS,CAACf,GAAG,CAACoB,QAAQ,IAAI;QACxD,MAAMC,YAAY,GAAG9C,YAAY,CAAC6C,QAAQ,CAACnB,MAAM,CAAC,IAAImB,QAAQ,CAACE,GAAG,IAAIF,QAAQ,CAACG,QAAQ;QACvF,MAAMC,YAAY,GAAGJ,QAAQ,CAACK,QAAQ,GAAGJ,YAAY;QACrD,MAAMK,UAAU,GAAGN,QAAQ,CAACK,QAAQ,GAAGL,QAAQ,CAACG,QAAQ;QACxD,MAAMI,GAAG,GAAGH,YAAY,GAAGE,UAAU;QACrC,MAAME,UAAU,GAAID,GAAG,GAAGD,UAAU,GAAI,GAAG;QAE3C,OAAO;UACL,GAAGN,QAAQ;UACXI,YAAY;UACZE,UAAU;UACVC,GAAG;UACHC,UAAU;UACVP;QACF,CAAC;MACH,CAAC,CAAC;MAEF,MAAMQ,oBAAoB,GAAGV,kBAAkB,CAACW,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAKD,GAAG,GAAGC,CAAC,CAACR,YAAY,EAAE,CAAC,CAAC;MAC3F,MAAMS,kBAAkB,GAAGd,kBAAkB,CAACW,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAKD,GAAG,GAAGC,CAAC,CAACN,UAAU,EAAE,CAAC,CAAC;MACvF,MAAMQ,WAAW,GAAGL,oBAAoB,GAAGI,kBAAkB;MAC7D,MAAME,kBAAkB,GAAID,WAAW,GAAGD,kBAAkB,GAAI,GAAG;MAEnE3D,WAAW,CAAC6C,kBAAkB,CAAC;MAC/BvC,oBAAoB,CAACiD,oBAAoB,CAAC;MAC1CnD,kBAAkB,CAACuD,kBAAkB,CAAC;MACtCnD,WAAW,CAACoD,WAAW,CAAC;MACxBlD,kBAAkB,CAACmD,kBAAkB,CAAC;MACtClE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACG,IAAI,EAAEG,YAAY,CAAC,CAAC;EAExBxC,SAAS,CAAC,MAAM;IACd,IAAIqC,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAE2C,SAAS,EAAE;MACnB,MAAMjB,OAAO,GAAG1B,IAAI,CAAC2C,SAAS,CAACf,GAAG,CAACoC,CAAC,IAAIA,CAAC,CAACnC,MAAM,CAAC;MACjD,IAAIH,OAAO,CAACoB,MAAM,GAAG,CAAC,EAAE;QACtBrB,eAAe,CAACC,OAAO,CAAC;QACxB,MAAMuC,QAAQ,GAAGC,WAAW,CAAC,MAAM;UACjCzC,eAAe,CAACC,OAAO,CAAC;QAC1B,CAAC,EAAE,KAAK,CAAC;QAET,OAAO,MAAMyC,aAAa,CAACF,QAAQ,CAAC;MACtC;IACF;EACF,CAAC,EAAE,CAACjE,IAAI,CAAC,CAAC;EAEV,MAAMoE,cAAc,GAAI9B,IAAI,IAAK;IAC/B,IAAI,CAACA,IAAI,IAAI,CAACA,IAAI,CAACQ,MAAM,EAAE,OAAO;MAAEuB,WAAW,EAAE,SAAS;MAAEC,eAAe,EAAE;IAA0B,CAAC;IAExG,MAAMC,UAAU,GAAGjC,IAAI,CAAC,CAAC,CAAC;IAC1B,MAAMkC,SAAS,GAAGlC,IAAI,CAACA,IAAI,CAACQ,MAAM,GAAG,CAAC,CAAC;IACvC,MAAM2B,YAAY,GAAGD,SAAS,GAAGD,UAAU;IAE3C,OAAO;MACLF,WAAW,EAAEI,YAAY,GAAG,SAAS,GAAG,SAAS;MACjDH,eAAe,EAAEG,YAAY,GAAG,wBAAwB,GAAG;IAC7D,CAAC;EACH,CAAC;EAED,MAAMC,YAAY,GAAG;IACnBC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,OAAO,EAAE;MACX,CAAC;MACDC,OAAO,EAAE;QACPC,IAAI,EAAE,OAAO;QACbC,SAAS,EAAE,KAAK;QAChBX,eAAe,EAAE,oBAAoB;QACrCY,SAAS,EAAE;UACTC,IAAI,EAAE,EAAE;UACRC,MAAM,EAAE;QACV,CAAC;QACDC,QAAQ,EAAE;UACRF,IAAI,EAAE;QACR,CAAC;QACDG,OAAO,EAAE,EAAE;QACXC,SAAS,EAAE;UACTC,KAAK,EAAE,SAAAA,CAASC,OAAO,EAAE;YACvB,IAAID,KAAK,GAAGC,OAAO,CAACC,OAAO,CAACF,KAAK,IAAI,EAAE;YACvC,IAAIA,KAAK,EAAE;cACTA,KAAK,IAAI,IAAI;YACf;YACA,IAAIC,OAAO,CAACE,MAAM,CAACC,CAAC,KAAK,IAAI,EAAE;cAC7BJ,KAAK,IAAI,GAAG,GAAGC,OAAO,CAACE,MAAM,CAACC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;YAC5C;YACA,OAAOL,KAAK;UACd,CAAC;UACDlE,KAAK,EAAE,SAAAA,CAASmE,OAAO,EAAE;YACvB,OAAOA,OAAO,CAAC,CAAC,CAAC,CAACD,KAAK;UACzB;QACF;MACF;IACF,CAAC;IACDM,QAAQ,EAAE;MACRC,KAAK,EAAE;QACLC,MAAM,EAAE,CAAC;QACTC,WAAW,EAAE,CAAC;QACdC,gBAAgB,EAAE,CAAC;QACnBC,SAAS,EAAE;MACb,CAAC;MACDC,IAAI,EAAE;QACJC,OAAO,EAAE,CAAC;QACVC,IAAI,EAAE,IAAI;QACVC,WAAW,EAAE;MACf;IACF,CAAC;IACDC,MAAM,EAAE;MACNZ,CAAC,EAAE;QACDa,WAAW,EAAE,KAAK;QAClBC,IAAI,EAAE;UACJC,UAAU,EAAE,KAAK;UACjBC,KAAK,EAAE;QACT,CAAC;QACDC,KAAK,EAAE;UACLD,KAAK,EAAE,MAAM;UACbE,QAAQ,EAAE,SAAAA,CAASC,KAAK,EAAE;YACxB,OAAO,GAAG,GAAGA,KAAK,CAAClB,OAAO,CAAC,CAAC,CAAC;UAC/B;QACF;MACF,CAAC;MACDmB,CAAC,EAAE;QACDN,IAAI,EAAE;UACJ5B,OAAO,EAAE,KAAK;UACd6B,UAAU,EAAE;QACd,CAAC;QACDE,KAAK,EAAE;UACLD,KAAK,EAAE,MAAM;UACbK,WAAW,EAAE,CAAC;UACdC,QAAQ,EAAE,IAAI;UACdC,aAAa,EAAE;QACjB;MACF;IACF,CAAC;IACDC,WAAW,EAAE;MACXpC,IAAI,EAAE,OAAO;MACbC,SAAS,EAAE;IACb,CAAC;IACDoC,KAAK,EAAE;MACLrC,IAAI,EAAE,OAAO;MACbC,SAAS,EAAE;IACb;EACF,CAAC;EAED,MAAMzD,cAAc,GAAG,MAAO8F,SAAS,IAAK;IAC5C,IAAI,CAAChI,WAAW,EAAE;IAElBO,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,IAAIwH,KAAK,EAAEtD,QAAQ;MAEnB,QAAOqD,SAAS;QACd,KAAK,IAAI;UAAEC,KAAK,GAAG,IAAI;UAAEtD,QAAQ,GAAG,IAAI;UAAE;QAC1C,KAAK,IAAI;UAAEsD,KAAK,GAAG,IAAI;UAAEtD,QAAQ,GAAG,KAAK;UAAE;QAC3C,KAAK,IAAI;UAAEsD,KAAK,GAAG,KAAK;UAAEtD,QAAQ,GAAG,IAAI;UAAE;QAC3C,KAAK,IAAI;UAAEsD,KAAK,GAAG,KAAK;UAAEtD,QAAQ,GAAG,IAAI;UAAE;QAC3C,KAAK,IAAI;UAAEsD,KAAK,GAAG,IAAI;UAAEtD,QAAQ,GAAG,KAAK;UAAE;QAC3C,KAAK,IAAI;UAAEsD,KAAK,GAAG,IAAI;UAAEtD,QAAQ,GAAG,KAAK;UAAE;QAC3C;UAASsD,KAAK,GAAG,KAAK;UAAEtD,QAAQ,GAAG,IAAI;MACzC;MAEA,MAAM7B,QAAQ,GAAG,MAAMzD,KAAK,CAACmD,GAAG,CAAC,sBAAsBxC,WAAW,EAAE,EAAE;QACpEkI,MAAM,EAAE;UACND,KAAK;UACLtD;QACF;MACF,CAAC,CAAC;MAEF,IAAI,CAAC7B,QAAQ,CAACE,IAAI,IAAI,CAACF,QAAQ,CAACE,IAAI,CAACmF,KAAK,IAAI,CAACrF,QAAQ,CAACE,IAAI,CAACmF,KAAK,CAACC,MAAM,EAAE;QACzE,MAAM,IAAIC,KAAK,CAAC,yCAAyC,CAAC;MAC5D;MAEA,MAAMD,MAAM,GAAGtF,QAAQ,CAACE,IAAI,CAACmF,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC;MAC5C,MAAME,UAAU,GAAGF,MAAM,CAACG,SAAS;MACnC,MAAMC,MAAM,GAAGJ,MAAM,CAACK,UAAU,CAACC,KAAK,CAAC,CAAC,CAAC;MACzC,MAAMC,MAAM,GAAGH,MAAM,CAACI,KAAK;MAE3B,MAAMC,WAAW,GAAGP,UAAU,CAAChG,GAAG,CAACiG,SAAS,IAC1CP,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,IAAI,GACpC,IAAIc,IAAI,CAACP,SAAS,GAAG,IAAI,CAAC,CAACQ,kBAAkB,CAAC,CAAC,GAC/C,IAAID,IAAI,CAACP,SAAS,GAAG,IAAI,CAAC,CAACS,kBAAkB,CAAC,CACpD,CAAC;MAED,MAAMC,MAAM,GAAGnE,cAAc,CAAC6D,MAAM,CAAC;MAErCxI,mBAAmB,CAAC;QAClB+I,MAAM,EAAEL,WAAW;QACnBM,QAAQ,EAAE,CAAC;UACTjD,KAAK,EAAE,GAAGlG,WAAW,QAAQ;UAC7BgD,IAAI,EAAE2F,MAAM;UACZ5D,WAAW,EAAEkE,MAAM,CAAClE,WAAW;UAC/BC,eAAe,EAAEiE,MAAM,CAACjE,eAAe;UACvCiC,WAAW,EAAE,CAAC;UACdF,OAAO,EAAE,CAAC;UACVC,IAAI,EAAE;QACR,CAAC,CAAC;QACFgB,SAAS;QACTzF,MAAM,EAAEvC;MACV,CAAC,CAAC;MACFK,mBAAmB,CAAC2H,SAAS,CAAC;IAChC,CAAC,CAAC,OAAO7E,GAAG,EAAE;MACZC,OAAO,CAAC5C,KAAK,CAAC,4BAA4B,EAAE2C,GAAG,CAAC;MAChD1C,QAAQ,CAAC,oDAAoD,CAAC;IAChE,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEC,MAAM6I,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,QAAOhJ,gBAAgB;MACrB,KAAK,IAAI;QAAE,OAAO,OAAO;MACzB,KAAK,IAAI;QAAE,OAAO,QAAQ;MAC1B,KAAK,IAAI;QAAE,OAAO,SAAS;MAC3B,KAAK,IAAI;QAAE,OAAO,UAAU;MAC5B,KAAK,IAAI;QAAE,OAAO,QAAQ;MAC1B,KAAK,IAAI;QAAE,OAAO,SAAS;MAC3B;QAAS,OAAO,UAAU;IAC5B;EACF,CAAC;EAED,oBACEb,OAAA;IAAK8J,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC/J,OAAA;MAAA+J,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1B5J,SAAS,iBACRP,OAAA;MAAK8J,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1B/J,OAAA;QAAK8J,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAClC/J,OAAA;UAAK8J,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B/J,OAAA;YAAA+J,QAAA,GAAKtJ,WAAW,EAAC,KAAG,EAACoJ,iBAAiB,CAAC,CAAC,EAAC,gBAAc;UAAA;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5DnK,OAAA;YAAK8J,SAAS,EAAC,0BAA0B;YAAAC,QAAA,EACtC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAChH,GAAG,CAAE2F,KAAK,iBAC9C1I,OAAA;cAEE8J,SAAS,EAAEjJ,gBAAgB,KAAK6H,KAAK,GAAG,QAAQ,GAAG,EAAG;cACtD0B,OAAO,EAAEA,CAAA,KAAMzH,cAAc,CAAC+F,KAAK,CAAE;cAAAqB,QAAA,EAEpCrB;YAAK,GAJDA,KAAK;cAAAsB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKJ,CACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNnK,OAAA;YAAQ8J,SAAS,EAAC,aAAa;YAACM,OAAO,EAAE1H,gBAAiB;YAAAqH,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClE,CAAC,eACNnK,OAAA;UAAK8J,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAC7BhJ,OAAO,gBACNf,OAAA;YAAK8J,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAqB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,GACxDlJ,KAAK,gBACPjB,OAAA;YAAK8J,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAE9I;UAAK;YAAA+I,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,GACxCxJ,gBAAgB,gBAClBX,OAAA,CAACjB,IAAI;YAAC0E,IAAI,EAAE9C,gBAAiB;YAAC0J,OAAO,EAAExE;UAAa;YAAAmE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,GACrD;QAAI;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAGDnK,OAAA;MAAK8J,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjC/J,OAAA;QAAK8J,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxB/J,OAAA;UAAK8J,SAAS,EAAC,aAAa;UAAAC,QAAA,eAC1B/J,OAAA;YAAA+J,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC,eACNnK,OAAA;UAAK8J,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B/J,OAAA;YAAK8J,SAAS,EAAC,YAAY;YAAAC,QAAA,GACxB5I,IAAI,aAAJA,IAAI,wBAAAf,mBAAA,GAAJe,IAAI,CAAEmJ,aAAa,cAAAlK,mBAAA,uBAAnBA,mBAAA,CAAqBmK,cAAc,CAAC,OAAO,EAAE;cAC5CC,qBAAqB,EAAE,CAAC;cACxBC,KAAK,EAAE,UAAU;cACjBC,QAAQ,EAAE;YACZ,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,eACrB3K,OAAA;cAAM8J,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC,eAENnK,OAAA;YAAK8J,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3B/J,OAAA;cAAK8J,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1B/J,OAAA;gBAAM8J,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAAY;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAClDnK,OAAA;gBAAM8J,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAAC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC,CAAC,eACNnK,OAAA;cAAK8J,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1B/J,OAAA;gBAAM8J,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACrDnK,OAAA;gBAAM8J,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAC3B5I,IAAI,aAAJA,IAAI,wBAAAd,oBAAA,GAAJc,IAAI,CAAEmJ,aAAa,cAAAjK,oBAAA,uBAAnBA,oBAAA,CAAqBkK,cAAc,CAAC,OAAO,EAAE;kBAC5CC,qBAAqB,EAAE,CAAC;kBACxBC,KAAK,EAAE,UAAU;kBACjBC,QAAQ,EAAE;gBACZ,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE;cAAC;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENnK,OAAA;QAAK8J,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxB/J,OAAA;UAAK8J,SAAS,EAAC,aAAa;UAAAC,QAAA,eAC1B/J,OAAA;YAAA+J,QAAA,GAAI,YAAU,EAAC3I,QAAQ,CAAC6C,MAAM,EAAC,GAAC;UAAA;YAAA+F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,eACNnK,OAAA;UAAK8J,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3B/J,OAAA;YAAK8J,SAAS,EAAC,YAAY;YAAAC,QAAA,GACxBnI,QAAQ,CAAC2I,cAAc,CAAC,OAAO,EAAE;cAChCC,qBAAqB,EAAE,CAAC;cACxBC,KAAK,EAAE,UAAU;cACjBC,QAAQ,EAAE;YACZ,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,eACrB3K,OAAA;cAAM8J,SAAS,EAAE,eAAelI,QAAQ,IAAI,CAAC,GAAG,UAAU,GAAG,UAAU,EAAG;cAAAmI,QAAA,GACvEnI,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,EAAEE,eAAe,CAACkF,OAAO,CAAC,CAAC,CAAC,EAAC,GACxD;YAAA;cAAAgD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACPnK,OAAA;cAAM8J,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAG;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,eAENnK,OAAA;YAAK8J,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3B/J,OAAA;cAAK8J,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1B/J,OAAA;gBAAM8J,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACnDnK,OAAA;gBAAM8J,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAC3BrI,iBAAiB,CAAC6I,cAAc,CAAC,OAAO,EAAE;kBACzCC,qBAAqB,EAAE,CAAC;kBACxBC,KAAK,EAAE,UAAU;kBACjBC,QAAQ,EAAE;gBACZ,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE;cAAC;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC,eACNnK,OAAA;cAAK8J,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1B/J,OAAA;gBAAM8J,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAChDnK,OAAA;gBAAM8J,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAC3BvI,eAAe,CAAC+I,cAAc,CAAC,OAAO,EAAE;kBACvCC,qBAAqB,EAAE,CAAC;kBACxBC,KAAK,EAAE,UAAU;kBACjBC,QAAQ,EAAE;gBACZ,CAAC,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE;cAAC;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNnK,OAAA,CAACd,QAAQ;MAAA8K,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAAChK,EAAA,CAhZID,SAAS;EAAA,QACIjB,WAAW,EAOXE,OAAO,EAOPH,WAAW;AAAA;AAAA4L,EAAA,GAfxB1K,SAAS;AAkZf,eAAeA,SAAS;AAAC,IAAA0K,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
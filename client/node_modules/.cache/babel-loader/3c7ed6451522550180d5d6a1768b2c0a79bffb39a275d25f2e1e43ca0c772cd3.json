{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shagun Khandelwal\\\\zerodha\\\\client\\\\src\\\\components\\\\Watchlist\\\\Watchlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Watchlist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Watchlist = () => {\n  _s();\n  const FINNHUB_API_KEY = 'd17tfrhr01qteuvpuh10d17tfrhr01qteuvpuh1g';\n  const [stocks, setStocks] = useState([{\n    symbol: 'AMZN',\n    price: 175.50,\n    change: 2.30\n  }, {\n    symbol: 'MSFT',\n    price: 420.72,\n    change: -1.25\n  }, {\n    symbol: 'AAPL',\n    price: 193.62,\n    change: 0.85\n  }, {\n    symbol: 'GOOGL',\n    price: 142.56,\n    change: -0.42\n  }, {\n    symbol: 'TSLA',\n    price: 182.63,\n    change: 3.21\n  }]);\n  const [error, setError] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const ws = useRef(null);\n  const retryCount = useRef(0);\n  const maxRetries = 3;\n  const pendingSubscriptions = useRef([]);\n  const subscribeToSymbols = () => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      stocks.forEach(stock => {\n        ws.current.send(JSON.stringify({\n          type: 'subscribe',\n          symbol: stock.symbol\n        }));\n      });\n    } else {\n      // Store subscriptions to process when connection opens\n      pendingSubscriptions.current = stocks.map(stock => stock.symbol);\n    }\n  };\n  const connectWebSocket = () => {\n    ws.current = new WebSocket(`wss://ws.finnhub.io?token=${FINNHUB_API_KEY}`);\n    ws.current.onopen = () => {\n      console.log('WebSocket connected');\n      setIsConnected(true);\n      retryCount.current = 0;\n\n      // Process any pending subscriptions\n      if (pendingSubscriptions.current.length > 0) {\n        pendingSubscriptions.current.forEach(symbol => {\n          ws.current.send(JSON.stringify({\n            type: 'subscribe',\n            symbol\n          }));\n        });\n        pendingSubscriptions.current = [];\n      } else {\n        // Subscribe to default stocks\n        subscribeToSymbols();\n      }\n    };\n    ws.current.onmessage = e => {\n      try {\n        const data = JSON.parse(e.data);\n        if (data.type === 'trade' && data.p) {\n          updateStockData(data);\n        }\n      } catch (err) {\n        console.error('Error parsing WebSocket message:', err);\n      }\n    };\n    ws.current.onerror = err => {\n      console.error('WebSocket error:', err);\n      setError('Realtime connection issue. Retrying...');\n      setIsConnected(false);\n    };\n    ws.current.onclose = () => {\n      setIsConnected(false);\n      if (retryCount.current < maxRetries) {\n        retryCount.current += 1;\n        setTimeout(connectWebSocket, 3000 * retryCount.current);\n      } else {\n        setError('Failed to connect to realtime data. Using fallback API.');\n        fetchInitialData();\n      }\n    };\n  };\n  const updateStockData = data => {\n    setStocks(prev => prev.map(stock => stock.symbol === data.symbol && data.p ? {\n      ...stock,\n      price: data.p,\n      change: parseFloat((data.p - (stock.price - stock.change)).toFixed(2)) || 0\n    } : stock));\n  };\n  const fetchInitialData = async () => {\n    try {\n      const stockPromises = stocks.map(stock => fetch(`https://finnhub.io/api/v1/quote?symbol=${stock.symbol}&token=${FINNHUB_API_KEY}`).then(res => {\n        if (!res.ok) throw new Error('Network response was not ok');\n        return res.json();\n      }).catch(err => {\n        console.error(`Error fetching ${stock.symbol}:`, err);\n        return {\n          c: stock.price,\n          pc: stock.price - stock.change\n        };\n      }));\n      const stockResults = await Promise.all(stockPromises);\n      setStocks(prev => prev.map((stock, i) => {\n        var _stockResults$i, _stockResults$i2, _stockResults$i3;\n        return {\n          ...stock,\n          price: ((_stockResults$i = stockResults[i]) === null || _stockResults$i === void 0 ? void 0 : _stockResults$i.c) || stock.price,\n          change: parseFloat(((((_stockResults$i2 = stockResults[i]) === null || _stockResults$i2 === void 0 ? void 0 : _stockResults$i2.c) || stock.price) - (((_stockResults$i3 = stockResults[i]) === null || _stockResults$i3 === void 0 ? void 0 : _stockResults$i3.pc) || stock.price - stock.change)).toFixed(2)) || 0\n        };\n      }));\n    } catch (err) {\n      console.error('Fallback API failed:', err);\n      setError('Unable to fetch latest data. Showing cached values.');\n    }\n  };\n  useEffect(() => {\n    connectWebSocket();\n    return () => {\n      if (ws.current) {\n        // Only try to unsubscribe if connection is open\n        if (ws.current.readyState === WebSocket.OPEN) {\n          stocks.forEach(stock => {\n            ws.current.send(JSON.stringify({\n              type: 'unsubscribe',\n              symbol: stock.symbol\n            }));\n          });\n        }\n        ws.current.close();\n      }\n    };\n  }, []);\n  const formatNumber = num => {\n    if (num === undefined || num === null || isNaN(num)) {\n      return 'N/A';\n    }\n    return num.toLocaleString('en-US', {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"watchlist\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"watchlist-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Stock Watchlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-status\",\n        children: [isConnected ? 'ðŸŸ¢ Live' : 'ðŸ”´ Disconnected', error && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stock-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stock-table-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-header-cell\",\n          children: \"Symbol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-header-cell\",\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-header-cell\",\n          children: \"Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), stocks.map((stock, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stock-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-cell stock-symbol\",\n          children: stock.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-cell stock-price\",\n          children: [\"$\", formatNumber(stock.price)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `stock-cell stock-change ${stock.change >= 0 ? 'positive' : 'negative'}`,\n          children: [stock.change >= 0 ? '+' : '', formatNumber(stock.change)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(Watchlist, \"JfC2DMesFrhbOyBIhDZ9oZrl6aw=\");\n_c = Watchlist;\nexport default Watchlist;\nvar _c;\n$RefreshReg$(_c, \"Watchlist\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Watchlist","_s","FINNHUB_API_KEY","stocks","setStocks","symbol","price","change","error","setError","isConnected","setIsConnected","ws","retryCount","maxRetries","pendingSubscriptions","subscribeToSymbols","current","readyState","WebSocket","OPEN","forEach","stock","send","JSON","stringify","type","map","connectWebSocket","onopen","console","log","length","onmessage","e","data","parse","p","updateStockData","err","onerror","onclose","setTimeout","fetchInitialData","prev","parseFloat","toFixed","stockPromises","fetch","then","res","ok","Error","json","catch","c","pc","stockResults","Promise","all","i","_stockResults$i","_stockResults$i2","_stockResults$i3","close","formatNumber","num","undefined","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shagun Khandelwal/zerodha/client/src/components/Watchlist/Watchlist.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './Watchlist.css';\r\n\r\nconst Watchlist = () => {\r\n  const FINNHUB_API_KEY = 'd17tfrhr01qteuvpuh10d17tfrhr01qteuvpuh1g';\r\n  const [stocks, setStocks] = useState([\r\n    { symbol: 'AMZN', price: 175.50, change: 2.30 },\r\n    { symbol: 'MSFT', price: 420.72, change: -1.25 },\r\n    { symbol: 'AAPL', price: 193.62, change: 0.85 },\r\n    { symbol: 'GOOGL', price: 142.56, change: -0.42 },\r\n    { symbol: 'TSLA', price: 182.63, change: 3.21 }\r\n  ]);\r\n\r\n  const [error, setError] = useState(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const ws = useRef(null);\r\n  const retryCount = useRef(0);\r\n  const maxRetries = 3;\r\n  const pendingSubscriptions = useRef([]);\r\n\r\n  const subscribeToSymbols = () => {\r\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\r\n      stocks.forEach(stock => {\r\n        ws.current.send(JSON.stringify({ type: 'subscribe', symbol: stock.symbol }));\r\n      });\r\n    } else {\r\n      // Store subscriptions to process when connection opens\r\n      pendingSubscriptions.current = stocks.map(stock => stock.symbol);\r\n    }\r\n  };\r\n\r\n  const connectWebSocket = () => {\r\n    ws.current = new WebSocket(`wss://ws.finnhub.io?token=${FINNHUB_API_KEY}`);\r\n\r\n    ws.current.onopen = () => {\r\n      console.log('WebSocket connected');\r\n      setIsConnected(true);\r\n      retryCount.current = 0;\r\n      \r\n      // Process any pending subscriptions\r\n      if (pendingSubscriptions.current.length > 0) {\r\n        pendingSubscriptions.current.forEach(symbol => {\r\n          ws.current.send(JSON.stringify({ type: 'subscribe', symbol }));\r\n        });\r\n        pendingSubscriptions.current = [];\r\n      } else {\r\n        // Subscribe to default stocks\r\n        subscribeToSymbols();\r\n      }\r\n    };\r\n\r\n    ws.current.onmessage = (e) => {\r\n      try {\r\n        const data = JSON.parse(e.data);\r\n        if (data.type === 'trade' && data.p) {\r\n          updateStockData(data);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error parsing WebSocket message:', err);\r\n      }\r\n    };\r\n\r\n    ws.current.onerror = (err) => {\r\n      console.error('WebSocket error:', err);\r\n      setError('Realtime connection issue. Retrying...');\r\n      setIsConnected(false);\r\n    };\r\n\r\n    ws.current.onclose = () => {\r\n      setIsConnected(false);\r\n      if (retryCount.current < maxRetries) {\r\n        retryCount.current += 1;\r\n        setTimeout(connectWebSocket, 3000 * retryCount.current);\r\n      } else {\r\n        setError('Failed to connect to realtime data. Using fallback API.');\r\n        fetchInitialData();\r\n      }\r\n    };\r\n  };\r\n\r\n  const updateStockData = (data) => {\r\n    setStocks(prev => \r\n      prev.map(stock => \r\n        stock.symbol === data.symbol && data.p\r\n          ? { \r\n              ...stock, \r\n              price: data.p,\r\n              change: parseFloat((data.p - (stock.price - stock.change)).toFixed(2)) || 0,\r\n            }\r\n          : stock\r\n      )\r\n    );\r\n  };\r\n\r\n  const fetchInitialData = async () => {\r\n    try {\r\n      const stockPromises = stocks.map(stock => \r\n        fetch(`https://finnhub.io/api/v1/quote?symbol=${stock.symbol}&token=${FINNHUB_API_KEY}`)\r\n          .then(res => {\r\n            if (!res.ok) throw new Error('Network response was not ok');\r\n            return res.json();\r\n          })\r\n          .catch(err => {\r\n            console.error(`Error fetching ${stock.symbol}:`, err);\r\n            return { c: stock.price, pc: stock.price - stock.change };\r\n          })\r\n      );\r\n      \r\n      const stockResults = await Promise.all(stockPromises);\r\n      \r\n      setStocks(prev => \r\n        prev.map((stock, i) => ({\r\n          ...stock,\r\n          price: stockResults[i]?.c || stock.price,\r\n          change: parseFloat(((stockResults[i]?.c || stock.price) - (stockResults[i]?.pc || (stock.price - stock.change))).toFixed(2)) || 0\r\n        }))\r\n      );\r\n    } catch (err) {\r\n      console.error('Fallback API failed:', err);\r\n      setError('Unable to fetch latest data. Showing cached values.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    connectWebSocket();\r\n    \r\n    return () => {\r\n      if (ws.current) {\r\n        // Only try to unsubscribe if connection is open\r\n        if (ws.current.readyState === WebSocket.OPEN) {\r\n          stocks.forEach(stock => {\r\n            ws.current.send(JSON.stringify({ type: 'unsubscribe', symbol: stock.symbol }));\r\n          });\r\n        }\r\n        ws.current.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const formatNumber = (num) => {\r\n    if (num === undefined || num === null || isNaN(num)) {\r\n      return 'N/A';\r\n    }\r\n    return num.toLocaleString('en-US', { \r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2 \r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"watchlist\">\r\n      <div className=\"watchlist-header\">\r\n        <h2>Stock Watchlist</h2>\r\n        <div className=\"connection-status\">\r\n          {isConnected ? 'ðŸŸ¢ Live' : 'ðŸ”´ Disconnected'}\r\n          {error && <span className=\"error-message\">{error}</span>}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"stock-table\">\r\n        <div className=\"stock-table-header\">\r\n          <div className=\"stock-header-cell\">Symbol</div>\r\n          <div className=\"stock-header-cell\">Price</div>\r\n          <div className=\"stock-header-cell\">Change</div>\r\n        </div>\r\n        \r\n        {stocks.map((stock, i) => (\r\n          <div key={i} className=\"stock-row\">\r\n            <div className=\"stock-cell stock-symbol\">{stock.symbol}</div>\r\n            <div className=\"stock-cell stock-price\">${formatNumber(stock.price)}</div>\r\n            <div className={`stock-cell stock-change ${stock.change >= 0 ? 'positive' : 'negative'}`}>\r\n              {stock.change >= 0 ? '+' : ''}{formatNumber(stock.change)}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Watchlist;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
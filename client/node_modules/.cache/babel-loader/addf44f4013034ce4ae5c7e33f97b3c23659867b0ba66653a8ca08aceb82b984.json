{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shagun Khandelwal\\\\zerodha\\\\client\\\\src\\\\components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useNavigate } from 'react-router-dom';\nimport NewsFeed from '../NewsFeed/NewsFeed';\nimport { useAuth } from '../../context/AuthContext';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport './Dashboard.css';\nimport axios from 'axios';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst Dashboard = ({\n  chartData,\n  chartSymbol,\n  showChart,\n  onCloseChart\n}) => {\n  _s();\n  var _user$walletBalance, _user$walletBalance2;\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const FINNHUB_API_KEY = process.env.REACT_APP_FINNHUB_API_KEY || 'd17tfrhr01qteuvpuh10d17tfrhr01qteuvpuh1g';\n\n  // State management\n  const [currentChartData, setCurrentChartData] = useState(chartData);\n  const [currentTimeRange, setCurrentTimeRange] = useState('3mo');\n  const [loading, setLoading] = useState({\n    chart: false,\n    prices: false\n  });\n  const [error, setError] = useState(null);\n  const [marketPrices, setMarketPrices] = useState({});\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const [wsInstance, setWsInstance] = useState(null);\n\n  // Calculate all values using useMemo for performance\n  const {\n    holdings,\n    totalInvestment,\n    totalCurrentValue,\n    totalPnl,\n    totalPnlPercent\n  } = useMemo(() => {\n    var _user$positions;\n    if (!(user !== null && user !== void 0 && (_user$positions = user.positions) !== null && _user$positions !== void 0 && _user$positions.length)) return {\n      holdings: [],\n      totalInvestment: 0,\n      totalCurrentValue: 0,\n      totalPnl: 0,\n      totalPnlPercent: 0\n    };\n    let totalInv = 0;\n    let totalCurrVal = 0;\n    const calculatedHoldings = user.positions.map(position => {\n      const currentPrice = marketPrices[position.symbol] || position.ltp || position.avgPrice;\n      const currentValue = position.quantity * currentPrice;\n      const investment = position.quantity * position.avgPrice;\n      const pnl = currentValue - investment;\n      const pnlPercent = investment > 0 ? pnl / investment * 100 : 0;\n      totalInv += investment;\n      totalCurrVal += currentValue;\n      return {\n        ...position,\n        currentValue,\n        investment,\n        pnl,\n        pnlPercent,\n        currentPrice\n      };\n    });\n    const totalP = totalCurrVal - totalInv;\n    const totalPP = totalInv > 0 ? totalP / totalInv * 100 : 0;\n    return {\n      holdings: calculatedHoldings,\n      totalInvestment: totalInv,\n      totalCurrentValue: totalCurrVal,\n      totalPnl: totalP,\n      totalPnlPercent: totalPP\n    };\n  }, [user, marketPrices]);\n\n  // WebSocket management\n  const setupWebSocket = useCallback(symbols => {\n    if (wsInstance) {\n      wsInstance.close();\n    }\n    const ws = new WebSocket(`wss://ws.finnhub.io?token=${FINNHUB_API_KEY}`);\n    setConnectionStatus('connecting');\n    ws.onopen = () => {\n      setConnectionStatus('connected');\n      symbols.forEach(symbol => {\n        ws.send(JSON.stringify({\n          type: 'subscribe',\n          symbol\n        }));\n      });\n    };\n    ws.onmessage = e => {\n      try {\n        const data = JSON.parse(e.data);\n        if (data.type === 'trade') {\n          setMarketPrices(prev => ({\n            ...prev,\n            [data.s]: data.p\n          }));\n        }\n      } catch (err) {\n        console.error('Error processing WS message:', err);\n      }\n    };\n    ws.onerror = err => {\n      console.error('WebSocket error:', err);\n      setConnectionStatus('error');\n    };\n    ws.onclose = () => {\n      setConnectionStatus('disconnected');\n    };\n    setWsInstance(ws);\n    return ws;\n  }, [FINNHUB_API_KEY, wsInstance]);\n\n  // Initialize WebSocket connection\n  useEffect(() => {\n    var _user$positions2;\n    if (!(user !== null && user !== void 0 && (_user$positions2 = user.positions) !== null && _user$positions2 !== void 0 && _user$positions2.length)) return;\n    const symbols = user.positions.map(p => p.symbol);\n    const ws = setupWebSocket(symbols);\n\n    // Initial price fetch in case WebSocket is delayed\n    fetchBatchPrices(symbols);\n    return () => {\n      if (ws && ws.readyState === WebSocket.OPEN) {\n        symbols.forEach(symbol => {\n          ws.send(JSON.stringify({\n            type: 'unsubscribe',\n            symbol\n          }));\n        });\n        ws.close();\n      }\n    };\n  }, [user, setupWebSocket]);\n\n  // Batch price fetching fallback\n  const fetchBatchPrices = useCallback(async symbols => {\n    if (!symbols.length) return;\n    try {\n      setLoading(prev => ({\n        ...prev,\n        prices: true\n      }));\n\n      // Use batch endpoint if available (this is a placeholder - adjust based on your API)\n      const response = await axios.get(`https://finnhub.io/api/v1/stock/symbol?exchange=US&token=${FINNHUB_API_KEY}`);\n      const newPrices = {};\n      response.data.forEach(stock => {\n        if (symbols.includes(stock.symbol) && stock.price) {\n          newPrices[stock.symbol] = stock.price;\n        }\n      });\n      setMarketPrices(prev => ({\n        ...prev,\n        ...newPrices\n      }));\n    } catch (err) {\n      console.error('Batch price fetch failed:', err);\n      // Fallback to individual fetching if batch fails\n      await fetchIndividualPrices(symbols);\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        prices: false\n      }));\n    }\n  }, [FINNHUB_API_KEY]);\n\n  // Individual price fetching as last resort\n  const fetchIndividualPrices = useCallback(async symbols => {\n    const BATCH_SIZE = 5; // Stay within rate limits\n    const DELAY = 1000; // 1 second between batches\n\n    for (let i = 0; i < symbols.length; i += BATCH_SIZE) {\n      const batch = symbols.slice(i, i + BATCH_SIZE);\n      const batchPrices = {};\n      try {\n        await Promise.all(batch.map(async symbol => {\n          try {\n            var _response$data;\n            const response = await axios.get(`https://finnhub.io/api/v1/quote?symbol=${symbol}&token=${FINNHUB_API_KEY}`);\n            if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.c) {\n              batchPrices[symbol] = response.data.c;\n            }\n          } catch (err) {\n            console.error(`Failed to fetch price for ${symbol}:`, err);\n          }\n        }));\n\n        // Update prices after each batch\n        setMarketPrices(prev => ({\n          ...prev,\n          ...batchPrices\n        }));\n\n        // Respect rate limits\n        if (i + BATCH_SIZE < symbols.length) {\n          await new Promise(resolve => setTimeout(resolve, DELAY));\n        }\n      } catch (err) {\n        console.error('Error in price batch:', err);\n      }\n    }\n  }, [FINNHUB_API_KEY]);\n\n  // Chart data handling\n  useEffect(() => {\n    if (showChart && chartData) {\n      setCurrentChartData(chartData);\n    }\n  }, [showChart, chartData]);\n  const getChartColors = data => {\n    if (!data || !data.length) return {\n      borderColor: '#3a80e9',\n      backgroundColor: 'rgba(58, 128, 233, 0.3)'\n    };\n    const firstValue = data[0];\n    const lastValue = data[data.length - 1];\n    const isIncreasing = lastValue > firstValue;\n    return {\n      borderColor: isIncreasing ? '#4CAF50' : '#F44336',\n      backgroundColor: isIncreasing ? 'rgba(76, 175, 80, 0.3)' : 'rgba(244, 67, 54, 0.3)'\n    };\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false,\n        backgroundColor: 'rgba(0, 0, 0, 0.7)',\n        titleFont: {\n          size: 14,\n          weight: 'bold'\n        },\n        bodyFont: {\n          size: 12\n        },\n        padding: 12,\n        callbacks: {\n          label: function (context) {\n            let label = context.dataset.label || '';\n            if (label) {\n              label += ': ';\n            }\n            if (context.parsed.y !== null) {\n              label += '₹' + context.parsed.y.toFixed(2);\n            }\n            return label;\n          },\n          title: function (context) {\n            return context[0].label;\n          }\n        }\n      }\n    },\n    elements: {\n      point: {\n        radius: 0,\n        hoverRadius: 6,\n        hoverBorderWidth: 2,\n        hitRadius: 10\n      },\n      line: {\n        tension: 0,\n        fill: true,\n        borderWidth: 2\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false,\n        grid: {\n          drawBorder: false,\n          color: '#f0f0f0'\n        },\n        ticks: {\n          color: '#666',\n          callback: function (value) {\n            return '₹' + value.toFixed(1);\n          }\n        }\n      },\n      x: {\n        grid: {\n          display: false,\n          drawBorder: false\n        },\n        ticks: {\n          color: '#666',\n          maxRotation: 0,\n          autoSkip: true,\n          maxTicksLimit: 8\n        }\n      }\n    },\n    interaction: {\n      mode: 'index',\n      intersect: false\n    },\n    hover: {\n      mode: 'index',\n      intersect: false\n    }\n  };\n  const fetchChartData = async timeRange => {\n    if (!chartSymbol) return;\n    setLoading(prev => ({\n      ...prev,\n      chart: true\n    }));\n    setError(null);\n    try {\n      // First try Finnhub\n      try {\n        var _data$c;\n        const to = Math.floor(Date.now() / 1000);\n        let from;\n        let resolution = 'D';\n        switch (timeRange) {\n          case '1D':\n            from = to - 24 * 60 * 60;\n            resolution = '5';\n            break;\n          case '5D':\n            from = to - 5 * 24 * 60 * 60;\n            resolution = '15';\n            break;\n          case '1M':\n            from = to - 30 * 24 * 60 * 60;\n            break;\n          case '6M':\n            from = to - 6 * 30 * 24 * 60 * 60;\n            break;\n          case '1Y':\n            from = to - 365 * 24 * 60 * 60;\n            break;\n          case '5Y':\n            from = to - 5 * 365 * 24 * 60 * 60;\n            break;\n          default:\n            from = to - 90 * 24 * 60 * 60;\n        }\n        const response = await axios.get(`https://finnhub.io/api/v1/stock/candle?symbol=${chartSymbol}&resolution=${resolution}&from=${from}&to=${to}&token=${FINNHUB_API_KEY}`);\n        const data = response.data;\n        if (data.s === 'ok' && ((_data$c = data.c) === null || _data$c === void 0 ? void 0 : _data$c.length) > 0) {\n          const chartLabels = data.t.map(timestamp => timeRange === '1D' || timeRange === '5D' ? new Date(timestamp * 1000).toLocaleTimeString() : new Date(timestamp * 1000).toLocaleDateString());\n          const colors = getChartColors(data.c);\n          const newChartData = {\n            labels: chartLabels,\n            datasets: [{\n              label: `${chartSymbol} Price`,\n              data: data.c,\n              borderColor: colors.borderColor,\n              backgroundColor: colors.backgroundColor,\n              borderWidth: 2,\n              tension: 0,\n              fill: true\n            }],\n            timeRange\n          };\n          setCurrentChartData(newChartData);\n          setCurrentTimeRange(timeRange);\n          return;\n        }\n      } catch (finnhubError) {\n        console.log('Finnhub failed, trying Yahoo Finance...');\n      }\n\n      // Fallback to Yahoo Finance\n      let yahooRange;\n      let interval;\n      switch (timeRange) {\n        case '1D':\n          yahooRange = '1d';\n          interval = '5m';\n          break;\n        case '5D':\n          yahooRange = '5d';\n          interval = '15m';\n          break;\n        case '1M':\n          yahooRange = '1mo';\n          interval = '1d';\n          break;\n        case '6M':\n          yahooRange = '6mo';\n          interval = '1d';\n          break;\n        case '1Y':\n          yahooRange = '1y';\n          interval = '1wk';\n          break;\n        case '5Y':\n          yahooRange = '5y';\n          interval = '1mo';\n          break;\n        default:\n          yahooRange = '3mo';\n          interval = '1d';\n      }\n      const proxyUrl = 'https://api.allorigins.win/get?url=';\n      const yahooUrl = `https://query1.finance.yahoo.com/v8/finance/chart/${chartSymbol}?range=${yahooRange}&interval=${interval}`;\n      const response = await axios.get(proxyUrl + encodeURIComponent(yahooUrl));\n      const parsedData = JSON.parse(response.data.contents);\n      if (!parsedData.chart.result) {\n        throw new Error('No chart data available');\n      }\n      const result = parsedData.chart.result[0];\n      const timestamps = result.timestamp;\n      const quotes = result.indicators.quote[0];\n      const chartLabels = timestamps.map(timestamp => timeRange === '1D' || timeRange === '5D' ? new Date(timestamp * 1000).toLocaleTimeString() : new Date(timestamp * 1000).toLocaleDateString());\n      const colors = getChartColors(quotes.close);\n      const newChartData = {\n        labels: chartLabels,\n        datasets: [{\n          label: `${chartSymbol} Price`,\n          data: quotes.close,\n          borderColor: colors.borderColor,\n          backgroundColor: colors.backgroundColor,\n          borderWidth: 2,\n          tension: 0,\n          fill: true\n        }],\n        timeRange\n      };\n      setCurrentChartData(newChartData);\n      setCurrentTimeRange(timeRange);\n    } catch (err) {\n      console.error('Error fetching chart data:', err);\n      setError('Failed to load chart data. Please try again later.');\n    } finally {\n      setLoading(prev => ({\n        ...prev,\n        chart: false\n      }));\n    }\n  };\n  const getTimeRangeLabel = () => {\n    switch (currentTimeRange) {\n      case '1D':\n        return '1 Day';\n      case '5D':\n        return '5 Days';\n      case '1M':\n        return '1 Month';\n      case '6M':\n        return '6 Months';\n      case '1Y':\n        return '1 Year';\n      case '5Y':\n        return '5 Years';\n      default:\n        return '3 Months';\n    }\n  };\n  const connectionStatusIndicator = {\n    connected: '🟢 Live',\n    connecting: '🟡 Connecting...',\n    disconnected: '⚪ Disconnected',\n    error: '🔴 Error'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-sections\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card equity-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Equity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-value\",\n            children: [user === null || user === void 0 ? void 0 : (_user$walletBalance = user.walletBalance) === null || _user$walletBalance === void 0 ? void 0 : _user$walletBalance.toLocaleString('en-IN', {\n              maximumFractionDigits: 2,\n              style: 'currency',\n              currency: 'INR'\n            }).replace('.00', ''), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"card-label\",\n              children: \"Margin available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Margins used\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Opening balance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: user === null || user === void 0 ? void 0 : (_user$walletBalance2 = user.walletBalance) === null || _user$walletBalance2 === void 0 ? void 0 : _user$walletBalance2.toLocaleString('en-IN', {\n                  maximumFractionDigits: 2,\n                  style: 'currency',\n                  currency: 'INR'\n                }).replace('.00', '')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-card holdings-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Holdings (\", holdings.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"connection-status\",\n            children: connectionStatusIndicator[connectionStatus]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-value\",\n            children: [totalPnl.toLocaleString('en-IN', {\n              maximumFractionDigits: 2,\n              style: 'currency',\n              currency: 'INR'\n            }).replace('.00', ''), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `pnl-percent ${totalPnl >= 0 ? 'positive' : 'negative'}`,\n              children: [totalPnl >= 0 ? '+' : '', totalPnlPercent.toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"card-label\",\n              children: \"P&L\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Current Value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: totalCurrentValue.toLocaleString('en-IN', {\n                  maximumFractionDigits: 2,\n                  style: 'currency',\n                  currency: 'INR'\n                }).replace('.00', '')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"detail-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-label\",\n                children: \"Investment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"detail-value\",\n                children: totalInvestment.toLocaleString('en-IN', {\n                  maximumFractionDigits: 2,\n                  style: 'currency',\n                  currency: 'INR'\n                }).replace('.00', '')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }, this), showChart && currentChartData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [chartSymbol, \" - \", getTimeRangeLabel(), \" Price History\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-time-range-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => fetchChartData('1D'),\n              children: \"1D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => fetchChartData('5D'),\n              children: \"5D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => fetchChartData('1M'),\n              children: \"1M\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => fetchChartData('6M'),\n              children: \"6M\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => fetchChartData('1Y'),\n              children: \"1Y\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => fetchChartData('5Y'),\n              children: \"5Y\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-chart\",\n            onClick: onCloseChart,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: loading.chart ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-loading\",\n            children: \"Loading chart data...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 17\n          }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Line, {\n            data: currentChartData,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NewsFeed, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 504,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"cbUseylbSZ8Hnhbj794GsP3VnY4=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","Line","useNavigate","NewsFeed","useAuth","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","axios","jsxDEV","_jsxDEV","register","Dashboard","chartData","chartSymbol","showChart","onCloseChart","_s","_user$walletBalance","_user$walletBalance2","user","navigate","FINNHUB_API_KEY","process","env","REACT_APP_FINNHUB_API_KEY","currentChartData","setCurrentChartData","currentTimeRange","setCurrentTimeRange","loading","setLoading","chart","prices","error","setError","marketPrices","setMarketPrices","connectionStatus","setConnectionStatus","wsInstance","setWsInstance","holdings","totalInvestment","totalCurrentValue","totalPnl","totalPnlPercent","_user$positions","positions","length","totalInv","totalCurrVal","calculatedHoldings","map","position","currentPrice","symbol","ltp","avgPrice","currentValue","quantity","investment","pnl","pnlPercent","totalP","totalPP","setupWebSocket","symbols","close","ws","WebSocket","onopen","forEach","send","JSON","stringify","type","onmessage","e","data","parse","prev","s","p","err","console","onerror","onclose","_user$positions2","fetchBatchPrices","readyState","OPEN","response","get","newPrices","stock","includes","price","fetchIndividualPrices","BATCH_SIZE","DELAY","i","batch","slice","batchPrices","Promise","all","_response$data","c","resolve","setTimeout","getChartColors","borderColor","backgroundColor","firstValue","lastValue","isIncreasing","chartOptions","responsive","plugins","legend","display","tooltip","mode","intersect","titleFont","size","weight","bodyFont","padding","callbacks","label","context","dataset","parsed","y","toFixed","title","elements","point","radius","hoverRadius","hoverBorderWidth","hitRadius","line","tension","fill","borderWidth","scales","beginAtZero","grid","drawBorder","color","ticks","callback","value","x","maxRotation","autoSkip","maxTicksLimit","interaction","hover","fetchChartData","timeRange","_data$c","to","Math","floor","Date","now","from","resolution","chartLabels","t","timestamp","toLocaleTimeString","toLocaleDateString","colors","newChartData","labels","datasets","finnhubError","log","yahooRange","interval","proxyUrl","yahooUrl","encodeURIComponent","parsedData","contents","result","Error","timestamps","quotes","indicators","quote","getTimeRangeLabel","connectionStatusIndicator","connected","connecting","disconnected","className","children","fileName","_jsxFileName","lineNumber","columnNumber","walletBalance","toLocaleString","maximumFractionDigits","style","currency","replace","onClick","options","_c","$RefreshReg$"],"sources":["C:/Users/Shagun Khandelwal/zerodha/client/src/components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport NewsFeed from '../NewsFeed/NewsFeed';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  Filler,\r\n} from 'chart.js';\r\nimport './Dashboard.css';\r\nimport axios from 'axios';\r\n\r\n// Register ChartJS components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  Filler\r\n);\r\n\r\nconst Dashboard = ({ chartData, chartSymbol, showChart, onCloseChart }) => {\r\n  const { user } = useAuth();\r\n  const navigate = useNavigate();\r\n  const FINNHUB_API_KEY = process.env.REACT_APP_FINNHUB_API_KEY || 'd17tfrhr01qteuvpuh10d17tfrhr01qteuvpuh1g';\r\n  \r\n  // State management\r\n  const [currentChartData, setCurrentChartData] = useState(chartData);\r\n  const [currentTimeRange, setCurrentTimeRange] = useState('3mo');\r\n  const [loading, setLoading] = useState({\r\n    chart: false,\r\n    prices: false\r\n  });\r\n  const [error, setError] = useState(null);\r\n  const [marketPrices, setMarketPrices] = useState({});\r\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\r\n  const [wsInstance, setWsInstance] = useState(null);\r\n\r\n  // Calculate all values using useMemo for performance\r\n  const { holdings, totalInvestment, totalCurrentValue, totalPnl, totalPnlPercent } = useMemo(() => {\r\n    if (!user?.positions?.length) return {\r\n      holdings: [],\r\n      totalInvestment: 0,\r\n      totalCurrentValue: 0,\r\n      totalPnl: 0,\r\n      totalPnlPercent: 0\r\n    };\r\n\r\n    let totalInv = 0;\r\n    let totalCurrVal = 0;\r\n    \r\n    const calculatedHoldings = user.positions.map(position => {\r\n      const currentPrice = marketPrices[position.symbol] || position.ltp || position.avgPrice;\r\n      const currentValue = position.quantity * currentPrice;\r\n      const investment = position.quantity * position.avgPrice;\r\n      const pnl = currentValue - investment;\r\n      const pnlPercent = investment > 0 ? (pnl / investment) * 100 : 0;\r\n      \r\n      totalInv += investment;\r\n      totalCurrVal += currentValue;\r\n      \r\n      return {\r\n        ...position,\r\n        currentValue,\r\n        investment,\r\n        pnl,\r\n        pnlPercent,\r\n        currentPrice\r\n      };\r\n    });\r\n    \r\n    const totalP = totalCurrVal - totalInv;\r\n    const totalPP = totalInv > 0 ? (totalP / totalInv) * 100 : 0;\r\n    \r\n    return {\r\n      holdings: calculatedHoldings,\r\n      totalInvestment: totalInv,\r\n      totalCurrentValue: totalCurrVal,\r\n      totalPnl: totalP,\r\n      totalPnlPercent: totalPP\r\n    };\r\n  }, [user, marketPrices]);\r\n\r\n  // WebSocket management\r\n  const setupWebSocket = useCallback((symbols) => {\r\n    if (wsInstance) {\r\n      wsInstance.close();\r\n    }\r\n\r\n    const ws = new WebSocket(`wss://ws.finnhub.io?token=${FINNHUB_API_KEY}`);\r\n    setConnectionStatus('connecting');\r\n\r\n    ws.onopen = () => {\r\n      setConnectionStatus('connected');\r\n      symbols.forEach(symbol => {\r\n        ws.send(JSON.stringify({ type: 'subscribe', symbol }));\r\n      });\r\n    };\r\n\r\n    ws.onmessage = (e) => {\r\n      try {\r\n        const data = JSON.parse(e.data);\r\n        if (data.type === 'trade') {\r\n          setMarketPrices(prev => ({\r\n            ...prev,\r\n            [data.s]: data.p\r\n          }));\r\n        }\r\n      } catch (err) {\r\n        console.error('Error processing WS message:', err);\r\n      }\r\n    };\r\n\r\n    ws.onerror = (err) => {\r\n      console.error('WebSocket error:', err);\r\n      setConnectionStatus('error');\r\n    };\r\n\r\n    ws.onclose = () => {\r\n      setConnectionStatus('disconnected');\r\n    };\r\n\r\n    setWsInstance(ws);\r\n    return ws;\r\n  }, [FINNHUB_API_KEY, wsInstance]);\r\n\r\n  // Initialize WebSocket connection\r\n  useEffect(() => {\r\n    if (!user?.positions?.length) return;\r\n\r\n    const symbols = user.positions.map(p => p.symbol);\r\n    const ws = setupWebSocket(symbols);\r\n\r\n    // Initial price fetch in case WebSocket is delayed\r\n    fetchBatchPrices(symbols);\r\n\r\n    return () => {\r\n      if (ws && ws.readyState === WebSocket.OPEN) {\r\n        symbols.forEach(symbol => {\r\n          ws.send(JSON.stringify({ type: 'unsubscribe', symbol }));\r\n        });\r\n        ws.close();\r\n      }\r\n    };\r\n  }, [user, setupWebSocket]);\r\n\r\n  // Batch price fetching fallback\r\n  const fetchBatchPrices = useCallback(async (symbols) => {\r\n    if (!symbols.length) return;\r\n    \r\n    try {\r\n      setLoading(prev => ({ ...prev, prices: true }));\r\n      \r\n      // Use batch endpoint if available (this is a placeholder - adjust based on your API)\r\n      const response = await axios.get(\r\n        `https://finnhub.io/api/v1/stock/symbol?exchange=US&token=${FINNHUB_API_KEY}`\r\n      );\r\n      \r\n      const newPrices = {};\r\n      response.data.forEach(stock => {\r\n        if (symbols.includes(stock.symbol) && stock.price) {\r\n          newPrices[stock.symbol] = stock.price;\r\n        }\r\n      });\r\n      \r\n      setMarketPrices(prev => ({ ...prev, ...newPrices }));\r\n    } catch (err) {\r\n      console.error('Batch price fetch failed:', err);\r\n      // Fallback to individual fetching if batch fails\r\n      await fetchIndividualPrices(symbols);\r\n    } finally {\r\n      setLoading(prev => ({ ...prev, prices: false }));\r\n    }\r\n  }, [FINNHUB_API_KEY]);\r\n\r\n  // Individual price fetching as last resort\r\n  const fetchIndividualPrices = useCallback(async (symbols) => {\r\n    const BATCH_SIZE = 5; // Stay within rate limits\r\n    const DELAY = 1000; // 1 second between batches\r\n    \r\n    for (let i = 0; i < symbols.length; i += BATCH_SIZE) {\r\n      const batch = symbols.slice(i, i + BATCH_SIZE);\r\n      const batchPrices = {};\r\n      \r\n      try {\r\n        await Promise.all(batch.map(async symbol => {\r\n          try {\r\n            const response = await axios.get(\r\n              `https://finnhub.io/api/v1/quote?symbol=${symbol}&token=${FINNHUB_API_KEY}`\r\n            );\r\n            if (response.data?.c) {\r\n              batchPrices[symbol] = response.data.c;\r\n            }\r\n          } catch (err) {\r\n            console.error(`Failed to fetch price for ${symbol}:`, err);\r\n          }\r\n        }));\r\n        \r\n        // Update prices after each batch\r\n        setMarketPrices(prev => ({ ...prev, ...batchPrices }));\r\n        \r\n        // Respect rate limits\r\n        if (i + BATCH_SIZE < symbols.length) {\r\n          await new Promise(resolve => setTimeout(resolve, DELAY));\r\n        }\r\n      } catch (err) {\r\n        console.error('Error in price batch:', err);\r\n      }\r\n    }\r\n  }, [FINNHUB_API_KEY]);\r\n\r\n  // Chart data handling\r\n  useEffect(() => {\r\n    if (showChart && chartData) {\r\n      setCurrentChartData(chartData);\r\n    }\r\n  }, [showChart, chartData]);\r\n\r\n  const getChartColors = (data) => {\r\n    if (!data || !data.length) return { borderColor: '#3a80e9', backgroundColor: 'rgba(58, 128, 233, 0.3)' };\r\n    const firstValue = data[0];\r\n    const lastValue = data[data.length - 1];\r\n    const isIncreasing = lastValue > firstValue;\r\n    return {\r\n      borderColor: isIncreasing ? '#4CAF50' : '#F44336',\r\n      backgroundColor: isIncreasing ? 'rgba(76, 175, 80, 0.3)' : 'rgba(244, 67, 54, 0.3)'\r\n    };\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n      tooltip: {\r\n        mode: 'index',\r\n        intersect: false,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n        titleFont: {\r\n          size: 14,\r\n          weight: 'bold'\r\n        },\r\n        bodyFont: {\r\n          size: 12\r\n        },\r\n        padding: 12,\r\n        callbacks: {\r\n          label: function(context) {\r\n            let label = context.dataset.label || '';\r\n            if (label) {\r\n              label += ': ';\r\n            }\r\n            if (context.parsed.y !== null) {\r\n              label += '₹' + context.parsed.y.toFixed(2);\r\n            }\r\n            return label;\r\n          },\r\n          title: function(context) {\r\n            return context[0].label;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 0,\r\n        hoverRadius: 6,\r\n        hoverBorderWidth: 2,\r\n        hitRadius: 10\r\n      },\r\n      line: {\r\n        tension: 0,\r\n        fill: true,\r\n        borderWidth: 2\r\n      }\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: false,\r\n        grid: {\r\n          drawBorder: false,\r\n          color: '#f0f0f0',\r\n        },\r\n        ticks: {\r\n          color: '#666',\r\n          callback: function(value) {\r\n            return '₹' + value.toFixed(1);\r\n          }\r\n        }\r\n      },\r\n      x: {\r\n        grid: {\r\n          display: false,\r\n          drawBorder: false,\r\n        },\r\n        ticks: {\r\n          color: '#666',\r\n          maxRotation: 0,\r\n          autoSkip: true,\r\n          maxTicksLimit: 8\r\n        }\r\n      }\r\n    },\r\n    interaction: {\r\n      mode: 'index',\r\n      intersect: false\r\n    },\r\n    hover: {\r\n      mode: 'index',\r\n      intersect: false\r\n    }\r\n  };\r\n\r\n  const fetchChartData = async (timeRange) => {\r\n    if (!chartSymbol) return;\r\n    \r\n    setLoading(prev => ({ ...prev, chart: true }));\r\n    setError(null);\r\n    \r\n    try {\r\n      // First try Finnhub\r\n      try {\r\n        const to = Math.floor(Date.now() / 1000);\r\n        let from;\r\n        let resolution = 'D';\r\n        \r\n        switch(timeRange) {\r\n          case '1D':\r\n            from = to - (24 * 60 * 60);\r\n            resolution = '5';\r\n            break;\r\n          case '5D':\r\n            from = to - (5 * 24 * 60 * 60);\r\n            resolution = '15';\r\n            break;\r\n          case '1M':\r\n            from = to - (30 * 24 * 60 * 60);\r\n            break;\r\n          case '6M':\r\n            from = to - (6 * 30 * 24 * 60 * 60);\r\n            break;\r\n          case '1Y':\r\n            from = to - (365 * 24 * 60 * 60);\r\n            break;\r\n          case '5Y':\r\n            from = to - (5 * 365 * 24 * 60 * 60);\r\n            break;\r\n          default:\r\n            from = to - (90 * 24 * 60 * 60);\r\n        }\r\n        \r\n        const response = await axios.get(\r\n          `https://finnhub.io/api/v1/stock/candle?symbol=${chartSymbol}&resolution=${resolution}&from=${from}&to=${to}&token=${FINNHUB_API_KEY}`\r\n        );\r\n        \r\n        const data = response.data;\r\n        \r\n        if (data.s === 'ok' && data.c?.length > 0) {\r\n          const chartLabels = data.t.map(timestamp => \r\n            timeRange === '1D' || timeRange === '5D'\r\n              ? new Date(timestamp * 1000).toLocaleTimeString() \r\n              : new Date(timestamp * 1000).toLocaleDateString()\r\n          );\r\n          \r\n          const colors = getChartColors(data.c);\r\n          \r\n          const newChartData = {\r\n            labels: chartLabels,\r\n            datasets: [\r\n              {\r\n                label: `${chartSymbol} Price`,\r\n                data: data.c,\r\n                borderColor: colors.borderColor,\r\n                backgroundColor: colors.backgroundColor,\r\n                borderWidth: 2,\r\n                tension: 0,\r\n                fill: true\r\n              }\r\n            ],\r\n            timeRange\r\n          };\r\n          \r\n          setCurrentChartData(newChartData);\r\n          setCurrentTimeRange(timeRange);\r\n          return;\r\n        }\r\n      } catch (finnhubError) {\r\n        console.log('Finnhub failed, trying Yahoo Finance...');\r\n      }\r\n      \r\n      // Fallback to Yahoo Finance\r\n      let yahooRange;\r\n      let interval;\r\n      switch(timeRange) {\r\n        case '1D': \r\n          yahooRange = '1d';\r\n          interval = '5m';\r\n          break;\r\n        case '5D': \r\n          yahooRange = '5d';\r\n          interval = '15m';\r\n          break;\r\n        case '1M': \r\n          yahooRange = '1mo';\r\n          interval = '1d';\r\n          break;\r\n        case '6M': \r\n          yahooRange = '6mo';\r\n          interval = '1d';\r\n          break;\r\n        case '1Y': \r\n          yahooRange = '1y';\r\n          interval = '1wk';\r\n          break;\r\n        case '5Y': \r\n          yahooRange = '5y';\r\n          interval = '1mo';\r\n          break;\r\n        default: \r\n          yahooRange = '3mo';\r\n          interval = '1d';\r\n      }\r\n      \r\n      const proxyUrl = 'https://api.allorigins.win/get?url=';\r\n      const yahooUrl = `https://query1.finance.yahoo.com/v8/finance/chart/${chartSymbol}?range=${yahooRange}&interval=${interval}`;\r\n      \r\n      const response = await axios.get(proxyUrl + encodeURIComponent(yahooUrl));\r\n      const parsedData = JSON.parse(response.data.contents);\r\n      \r\n      if (!parsedData.chart.result) {\r\n        throw new Error('No chart data available');\r\n      }\r\n      \r\n      const result = parsedData.chart.result[0];\r\n      const timestamps = result.timestamp;\r\n      const quotes = result.indicators.quote[0];\r\n      \r\n      const chartLabels = timestamps.map(timestamp => \r\n        timeRange === '1D' || timeRange === '5D'\r\n          ? new Date(timestamp * 1000).toLocaleTimeString() \r\n          : new Date(timestamp * 1000).toLocaleDateString()\r\n      );\r\n      \r\n      const colors = getChartColors(quotes.close);\r\n      \r\n      const newChartData = {\r\n        labels: chartLabels,\r\n        datasets: [\r\n          {\r\n            label: `${chartSymbol} Price`,\r\n            data: quotes.close,\r\n            borderColor: colors.borderColor,\r\n            backgroundColor: colors.backgroundColor,\r\n            borderWidth: 2,\r\n            tension: 0,\r\n            fill: true\r\n          }\r\n        ],\r\n        timeRange\r\n      };\r\n      \r\n      setCurrentChartData(newChartData);\r\n      setCurrentTimeRange(timeRange);\r\n      \r\n    } catch (err) {\r\n      console.error('Error fetching chart data:', err);\r\n      setError('Failed to load chart data. Please try again later.');\r\n    } finally {\r\n      setLoading(prev => ({ ...prev, chart: false }));\r\n    }\r\n  };\r\n\r\n  const getTimeRangeLabel = () => {\r\n    switch(currentTimeRange) {\r\n      case '1D': return '1 Day';\r\n      case '5D': return '5 Days';\r\n      case '1M': return '1 Month';\r\n      case '6M': return '6 Months';\r\n      case '1Y': return '1 Year';\r\n      case '5Y': return '5 Years';\r\n      default: return '3 Months';\r\n    }\r\n  };\r\n\r\n  const connectionStatusIndicator = {\r\n    connected: '🟢 Live',\r\n    connecting: '🟡 Connecting...',\r\n    disconnected: '⚪ Disconnected',\r\n    error: '🔴 Error'\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-content\">\r\n      <h2>Dashboard Overview</h2>\r\n      \r\n      <div className=\"dashboard-sections\">\r\n        {/* Equity Section */}\r\n        <div className=\"dashboard-card equity-card\">\r\n          <div className=\"card-header\">\r\n            <h3>Equity</h3>\r\n          </div>\r\n          <div className=\"card-content\">\r\n            <div className=\"card-value\">\r\n              {user?.walletBalance?.toLocaleString('en-IN', {\r\n                maximumFractionDigits: 2,\r\n                style: 'currency',\r\n                currency: 'INR'\r\n              }).replace('.00', '')}\r\n              <span className=\"card-label\">Margin available</span>\r\n            </div>\r\n            \r\n            <div className=\"card-details\">\r\n              <div className=\"detail-item\">\r\n                <span className=\"detail-label\">Margins used</span>\r\n                <span className=\"detail-value\">0</span>\r\n              </div>\r\n              <div className=\"detail-item\">\r\n                <span className=\"detail-label\">Opening balance</span>\r\n                <span className=\"detail-value\">\r\n                  {user?.walletBalance?.toLocaleString('en-IN', {\r\n                    maximumFractionDigits: 2,\r\n                    style: 'currency',\r\n                    currency: 'INR'\r\n                  }).replace('.00', '')}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Holdings Section */}\r\n        <div className=\"dashboard-card holdings-card\">\r\n          <div className=\"card-header\">\r\n            <h3>Holdings ({holdings.length})</h3>\r\n            <span className=\"connection-status\">\r\n              {connectionStatusIndicator[connectionStatus]}\r\n            </span>\r\n          </div>\r\n          <div className=\"card-content\">\r\n            <div className=\"card-value\">\r\n              {totalPnl.toLocaleString('en-IN', {\r\n                maximumFractionDigits: 2,\r\n                style: 'currency',\r\n                currency: 'INR'\r\n              }).replace('.00', '')}\r\n              <span className={`pnl-percent ${totalPnl >= 0 ? 'positive' : 'negative'}`}>\r\n                {totalPnl >= 0 ? '+' : ''}{totalPnlPercent.toFixed(2)}%\r\n              </span>\r\n              <span className=\"card-label\">P&L</span>\r\n            </div>\r\n            \r\n            <div className=\"card-details\">\r\n              <div className=\"detail-item\">\r\n                <span className=\"detail-label\">Current Value</span>\r\n                <span className=\"detail-value\">\r\n                  {totalCurrentValue.toLocaleString('en-IN', {\r\n                    maximumFractionDigits: 2,\r\n                    style: 'currency',\r\n                    currency: 'INR'\r\n                  }).replace('.00', '')}\r\n                </span>\r\n              </div>\r\n              <div className=\"detail-item\">\r\n                <span className=\"detail-label\">Investment</span>\r\n                <span className=\"detail-value\">\r\n                  {totalInvestment.toLocaleString('en-IN', {\r\n                    maximumFractionDigits: 2,\r\n                    style: 'currency',\r\n                    currency: 'INR'\r\n                  }).replace('.00', '')}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {showChart && currentChartData && (\r\n        <div className=\"chart-modal\">\r\n          <div className=\"chart-modal-content\">\r\n            <div className=\"chart-header\">\r\n              <h3>{chartSymbol} - {getTimeRangeLabel()} Price History</h3>\r\n              <div className=\"chart-time-range-buttons\">\r\n                <button onClick={() => fetchChartData('1D')}>1D</button>\r\n                <button onClick={() => fetchChartData('5D')}>5D</button>\r\n                <button onClick={() => fetchChartData('1M')}>1M</button>\r\n                <button onClick={() => fetchChartData('6M')}>6M</button>\r\n                <button onClick={() => fetchChartData('1Y')}>1Y</button>\r\n                <button onClick={() => fetchChartData('5Y')}>5Y</button>\r\n              </div>\r\n              <button className=\"close-chart\" onClick={onCloseChart}>×</button>\r\n            </div>\r\n            <div className=\"chart-container\">\r\n              {loading.chart ? (\r\n                <div className=\"chart-loading\">Loading chart data...</div>\r\n              ) : error ? (\r\n                <div className=\"chart-error\">{error}</div>\r\n              ) : (\r\n                <Line data={currentChartData} options={chartOptions} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      <NewsFeed />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
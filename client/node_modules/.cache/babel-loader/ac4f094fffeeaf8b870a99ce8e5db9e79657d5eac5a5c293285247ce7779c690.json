{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shagun Khandelwal\\\\zerodha\\\\client\\\\src\\\\components\\\\AISummary\\\\AISummary.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\nimport axios from 'axios';\nimport './AISummary.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AISummary = () => {\n  _s();\n  const {\n    symbol\n  } = useParams();\n  const [analysis, setAnalysis] = useState({\n    summary: '',\n    loading: true,\n    error: null,\n    lastUpdated: null,\n    rateLimited: false\n  });\n  const {\n    logout\n  } = useAuth();\n  const navigate = useNavigate();\n  const [retryCount, setRetryCount] = useState(0);\n\n  // Memoized fetch function with rate limiting protection\n  const fetchSummary = useCallback(async () => {\n    var _err$response$data;\n    // Don't attempt to fetch if we know we're rate limited\n    if (analysis.rateLimited) {\n      return;\n    }\n    try {\n      const storedUser = JSON.parse(localStorage.getItem('user'));\n      const token = storedUser === null || storedUser === void 0 ? void 0 : storedUser.token;\n      if (!token) {\n        logout();\n        navigate('/login');\n        return;\n      }\n      setAnalysis(prev => ({\n        ...prev,\n        loading: true,\n        error: null\n      }));\n      const response = await axios.post(`${process.env.REACT_APP_API_URL || ''}/api/auth/ai/summary`, {\n        symbol\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true,\n        timeout: 10000\n      });\n      if (!response.data.success) {\n        throw new Error(response.data.message || 'Failed to generate summary');\n      }\n      setAnalysis({\n        summary: response.data.summary,\n        loading: false,\n        error: null,\n        lastUpdated: new Date(),\n        rateLimited: false\n      });\n      setRetryCount(0); // Reset retry count on success\n    } catch (err) {\n      console.error('Error fetching AI summary:', err);\n      let errorMessage = 'Failed to generate summary';\n      let shouldLogout = false;\n      let canRetry = false;\n      let isRateLimited = false;\n      if (err.response) {\n        switch (err.response.status) {\n          case 401:\n            errorMessage = 'Session expired. Please login again.';\n            shouldLogout = true;\n            break;\n          case 429:\n            errorMessage = 'Too many requests. Please try again later.';\n            isRateLimited = true;\n            // Don't allow retries for rate limits - wait for user action\n            break;\n          case 500:\n            errorMessage = 'Server error. Please try again later.';\n            canRetry = true;\n            break;\n          default:\n            if ((_err$response$data = err.response.data) !== null && _err$response$data !== void 0 && _err$response$data.message) {\n              errorMessage = err.response.data.message;\n            }\n            canRetry = true;\n        }\n      } else if (err.request) {\n        errorMessage = 'Network error. Please check your connection.';\n        canRetry = true;\n      }\n      setAnalysis(prev => ({\n        ...prev,\n        loading: false,\n        error: errorMessage,\n        rateLimited: isRateLimited\n      }));\n      if (shouldLogout) {\n        logout();\n        navigate('/login');\n      }\n\n      // Only retry for non-rate-limit errors\n      if (canRetry && retryCount < 2) {\n        const delay = 3000 * (retryCount + 1); // Exponential backoff\n        console.log(`Retrying in ${delay / 1000} seconds...`);\n        setTimeout(() => {\n          setRetryCount(prev => prev + 1);\n        }, delay);\n      }\n    }\n  }, [symbol, navigate, logout, retryCount, analysis.rateLimited]);\n\n  // Debounced effect to prevent rapid refetching\n  useEffect(() => {\n    if (symbol) {\n      const timer = setTimeout(fetchSummary, 500);\n      return () => clearTimeout(timer);\n    }\n  }, [symbol, fetchSummary]);\n  const handleRetry = () => {\n    if (analysis.rateLimited) {\n      // For rate limits, wait at least 1 minute before retrying\n      const lastRateLimitTime = localStorage.getItem('lastRateLimitTime');\n      if (lastRateLimitTime && Date.now() - parseInt(lastRateLimitTime) < 60000) {\n        setAnalysis(prev => ({\n          ...prev,\n          error: 'Please wait at least 1 minute after rate limiting'\n        }));\n        return;\n      }\n      localStorage.removeItem('lastRateLimitTime');\n      setAnalysis(prev => ({\n        ...prev,\n        rateLimited: false\n      }));\n    }\n    setRetryCount(0);\n    fetchSummary();\n  };\n  if (analysis.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-summary-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-summary-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"AI Stock Analysis: \", symbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-summary-loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Generating AI analysis for \", symbol, \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), retryCount > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"loading-subtext\",\n          children: [\"Attempt \", retryCount + 1, \" of 3\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-summary-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-summary-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"AI Stock Analysis: \", symbol]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-summary-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(-1),\n          className: \"back-button\",\n          children: \"Back to Watchlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRetry,\n          className: `refresh-button ${analysis.rateLimited ? 'rate-limited' : ''}`,\n          disabled: analysis.loading || analysis.rateLimited,\n          children: analysis.rateLimited ? 'Try Again Later' : 'Refresh Analysis'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), analysis.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `ai-summary-error ${analysis.rateLimited ? 'rate-limited' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-icon\",\n        children: \"\\u26A0\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: analysis.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), !analysis.rateLimited && retryCount < 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRetry,\n        className: \"retry-button\",\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }, this), analysis.rateLimited && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"rate-limit-message\",\n        children: \"API rate limits reset after 1 minute. Please wait before trying again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [analysis.lastUpdated && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"last-updated\",\n        children: [\"Last updated: \", analysis.lastUpdated.toLocaleTimeString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-summary-content\",\n        children: analysis.summary.split('\\n\\n').map((paragraph, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: paragraph\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"disclaimer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Disclaimer: This AI-generated analysis is for informational purposes only and should not be considered financial advice.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(AISummary, \"CN+ivMKMlMcBJ2P1pq9Ig/n0AJE=\", false, function () {\n  return [useParams, useAuth, useNavigate];\n});\n_c = AISummary;\nexport default AISummary;\nvar _c;\n$RefreshReg$(_c, \"AISummary\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","useNavigate","useAuth","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","AISummary","_s","symbol","analysis","setAnalysis","summary","loading","error","lastUpdated","rateLimited","logout","navigate","retryCount","setRetryCount","fetchSummary","_err$response$data","storedUser","JSON","parse","localStorage","getItem","token","prev","response","post","process","env","REACT_APP_API_URL","headers","withCredentials","timeout","data","success","Error","message","Date","err","console","errorMessage","shouldLogout","canRetry","isRateLimited","status","request","delay","log","setTimeout","timer","clearTimeout","handleRetry","lastRateLimitTime","now","parseInt","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","toLocaleTimeString","split","map","paragraph","index","_c","$RefreshReg$"],"sources":["C:/Users/Shagun Khandelwal/zerodha/client/src/components/AISummary/AISummary.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport axios from 'axios';\r\nimport './AISummary.css';\r\n\r\nconst AISummary = () => {\r\n  const { symbol } = useParams();\r\n  const [analysis, setAnalysis] = useState({\r\n    summary: '',\r\n    loading: true,\r\n    error: null,\r\n    lastUpdated: null,\r\n    rateLimited: false\r\n  });\r\n  const { logout } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [retryCount, setRetryCount] = useState(0);\r\n\r\n  // Memoized fetch function with rate limiting protection\r\n  const fetchSummary = useCallback(async () => {\r\n    // Don't attempt to fetch if we know we're rate limited\r\n    if (analysis.rateLimited) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const storedUser = JSON.parse(localStorage.getItem('user'));\r\n      const token = storedUser?.token;\r\n\r\n      if (!token) {\r\n        logout();\r\n        navigate('/login');\r\n        return;\r\n      }\r\n\r\n      setAnalysis(prev => ({ ...prev, loading: true, error: null }));\r\n\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_API_URL || ''}/api/auth/ai/summary`,\r\n        { symbol },\r\n        {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          withCredentials: true,\r\n          timeout: 10000\r\n        }\r\n      );\r\n\r\n      if (!response.data.success) {\r\n        throw new Error(response.data.message || 'Failed to generate summary');\r\n      }\r\n\r\n      setAnalysis({\r\n        summary: response.data.summary,\r\n        loading: false,\r\n        error: null,\r\n        lastUpdated: new Date(),\r\n        rateLimited: false\r\n      });\r\n      setRetryCount(0); // Reset retry count on success\r\n    } catch (err) {\r\n      console.error('Error fetching AI summary:', err);\r\n      \r\n      let errorMessage = 'Failed to generate summary';\r\n      let shouldLogout = false;\r\n      let canRetry = false;\r\n      let isRateLimited = false;\r\n\r\n      if (err.response) {\r\n        switch (err.response.status) {\r\n          case 401:\r\n            errorMessage = 'Session expired. Please login again.';\r\n            shouldLogout = true;\r\n            break;\r\n          case 429:\r\n            errorMessage = 'Too many requests. Please try again later.';\r\n            isRateLimited = true;\r\n            // Don't allow retries for rate limits - wait for user action\r\n            break;\r\n          case 500:\r\n            errorMessage = 'Server error. Please try again later.';\r\n            canRetry = true;\r\n            break;\r\n          default:\r\n            if (err.response.data?.message) {\r\n              errorMessage = err.response.data.message;\r\n            }\r\n            canRetry = true;\r\n        }\r\n      } else if (err.request) {\r\n        errorMessage = 'Network error. Please check your connection.';\r\n        canRetry = true;\r\n      }\r\n\r\n      setAnalysis(prev => ({\r\n        ...prev,\r\n        loading: false,\r\n        error: errorMessage,\r\n        rateLimited: isRateLimited\r\n      }));\r\n\r\n      if (shouldLogout) {\r\n        logout();\r\n        navigate('/login');\r\n      }\r\n\r\n      // Only retry for non-rate-limit errors\r\n      if (canRetry && retryCount < 2) {\r\n        const delay = 3000 * (retryCount + 1); // Exponential backoff\r\n        console.log(`Retrying in ${delay/1000} seconds...`);\r\n        setTimeout(() => {\r\n          setRetryCount(prev => prev + 1);\r\n        }, delay);\r\n      }\r\n    }\r\n  }, [symbol, navigate, logout, retryCount, analysis.rateLimited]);\r\n\r\n  // Debounced effect to prevent rapid refetching\r\n  useEffect(() => {\r\n    if (symbol) {\r\n      const timer = setTimeout(fetchSummary, 500);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [symbol, fetchSummary]);\r\n\r\n  const handleRetry = () => {\r\n    if (analysis.rateLimited) {\r\n      // For rate limits, wait at least 1 minute before retrying\r\n      const lastRateLimitTime = localStorage.getItem('lastRateLimitTime');\r\n      if (lastRateLimitTime && Date.now() - parseInt(lastRateLimitTime) < 60000) {\r\n        setAnalysis(prev => ({\r\n          ...prev,\r\n          error: 'Please wait at least 1 minute after rate limiting'\r\n        }));\r\n        return;\r\n      }\r\n      \r\n      localStorage.removeItem('lastRateLimitTime');\r\n      setAnalysis(prev => ({ ...prev, rateLimited: false }));\r\n    }\r\n    \r\n    setRetryCount(0);\r\n    fetchSummary();\r\n  };\r\n\r\n  if (analysis.loading) {\r\n    return (\r\n      <div className=\"ai-summary-container\">\r\n        <div className=\"ai-summary-header\">\r\n          <h2>AI Stock Analysis: {symbol}</h2>\r\n        </div>\r\n        <div className=\"ai-summary-loading\">\r\n          <div className=\"loading-spinner\"></div>\r\n          <p>Generating AI analysis for {symbol}...</p>\r\n          {retryCount > 0 && (\r\n            <p className=\"loading-subtext\">Attempt {retryCount + 1} of 3</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"ai-summary-container\">\r\n      <div className=\"ai-summary-header\">\r\n        <h2>AI Stock Analysis: {symbol}</h2>\r\n        <div className=\"ai-summary-actions\">\r\n          <button \r\n            onClick={() => navigate(-1)} \r\n            className=\"back-button\"\r\n          >\r\n            Back to Watchlist\r\n          </button>\r\n          <button \r\n            onClick={handleRetry} \r\n            className={`refresh-button ${analysis.rateLimited ? 'rate-limited' : ''}`}\r\n            disabled={analysis.loading || analysis.rateLimited}\r\n          >\r\n            {analysis.rateLimited ? 'Try Again Later' : 'Refresh Analysis'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      {analysis.error ? (\r\n        <div className={`ai-summary-error ${analysis.rateLimited ? 'rate-limited' : ''}`}>\r\n          <div className=\"error-icon\">⚠️</div>\r\n          <p>{analysis.error}</p>\r\n          {!analysis.rateLimited && retryCount < 2 && (\r\n            <button \r\n              onClick={handleRetry} \r\n              className=\"retry-button\"\r\n            >\r\n              Try Again\r\n            </button>\r\n          )}\r\n          {analysis.rateLimited && (\r\n            <p className=\"rate-limit-message\">\r\n              API rate limits reset after 1 minute. Please wait before trying again.\r\n            </p>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {analysis.lastUpdated && (\r\n            <div className=\"last-updated\">\r\n              Last updated: {analysis.lastUpdated.toLocaleTimeString()}\r\n            </div>\r\n          )}\r\n          <div className=\"ai-summary-content\">\r\n            {analysis.summary.split('\\n\\n').map((paragraph, index) => (\r\n              <p key={index}>{paragraph}</p>\r\n            ))}\r\n          </div>\r\n          <div className=\"disclaimer\">\r\n            <p>Disclaimer: This AI-generated analysis is for informational purposes only and should not be considered financial advice.</p>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AISummary;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shagun Khandelwal\\\\zerodha\\\\client\\\\src\\\\components\\\\Watchlist\\\\Watchlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Watchlist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Watchlist = () => {\n  _s();\n  const FINNHUB_API_KEY = 'd17tfrhr01qteuvpuh10d17tfrhr01qteuvpuh1g'; // Replace with your Finnhub API key\n  const [stocks, setStocks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [socket, setSocket] = useState(null);\n\n  // Initial data fetch\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        // Define the stocks we want to track\n        const stockSymbols = ['AMZN', 'MSFT', 'INFY', 'AAPL'];\n\n        // Fetch initial stock prices\n        const stockPromises = stockSymbols.map(symbol => fetch(`https://finnhub.io/api/v1/quote?symbol=${symbol}&token=${FINNHUB_API_KEY}`));\n        const stockResponses = await Promise.all(stockPromises);\n        const stockData = await Promise.all(stockResponses.map(res => res.json()));\n        console.log(stockData);\n        setStocks(stockSymbols.map((symbol, index) => ({\n          symbol,\n          price: stockData[index].c,\n          change: stockData[index].d,\n          changePercent: stockData[index].dp\n        })));\n        setLoading(false);\n      } catch (err) {\n        console.error('Initial fetch failed:', err);\n        setError('Failed to load initial data. Trying real-time connection...');\n        setLoading(false);\n      }\n    };\n    fetchInitialData();\n  }, []);\n\n  // Initialize WebSocket connection after initial data is loaded\n  useEffect(() => {\n    if (loading || stocks.length === 0) return;\n    const ws = new WebSocket(`wss://ws.finnhub.io?token=${FINNHUB_API_KEY}`);\n    ws.onopen = () => {\n      console.log('WebSocket connected');\n      // Subscribe to all stocks\n      stocks.forEach(stock => {\n        ws.send(JSON.stringify({\n          type: 'subscribe',\n          symbol: stock.symbol\n        }));\n      });\n    };\n    ws.onmessage = e => {\n      const data = JSON.parse(e.data);\n      if (data.type === 'trade') {\n        const symbol = data.symbol;\n        const price = data.p;\n\n        // Update stocks\n        setStocks(prevStocks => prevStocks.map(stock => stock.symbol === symbol ? {\n          ...stock,\n          price: price,\n          change: price - (stock.price - stock.change),\n          // Calculate new change\n          changePercent: (price - (stock.price - stock.change)) / (stock.price - stock.change) * 100\n        } : stock));\n      }\n    };\n    ws.onerror = err => {\n      console.error('WebSocket error:', err);\n    };\n    ws.onclose = () => {\n      console.log('WebSocket disconnected');\n      // You might want to implement reconnection logic here\n    };\n    setSocket(ws);\n    return () => {\n      if (ws) {\n        // Unsubscribe before closing\n        stocks.forEach(stock => {\n          ws.send(JSON.stringify({\n            type: 'unsubscribe',\n            symbol: stock.symbol\n          }));\n        });\n        ws.close();\n      }\n    };\n  }, [loading, stocks]);\n  const formatNumber = num => {\n    if (num === undefined || num === null) return '--';\n    return num.toLocaleString('en-IN', {\n      maximumFractionDigits: 2\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"watchlist-loading\",\n      children: \"Loading market data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"watchlist\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"market-data-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stock-list\",\n      children: stocks.map((stock, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stock-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stock-symbol\",\n            children: stock.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `stock-change ${stock.change >= 0 ? 'positive' : 'negative'}`,\n            children: [stock.change >= 0 ? '+' : '', formatNumber(stock.change)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-price\",\n          children: formatNumber(stock.price)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(Watchlist, \"s9Hhq4TrQJfX8mup3AXNPsoZBUk=\");\n_c = Watchlist;\nexport default Watchlist;\nvar _c;\n$RefreshReg$(_c, \"Watchlist\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Watchlist","_s","FINNHUB_API_KEY","stocks","setStocks","loading","setLoading","error","setError","socket","setSocket","fetchInitialData","stockSymbols","stockPromises","map","symbol","fetch","stockResponses","Promise","all","stockData","res","json","console","log","index","price","c","change","d","changePercent","dp","err","length","ws","WebSocket","onopen","forEach","stock","send","JSON","stringify","type","onmessage","e","data","parse","p","prevStocks","onerror","onclose","close","formatNumber","num","undefined","toLocaleString","maximumFractionDigits","className","children","fileName","_jsxFileName","lineNumber","columnNumber","i","_c","$RefreshReg$"],"sources":["C:/Users/Shagun Khandelwal/zerodha/client/src/components/Watchlist/Watchlist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Watchlist.css';\r\n\r\nconst Watchlist = () => {\r\n  const FINNHUB_API_KEY = 'd17tfrhr01qteuvpuh10d17tfrhr01qteuvpuh1g'; // Replace with your Finnhub API key\r\n  const [stocks, setStocks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  // Initial data fetch\r\n  useEffect(() => {\r\n    const fetchInitialData = async () => {\r\n      try {\r\n        // Define the stocks we want to track\r\n        const stockSymbols = ['AMZN', 'MSFT', 'INFY', 'AAPL'];\r\n        \r\n        // Fetch initial stock prices\r\n        const stockPromises = stockSymbols.map(symbol => \r\n          fetch(`https://finnhub.io/api/v1/quote?symbol=${symbol}&token=${FINNHUB_API_KEY}`)\r\n        );\r\n\r\n        const stockResponses = await Promise.all(stockPromises);\r\n        const stockData = await Promise.all(stockResponses.map(res => res.json()));\r\n        console.log(stockData);\r\n\r\n        setStocks(stockSymbols.map((symbol, index) => ({\r\n          symbol,\r\n          price: stockData[index].c,\r\n          change: stockData[index].d,\r\n          changePercent: stockData[index].dp\r\n        })));\r\n\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Initial fetch failed:', err);\r\n        setError('Failed to load initial data. Trying real-time connection...');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchInitialData();\r\n  }, []);\r\n\r\n  // Initialize WebSocket connection after initial data is loaded\r\n  useEffect(() => {\r\n    if (loading || stocks.length === 0) return;\r\n\r\n    const ws = new WebSocket(`wss://ws.finnhub.io?token=${FINNHUB_API_KEY}`);\r\n    \r\n    ws.onopen = () => {\r\n      console.log('WebSocket connected');\r\n      // Subscribe to all stocks\r\n      stocks.forEach(stock => {\r\n        ws.send(JSON.stringify({ type: 'subscribe', symbol: stock.symbol }));\r\n      });\r\n    };\r\n\r\n    ws.onmessage = (e) => {\r\n      const data = JSON.parse(e.data);\r\n      if (data.type === 'trade') {\r\n        const symbol = data.symbol;\r\n        const price = data.p;\r\n\r\n        // Update stocks\r\n        setStocks(prevStocks => \r\n          prevStocks.map(stock => \r\n            stock.symbol === symbol \r\n              ? { \r\n                  ...stock, \r\n                  price: price,\r\n                  change: price - (stock.price - stock.change), // Calculate new change\r\n                  changePercent: ((price - (stock.price - stock.change)) / (stock.price - stock.change) * 100)\r\n                } \r\n              : stock\r\n          )\r\n        );\r\n      }\r\n    };\r\n\r\n    ws.onerror = (err) => {\r\n      console.error('WebSocket error:', err);\r\n    };\r\n\r\n    ws.onclose = () => {\r\n      console.log('WebSocket disconnected');\r\n      // You might want to implement reconnection logic here\r\n    };\r\n\r\n    setSocket(ws);\r\n\r\n    return () => {\r\n      if (ws) {\r\n        // Unsubscribe before closing\r\n        stocks.forEach(stock => {\r\n          ws.send(JSON.stringify({ type: 'unsubscribe', symbol: stock.symbol }));\r\n        });\r\n        ws.close();\r\n      }\r\n    };\r\n  }, [loading, stocks]);\r\n\r\n  const formatNumber = (num) => {\r\n    if (num === undefined || num === null) return '--';\r\n    return num.toLocaleString('en-IN', { maximumFractionDigits: 2 });\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"watchlist-loading\">Loading market data...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"watchlist\">\r\n      {error && (\r\n        <div className=\"market-data-error\">\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      {/* Stock List */}\r\n      <div className=\"stock-list\">\r\n        {stocks.map((stock, i) => (\r\n          <div key={i} className=\"stock-row\">\r\n            <div className=\"stock-info\">\r\n              <div className=\"stock-symbol\">{stock.symbol}</div>\r\n              <div className={`stock-change ${stock.change >= 0 ? 'positive' : 'negative'}`}>\r\n                {stock.change >= 0 ? '+' : ''}{formatNumber(stock.change)}\r\n              </div>\r\n            </div>\r\n            <div className=\"stock-price\">{formatNumber(stock.price)}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Watchlist;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
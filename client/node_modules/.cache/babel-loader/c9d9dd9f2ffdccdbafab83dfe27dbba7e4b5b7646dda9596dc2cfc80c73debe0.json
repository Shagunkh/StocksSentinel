{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shagun Khandelwal\\\\zerodha\\\\client\\\\src\\\\components\\\\AIPrediction\\\\AIPrediction.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './AIPrediction.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AIPrediction = () => {\n  _s();\n  const {\n    symbol\n  } = useParams();\n  const navigate = useNavigate();\n  const [prediction, setPrediction] = useState(null);\n  const [sentiment, setSentiment] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [priceData, setPriceData] = useState(null);\n  const [news, setNews] = useState([]);\n\n  // API Keys\n  const FINNHUB_API_KEY = 'd1aopp9r01qjhvtqeebgd1aopp9r01qjhvtqeec0';\n  const OPENROUTER_API_KEY = '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';\n  const ALPHA_VANTAGE_KEY = 'OH0ZQBRUAB4ABC4X';\n\n  // Generate AI prediction using OpenRouter API\n  const generateAIPrediction = async stockSymbol => {\n    try {\n      // Step 1: Gather data from APIs\n      const [priceData, newsData] = await Promise.all([axios.get(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${stockSymbol}&apikey=${ALPHA_VANTAGE_KEY}`), axios.get(`https://finnhub.io/api/v1/company-news?symbol=${stockSymbol}&from=${new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString().split('T')[0]}&to=${new Date().toISOString().split('T')[0]}&token=${FINNHUB_API_KEY}`)]);\n\n      // Step 2: Prepare data for AI analysis\n      const priceChange = priceData.data['Global Quote'] ? priceData.data['Global Quote']['10. change percent'] : 'No recent price data available';\n      const latestNews = newsData.data && newsData.data.length > 0 ? newsData.data.slice(0, 3).map(item => item.headline).join('\\n- ') : 'No recent news available';\n\n      // Step 3: Send to AI for prediction\n      const response = await axios.post('https://openrouter.ai/api/v1/chat/completions', {\n        model: \"openai/gpt-3.5-turbo\",\n        messages: [{\n          \"role\": \"system\",\n          \"content\": `You are an advanced stock prediction AI that analyzes multiple data points to forecast stock movements.\n                        Provide a detailed prediction for the next 24 hours including:\n                        - Predicted direction and percentage change\n                        - Key factors influencing the prediction\n                        - Confidence level (low/medium/high)\n                        - Technical analysis insights\n                        - Important disclaimer about predictions being speculative`\n        }, {\n          \"role\": \"user\",\n          \"content\": `Generate a 24-hour prediction for ${stockSymbol} based on:\n                        - Recent price change: ${priceChange}\n                        - Latest news headlines:\n                          - ${latestNews}\n                        \n                        Format your response with clear sections, emojis, and markdown-style formatting for visual appeal.`\n        }],\n        max_tokens: 1000\n      }, {\n        headers: {\n          'Authorization': `Bearer ${OPENROUTER_API_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setPrediction(response.data.choices[0].message.content);\n      setSentiment({\n        sentiment: Math.random() > 0.5 ? 'positive' : 'negative',\n        score: (Math.random() * 2 - 1).toFixed(2)\n      });\n    } catch (err) {\n      console.error(\"Error generating prediction:\", err);\n      setError('Failed to generate prediction. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch market news\n  const fetchStockNews = async stockSymbol => {\n    try {\n      const response = await axios.get(`https://finnhub.io/api/v1/company-news?symbol=${stockSymbol}&from=${new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]}&to=${new Date().toISOString().split('T')[0]}&token=${FINNHUB_API_KEY}`);\n      const filteredNews = response.data.filter(item => item.headline && item.image && item.url).slice(0, 5);\n      setNews(filteredNews);\n    } catch (err) {\n      console.error(\"Error fetching news:\", err);\n    }\n  };\n\n  // Load all data when symbol changes\n  useEffect(() => {\n    if (symbol) {\n      setLoading(true);\n      generateAIPrediction(symbol);\n      fetchStockNews(symbol);\n    }\n  }, [symbol]);\n  if (!symbol) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-prediction-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: \"No stock symbol provided. Please select a stock to analyze.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-prediction-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-prediction-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [symbol.toUpperCase(), \" Smart Prediction\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(-1),\n        className: \"back-button\",\n        children: \"Back to Watchlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Generating AI-powered prediction...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"retry-button\",\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prediction-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prediction-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prediction-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"prediction-icon\",\n              children: \"\\uD83D\\uDD2E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"prediction-title\",\n              children: \"AI Forecast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this), sentiment && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `sentiment-badge ${sentiment.sentiment}`,\n              children: [sentiment.sentiment, \" sentiment (\", sentiment.score, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prediction-content\",\n            children: prediction.split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: line\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prediction-disclaimer\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"Disclaimer: Predictions are based on AI analysis of market data and are not guaranteed. Always conduct your own research before making investment decisions.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"news-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Latest News About \", symbol.toUpperCase()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"news-list\",\n          children: news.length > 0 ? news.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"news-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"news-item-header\",\n              children: [item.image && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.image,\n                alt: item.headline,\n                className: \"news-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: item.url,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: item.headline\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"news-source\",\n                  children: [item.source, \" - \", new Date(item.datetime * 1000).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"news-summary\",\n              children: item.summary || 'No summary available'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"No recent news found for \", symbol.toUpperCase()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(AIPrediction, \"Xh12u5QBYuLWx04zXk8Cl2Kelow=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AIPrediction;\nexport default AIPrediction;\nvar _c;\n$RefreshReg$(_c, \"AIPrediction\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AIPrediction","_s","symbol","navigate","prediction","setPrediction","sentiment","setSentiment","loading","setLoading","error","setError","priceData","setPriceData","news","setNews","FINNHUB_API_KEY","OPENROUTER_API_KEY","ALPHA_VANTAGE_KEY","generateAIPrediction","stockSymbol","newsData","Promise","all","get","Date","now","toISOString","split","priceChange","data","latestNews","length","slice","map","item","headline","join","response","post","model","messages","max_tokens","headers","choices","message","content","Math","random","score","toFixed","err","console","fetchStockNews","filteredNews","filter","image","url","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toUpperCase","onClick","window","location","reload","line","i","index","src","alt","href","target","rel","source","datetime","toLocaleDateString","summary","_c","$RefreshReg$"],"sources":["C:/Users/Shagun Khandelwal/zerodha/client/src/components/AIPrediction/AIPrediction.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport './AIPrediction.css';\r\n\r\nconst AIPrediction = () => {\r\n  const { symbol } = useParams();\r\n  const navigate = useNavigate();\r\n  const [prediction, setPrediction] = useState(null);\r\n  const [sentiment, setSentiment] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [priceData, setPriceData] = useState(null);\r\n  const [news, setNews] = useState([]);\r\n\r\n  // API Keys\r\n  const FINNHUB_API_KEY = 'd1aopp9r01qjhvtqeebgd1aopp9r01qjhvtqeec0';\r\n  const OPENROUTER_API_KEY = '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';\r\n  const ALPHA_VANTAGE_KEY = 'OH0ZQBRUAB4ABC4X';\r\n\r\n  // Generate AI prediction using OpenRouter API\r\n  const generateAIPrediction = async (stockSymbol) => {\r\n    try {\r\n      // Step 1: Gather data from APIs\r\n      const [priceData, newsData] = await Promise.all([\r\n        axios.get(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${stockSymbol}&apikey=${ALPHA_VANTAGE_KEY}`),\r\n        axios.get(`https://finnhub.io/api/v1/company-news?symbol=${stockSymbol}&from=${new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString().split('T')[0]}&to=${new Date().toISOString().split('T')[0]}&token=${FINNHUB_API_KEY}`),\r\n      ]);\r\n\r\n      // Step 2: Prepare data for AI analysis\r\n      const priceChange = priceData.data['Global Quote'] ? \r\n        priceData.data['Global Quote']['10. change percent'] : \r\n        'No recent price data available';\r\n      \r\n      const latestNews = newsData.data && newsData.data.length > 0 ? \r\n        newsData.data.slice(0, 3).map(item => item.headline).join('\\n- ') : \r\n        'No recent news available';\r\n\r\n      // Step 3: Send to AI for prediction\r\n      const response = await axios.post('https://openrouter.ai/api/v1/chat/completions', {\r\n        model: \"openai/gpt-3.5-turbo\",\r\n        messages: [\r\n          { \r\n            \"role\": \"system\", \r\n            \"content\": `You are an advanced stock prediction AI that analyzes multiple data points to forecast stock movements.\r\n                        Provide a detailed prediction for the next 24 hours including:\r\n                        - Predicted direction and percentage change\r\n                        - Key factors influencing the prediction\r\n                        - Confidence level (low/medium/high)\r\n                        - Technical analysis insights\r\n                        - Important disclaimer about predictions being speculative`\r\n          },\r\n          { \r\n            \"role\": \"user\", \r\n            \"content\": `Generate a 24-hour prediction for ${stockSymbol} based on:\r\n                        - Recent price change: ${priceChange}\r\n                        - Latest news headlines:\r\n                          - ${latestNews}\r\n                        \r\n                        Format your response with clear sections, emojis, and markdown-style formatting for visual appeal.`\r\n          }\r\n        ],\r\n        max_tokens: 1000\r\n      }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${OPENROUTER_API_KEY}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setPrediction(response.data.choices[0].message.content);\r\n      setSentiment({\r\n        sentiment: Math.random() > 0.5 ? 'positive' : 'negative',\r\n        score: (Math.random() * 2 - 1).toFixed(2)\r\n      });\r\n    } catch (err) {\r\n      console.error(\"Error generating prediction:\", err);\r\n      setError('Failed to generate prediction. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch market news\r\n  const fetchStockNews = async (stockSymbol) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://finnhub.io/api/v1/company-news?symbol=${stockSymbol}&from=${new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]}&to=${new Date().toISOString().split('T')[0]}&token=${FINNHUB_API_KEY}`\r\n      );\r\n      \r\n      const filteredNews = response.data\r\n        .filter(item => item.headline && item.image && item.url)\r\n        .slice(0, 5);\r\n      \r\n      setNews(filteredNews);\r\n    } catch (err) {\r\n      console.error(\"Error fetching news:\", err);\r\n    }\r\n  };\r\n\r\n  // Load all data when symbol changes\r\n  useEffect(() => {\r\n    if (symbol) {\r\n      setLoading(true);\r\n      generateAIPrediction(symbol);\r\n      fetchStockNews(symbol);\r\n    }\r\n  }, [symbol]);\r\n\r\n  if (!symbol) {\r\n    return (\r\n      <div className=\"ai-prediction-container\">\r\n        <div className=\"error-message\">\r\n          No stock symbol provided. Please select a stock to analyze.\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"ai-prediction-container\">\r\n      <div className=\"ai-prediction-header\">\r\n        <h2>{symbol.toUpperCase()} Smart Prediction</h2>\r\n        <button onClick={() => navigate(-1)} className=\"back-button\">\r\n          Back to Watchlist\r\n        </button>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <div className=\"loading-spinner\">\r\n          <div className=\"spinner\"></div>\r\n          <p>Generating AI-powered prediction...</p>\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"error-message\">\r\n          <p>{error}</p>\r\n          <button onClick={() => window.location.reload()} className=\"retry-button\">\r\n            Retry\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {prediction && (\r\n            <div className=\"prediction-section\">\r\n              <div className=\"prediction-card\">\r\n                <div className=\"prediction-header\">\r\n                  <span className=\"prediction-icon\">🔮</span>\r\n                  <span className=\"prediction-title\">AI Forecast</span>\r\n                  {sentiment && (\r\n                    <span className={`sentiment-badge ${sentiment.sentiment}`}>\r\n                      {sentiment.sentiment} sentiment ({sentiment.score})\r\n                    </span>\r\n                  )}\r\n                </div>\r\n                <div className=\"prediction-content\">\r\n                  {prediction.split('\\n').map((line, i) => (\r\n                    <p key={i}>{line}</p>\r\n                  ))}\r\n                </div>\r\n                <div className=\"prediction-disclaimer\">\r\n                  <small>Disclaimer: Predictions are based on AI analysis of market data and are not guaranteed. Always conduct your own research before making investment decisions.</small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"news-section\">\r\n            <h3>Latest News About {symbol.toUpperCase()}</h3>\r\n            <div className=\"news-list\">\r\n              {news.length > 0 ? (\r\n                news.map((item, index) => (\r\n                  <div key={index} className=\"news-item\">\r\n                    <div className=\"news-item-header\">\r\n                      {item.image && (\r\n                        <img src={item.image} alt={item.headline} className=\"news-image\" />\r\n                      )}\r\n                      <div>\r\n                        <h4>\r\n                          <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            {item.headline}\r\n                          </a>\r\n                        </h4>\r\n                        <p className=\"news-source\">{item.source} - {new Date(item.datetime * 1000).toLocaleDateString()}</p>\r\n                      </div>\r\n                    </div>\r\n                    <p className=\"news-summary\">{item.summary || 'No summary available'}</p>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <p>No recent news found for {symbol.toUpperCase()}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AIPrediction;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
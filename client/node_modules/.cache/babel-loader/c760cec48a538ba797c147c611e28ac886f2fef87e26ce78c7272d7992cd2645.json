{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shagun Khandelwal\\\\zerodha\\\\client\\\\src\\\\components\\\\Watchlist\\\\Watchlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Watchlist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Watchlist = () => {\n  _s();\n  const FINNHUB_API_KEY = 'd17stm1r01qteuvpqihgd17stm1r01qteuvpqii0';\n  const [stocks, setStocks] = useState([{\n    symbol: 'AMZN',\n    price: 175.50,\n    change: 2.30\n  }, {\n    symbol: 'MSFT',\n    price: 420.72,\n    change: -1.25\n  }]);\n  const [indices, setIndices] = useState([{\n    name: 'NASDAQ',\n    value: 17685.65,\n    change: -1.37,\n    changePercent: -1.37\n  }, {\n    name: 'DOW JONES',\n    value: 38400.61,\n    change: 1.41,\n    changePercent: 1.41\n  }]);\n  const [error, setError] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const ws = useRef(null);\n  const retryCount = useRef(0);\n  const maxRetries = 3;\n  const connectWebSocket = () => {\n    ws.current = new WebSocket(`wss://ws.finnhub.io?token=${FINNHUB_API_KEY}`);\n    ws.current.onopen = () => {\n      console.log('WebSocket connected');\n      setIsConnected(true);\n      retryCount.current = 0;\n      const symbols = [...stocks.map(stock => stock.symbol), '^IXIC', '^DJI'];\n      symbols.forEach(symbol => {\n        ws.current.send(JSON.stringify({\n          type: 'subscribe',\n          symbol\n        }));\n      });\n    };\n    ws.current.onmessage = e => {\n      try {\n        const data = JSON.parse(e.data);\n        if (data.type === 'trade' && data.p) {\n          updateData(data);\n        }\n      } catch (err) {\n        console.error('Error parsing WebSocket message:', err);\n      }\n    };\n    ws.current.onerror = err => {\n      console.error('WebSocket error:', err);\n      setError('Realtime connection issue. Retrying...');\n      setIsConnected(false);\n    };\n    ws.current.onclose = () => {\n      setIsConnected(false);\n      if (retryCount.current < maxRetries) {\n        retryCount.current += 1;\n        setTimeout(connectWebSocket, 3000 * retryCount.current);\n      } else {\n        setError('Failed to connect to realtime data. Using fallback API.');\n        fetchInitialData();\n      }\n    };\n  };\n  const updateData = data => {\n    const symbol = data.symbol;\n\n    // Update stocks\n    setStocks(prev => prev.map(stock => stock.symbol === symbol && data.p ? {\n      ...stock,\n      price: data.p,\n      change: parseFloat((data.p - (stock.price - stock.change)).toFixed(2) || 0)\n    } : stock));\n\n    // Update indices\n    if (symbol === '^IXIC' || symbol === '^DJI') {\n      const indexName = symbol === '^IXIC' ? 'NASDAQ' : 'DOW JONES';\n      setIndices(prev => prev.map(index => index.name === indexName && data.p ? {\n        ...index,\n        value: data.p,\n        change: parseFloat((data.p - (index.value - index.change)).toFixed(2)) || 0,\n        changePercent: parseFloat(((data.p - (index.value - index.change)) / (index.value - index.change) * 100).toFixed(2)) || 0\n      } : index));\n    }\n  };\n  const fetchInitialData = async () => {\n    try {\n      // Fetch all stock data\n      const stockPromises = stocks.map(stock => fetch(`https://finnhub.io/api/v1/quote?symbol=AMZN&token=${FINNHUB_API_KEY}`).then(res => {\n        if (!res.ok) throw new Error('Network response was not ok');\n        return res.json();\n      }).catch(err => {\n        console.error(`Error fetching ${stock.symbol}:`, err);\n        return {\n          c: stock.price,\n          pc: stock.price - stock.change\n        }; // Return cached values if API fails\n      }));\n      const stockResults = await Promise.all(stockPromises);\n      setStocks(prev => prev.map((stock, i) => {\n        var _stockResults$i, _stockResults$i2, _stockResults$i3;\n        return {\n          ...stock,\n          price: ((_stockResults$i = stockResults[i]) === null || _stockResults$i === void 0 ? void 0 : _stockResults$i.c) || stock.price,\n          change: parseFloat(((((_stockResults$i2 = stockResults[i]) === null || _stockResults$i2 === void 0 ? void 0 : _stockResults$i2.c) || stock.price) - (((_stockResults$i3 = stockResults[i]) === null || _stockResults$i3 === void 0 ? void 0 : _stockResults$i3.pc) || stock.price - stock.change)).toFixed(2)) || 0\n        };\n      }));\n\n      // Fetch indices\n      const [nasdaq, dow] = await Promise.all([fetch(`https://finnhub.io/api/v1/quote?symbol=^IXIC&token=${FINNHUB_API_KEY}`).then(res => {\n        if (!res.ok) throw new Error('NASDAQ fetch failed');\n        return res.json();\n      }).catch(err => {\n        console.error('Error fetching NASDAQ:', err);\n        return indices.find(i => i.name === 'NASDAQ');\n      }), fetch(`https://finnhub.io/api/v1/quote?symbol=^DJI&token=${FINNHUB_API_KEY}`).then(res => {\n        if (!res.ok) throw new Error('DOW JONES fetch failed');\n        return res.json();\n      }).catch(err => {\n        console.error('Error fetching DOW JONES:', err);\n        return indices.find(i => i.name === 'DOW JONES');\n      })]);\n      setIndices([{\n        name: 'NASDAQ',\n        value: (nasdaq === null || nasdaq === void 0 ? void 0 : nasdaq.c) || indices[0].value,\n        change: parseFloat(((nasdaq === null || nasdaq === void 0 ? void 0 : nasdaq.c) - (nasdaq === null || nasdaq === void 0 ? void 0 : nasdaq.pc)).toFixed(2)) || indices[0].change,\n        changePercent: parseFloat((((nasdaq === null || nasdaq === void 0 ? void 0 : nasdaq.c) - (nasdaq === null || nasdaq === void 0 ? void 0 : nasdaq.pc)) / (nasdaq === null || nasdaq === void 0 ? void 0 : nasdaq.pc) * 100).toFixed(2)) || indices[0].changePercent\n      }, {\n        name: 'DOW JONES',\n        value: (dow === null || dow === void 0 ? void 0 : dow.c) || indices[1].value,\n        change: parseFloat(((dow === null || dow === void 0 ? void 0 : dow.c) - (dow === null || dow === void 0 ? void 0 : dow.pc)).toFixed(2)) || indices[1].change,\n        changePercent: parseFloat((((dow === null || dow === void 0 ? void 0 : dow.c) - (dow === null || dow === void 0 ? void 0 : dow.pc)) / (dow === null || dow === void 0 ? void 0 : dow.pc) * 100).toFixed(2)) || indices[1].changePercent\n      }]);\n    } catch (err) {\n      console.error('Fallback API failed:', err);\n      setError('Unable to fetch latest data. Showing cached values.');\n    }\n  };\n  useEffect(() => {\n    connectWebSocket();\n    return () => {\n      if (ws.current) {\n        ws.current.close();\n      }\n    };\n  }, []);\n  const formatNumber = num => {\n    if (num === undefined || num === null || isNaN(num)) {\n      return 'N/A';\n    }\n    return num.toLocaleString('en-US', {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"watchlist\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connection-status\",\n      children: [isConnected ? 'ðŸŸ¢ Live' : 'ðŸ”´ Disconnected', error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"market-indices\",\n      children: indices.map((index, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"index-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"index-name\",\n          children: index.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"index-value\",\n          children: formatNumber(index.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `index-change ${index.change >= 0 ? 'positive' : 'negative'}`,\n          children: [index.change >= 0 ? '+' : '', formatNumber(index.change), \" (\", formatNumber(index.changePercent), \"%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stock-list\",\n      children: stocks.map((stock, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stock-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-symbol\",\n          children: stock.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-price\",\n          children: formatNumber(stock.price)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `stock-change ${stock.change >= 0 ? 'positive' : 'negative'}`,\n          children: [stock.change >= 0 ? '+' : '', formatNumber(stock.change)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n_s(Watchlist, \"YbDLWUXHIF1jxSprOWP8vJazwpI=\");\n_c = Watchlist;\nexport default Watchlist;\nvar _c;\n$RefreshReg$(_c, \"Watchlist\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Watchlist","_s","FINNHUB_API_KEY","stocks","setStocks","symbol","price","change","indices","setIndices","name","value","changePercent","error","setError","isConnected","setIsConnected","ws","retryCount","maxRetries","connectWebSocket","current","WebSocket","onopen","console","log","symbols","map","stock","forEach","send","JSON","stringify","type","onmessage","e","data","parse","p","updateData","err","onerror","onclose","setTimeout","fetchInitialData","prev","parseFloat","toFixed","indexName","index","stockPromises","fetch","then","res","ok","Error","json","catch","c","pc","stockResults","Promise","all","i","_stockResults$i","_stockResults$i2","_stockResults$i3","nasdaq","dow","find","close","formatNumber","num","undefined","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shagun Khandelwal/zerodha/client/src/components/Watchlist/Watchlist.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './Watchlist.css';\r\n\r\nconst Watchlist = () => {\r\n  const FINNHUB_API_KEY = 'd17stm1r01qteuvpqihgd17stm1r01qteuvpqii0';\r\n  const [stocks, setStocks] = useState([\r\n    { symbol: 'AMZN', price: 175.50, change: 2.30 },\r\n    { symbol: 'MSFT', price: 420.72, change: -1.25 }\r\n  ]);\r\n\r\n  const [indices, setIndices] = useState([\r\n    { name: 'NASDAQ', value: 17685.65, change: -1.37, changePercent: -1.37 },\r\n    { name: 'DOW JONES', value: 38400.61, change: 1.41, changePercent: 1.41 }\r\n  ]);\r\n\r\n  const [error, setError] = useState(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const ws = useRef(null);\r\n  const retryCount = useRef(0);\r\n  const maxRetries = 3;\r\n\r\n  const connectWebSocket = () => {\r\n    ws.current = new WebSocket(`wss://ws.finnhub.io?token=${FINNHUB_API_KEY}`);\r\n\r\n    ws.current.onopen = () => {\r\n      console.log('WebSocket connected');\r\n      setIsConnected(true);\r\n      retryCount.current = 0;\r\n      \r\n      const symbols = [\r\n        ...stocks.map(stock => stock.symbol),\r\n        '^IXIC',\r\n        '^DJI'\r\n      ];\r\n      \r\n      symbols.forEach(symbol => {\r\n        ws.current.send(JSON.stringify({ type: 'subscribe', symbol }));\r\n      });\r\n    };\r\n\r\n    ws.current.onmessage = (e) => {\r\n      try {\r\n        const data = JSON.parse(e.data);\r\n        if (data.type === 'trade' && data.p) {\r\n          updateData(data);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error parsing WebSocket message:', err);\r\n      }\r\n    };\r\n\r\n    ws.current.onerror = (err) => {\r\n      console.error('WebSocket error:', err);\r\n      setError('Realtime connection issue. Retrying...');\r\n      setIsConnected(false);\r\n    };\r\n\r\n    ws.current.onclose = () => {\r\n      setIsConnected(false);\r\n      if (retryCount.current < maxRetries) {\r\n        retryCount.current += 1;\r\n        setTimeout(connectWebSocket, 3000 * retryCount.current);\r\n      } else {\r\n        setError('Failed to connect to realtime data. Using fallback API.');\r\n        fetchInitialData();\r\n      }\r\n    };\r\n  };\r\n\r\n  const updateData = (data) => {\r\n    const symbol = data.symbol;\r\n    \r\n    // Update stocks\r\n    setStocks(prev => \r\n      prev.map(stock => \r\n        stock.symbol === symbol && data.p\r\n          ? { \r\n              ...stock, \r\n              price: data.p,\r\n              change: parseFloat((data.p - (stock.price - stock.change)).toFixed(2) || 0)\r\n            }\r\n          : stock\r\n      )\r\n    );\r\n\r\n    // Update indices\r\n    if (symbol === '^IXIC' || symbol === '^DJI') {\r\n      const indexName = symbol === '^IXIC' ? 'NASDAQ' : 'DOW JONES';\r\n      setIndices(prev => \r\n        prev.map(index => \r\n          index.name === indexName && data.p\r\n            ? {\r\n                ...index,\r\n                value: data.p,\r\n                change: parseFloat((data.p - (index.value - index.change)).toFixed(2)) || 0,\r\n                changePercent: parseFloat(((data.p - (index.value - index.change)) / (index.value - index.change) * 100).toFixed(2)) || 0\r\n              }\r\n            : index\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const fetchInitialData = async () => {\r\n    try {\r\n      // Fetch all stock data\r\n      const stockPromises = stocks.map(stock => \r\n        fetch(`https://finnhub.io/api/v1/quote?symbol=AMZN&token=${FINNHUB_API_KEY}`)\r\n          .then(res => {\r\n            if (!res.ok) throw new Error('Network response was not ok');\r\n            return res.json();\r\n          })\r\n          .catch(err => {\r\n            console.error(`Error fetching ${stock.symbol}:`, err);\r\n            return { c: stock.price, pc: stock.price - stock.change }; // Return cached values if API fails\r\n          })\r\n      );\r\n      \r\n      const stockResults = await Promise.all(stockPromises);\r\n      \r\n      setStocks(prev => \r\n        prev.map((stock, i) => ({\r\n          ...stock,\r\n          price: stockResults[i]?.c || stock.price,\r\n          change: parseFloat(((stockResults[i]?.c || stock.price) - (stockResults[i]?.pc || (stock.price - stock.change))).toFixed(2)) || 0\r\n        }))\r\n      );\r\n\r\n      // Fetch indices\r\n      const [nasdaq, dow] = await Promise.all([\r\n        fetch(`https://finnhub.io/api/v1/quote?symbol=^IXIC&token=${FINNHUB_API_KEY}`)\r\n          .then(res => {\r\n            if (!res.ok) throw new Error('NASDAQ fetch failed');\r\n            return res.json();\r\n          })\r\n          .catch(err => {\r\n            console.error('Error fetching NASDAQ:', err);\r\n            return indices.find(i => i.name === 'NASDAQ');\r\n          }),\r\n        fetch(`https://finnhub.io/api/v1/quote?symbol=^DJI&token=${FINNHUB_API_KEY}`)\r\n          .then(res => {\r\n            if (!res.ok) throw new Error('DOW JONES fetch failed');\r\n            return res.json();\r\n          })\r\n          .catch(err => {\r\n            console.error('Error fetching DOW JONES:', err);\r\n            return indices.find(i => i.name === 'DOW JONES');\r\n          })\r\n      ]);\r\n\r\n      setIndices([\r\n        { \r\n          name: 'NASDAQ', \r\n          value: nasdaq?.c || indices[0].value, \r\n          change: parseFloat((nasdaq?.c - nasdaq?.pc).toFixed(2)) || indices[0].change,\r\n          changePercent: parseFloat(((nasdaq?.c - nasdaq?.pc) / nasdaq?.pc * 100).toFixed(2)) || indices[0].changePercent\r\n        },\r\n        { \r\n          name: 'DOW JONES', \r\n          value: dow?.c || indices[1].value, \r\n          change: parseFloat((dow?.c - dow?.pc).toFixed(2)) || indices[1].change,\r\n          changePercent: parseFloat(((dow?.c - dow?.pc) / dow?.pc * 100).toFixed(2)) || indices[1].changePercent\r\n        }\r\n      ]);\r\n\r\n    } catch (err) {\r\n      console.error('Fallback API failed:', err);\r\n      setError('Unable to fetch latest data. Showing cached values.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    connectWebSocket();\r\n    \r\n    return () => {\r\n      if (ws.current) {\r\n        ws.current.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const formatNumber = (num) => {\r\n    if (num === undefined || num === null || isNaN(num)) {\r\n      return 'N/A';\r\n    }\r\n    return num.toLocaleString('en-US', { \r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2 \r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"watchlist\">\r\n      <div className=\"connection-status\">\r\n        {isConnected ? 'ðŸŸ¢ Live' : 'ðŸ”´ Disconnected'}\r\n        {error && <span className=\"error-message\">{error}</span>}\r\n      </div>\r\n\r\n      {/* Indices */}\r\n      <div className=\"market-indices\">\r\n        {indices.map((index, i) => (\r\n          <div key={i} className=\"index-card\">\r\n            <div className=\"index-name\">{index.name}</div>\r\n            <div className=\"index-value\">{formatNumber(index.value)}</div>\r\n            <div className={`index-change ${index.change >= 0 ? 'positive' : 'negative'}`}>\r\n              {index.change >= 0 ? '+' : ''}{formatNumber(index.change)} ({formatNumber(index.changePercent)}%)\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Stocks */}\r\n      <div className=\"stock-list\">\r\n        {stocks.map((stock, i) => (\r\n          <div key={i} className=\"stock-row\">\r\n            <div className=\"stock-symbol\">{stock.symbol}</div>\r\n            <div className=\"stock-price\">{formatNumber(stock.price)}</div>\r\n            <div className={`stock-change ${stock.change >= 0 ? 'positive' : 'negative'}`}>\r\n              {stock.change >= 0 ? '+' : ''}{formatNumber(stock.change)}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Watchlist;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
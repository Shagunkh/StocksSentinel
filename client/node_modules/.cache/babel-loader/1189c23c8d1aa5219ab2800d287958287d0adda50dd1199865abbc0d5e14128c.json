{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shagun Khandelwal\\\\zerodha\\\\client\\\\src\\\\components\\\\Watchlist\\\\Watchlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Watchlist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Watchlist = () => {\n  _s();\n  const FINNHUB_API_KEY = 'd17tfrhr01qteuvpuh10d17tfrhr01qteuvpuh1g';\n  const [stocks, setStocks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [socket, setSocket] = useState(null);\n\n  // Initial data fetch\n  useEffect(() => {\n    const fetchInitialData = async () => {\n      try {\n        // Define the stocks we want to track (with some lossy stocks included)\n        const stockSymbols = [\n        // Tech Giants\n        'AAPL', 'MSFT', 'GOOGL', 'AMZN', 'META', 'TSLA', 'NVDA',\n        // Lossy/Volatile Stocks\n        'PYPL', 'BABA', 'MSTR', 'HOOD', 'PTON', 'COIN', 'NIO'];\n\n        // Fetch initial stock prices\n        const stockPromises = stockSymbols.map(symbol => fetch(`https://finnhub.io/api/v1/quote?symbol=${symbol}&token=${FINNHUB_API_KEY}`));\n        const stockResponses = await Promise.all(stockPromises);\n        const stockData = await Promise.all(stockResponses.map(res => res.json()));\n        setStocks(stockSymbols.map((symbol, index) => {\n          var _stockData$index, _stockData$index2, _stockData$index3;\n          return {\n            symbol,\n            price: ((_stockData$index = stockData[index]) === null || _stockData$index === void 0 ? void 0 : _stockData$index.c) || 0,\n            change: ((_stockData$index2 = stockData[index]) === null || _stockData$index2 === void 0 ? void 0 : _stockData$index2.d) || 0,\n            changePercent: ((_stockData$index3 = stockData[index]) === null || _stockData$index3 === void 0 ? void 0 : _stockData$index3.dp) || 0\n          };\n        }));\n        setLoading(false);\n      } catch (err) {\n        console.error('Initial fetch failed:', err);\n        setError('Failed to load initial data. Trying real-time connection...');\n        setLoading(false);\n      }\n    };\n    fetchInitialData();\n  }, []);\n\n  // Initialize WebSocket connection\n  useEffect(() => {\n    if (loading || stocks.length === 0) return;\n    const ws = new WebSocket(`wss://ws.finnhub.io?token=${FINNHUB_API_KEY}`);\n    ws.onopen = () => {\n      console.log('WebSocket connected');\n      stocks.forEach(stock => {\n        ws.send(JSON.stringify({\n          type: 'subscribe',\n          symbol: stock.symbol\n        }));\n      });\n    };\n    ws.onmessage = e => {\n      const data = JSON.parse(e.data);\n      if (data.type === 'trade') {\n        setStocks(prevStocks => prevStocks.map(stock => stock.symbol === data.symbol ? {\n          ...stock,\n          price: data.p,\n          change: data.p - (stock.price - stock.change),\n          changePercent: (data.p - (stock.price - stock.change)) / (stock.price - stock.change) * 100\n        } : stock));\n      }\n    };\n    ws.onerror = err => {\n      console.error('WebSocket error:', err);\n      setError('Realtime connection issue');\n    };\n    ws.onclose = () => {\n      console.log('WebSocket disconnected');\n    };\n    setSocket(ws);\n    return () => {\n      if (ws) {\n        stocks.forEach(stock => {\n          ws.send(JSON.stringify({\n            type: 'unsubscribe',\n            symbol: stock.symbol\n          }));\n        });\n        ws.close();\n      }\n    };\n  }, [loading, stocks]);\n  const formatNumber = num => {\n    if (num === undefined || num === null || isNaN(num)) return '--';\n    return num.toLocaleString('en-US', {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    });\n  };\n  const formatChangePercent = percent => {\n    if (percent === undefined || percent === null || isNaN(percent)) return '--%';\n    return `${percent >= 0 ? '+' : ''}${percent.toFixed(2)}%`;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"watchlist-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading market data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"watchlist\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"watchlist-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Stock Watchlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `connection-status ${error ? 'error' : ''}`,\n        children: error || ((socket === null || socket === void 0 ? void 0 : socket.readyState) === WebSocket.OPEN ? 'ðŸŸ¢ Live' : 'ðŸ”´ Disconnected')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stocks-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stocks-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-symbol\",\n          children: \"Symbol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-price\",\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-change\",\n          children: \"Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-change-percent\",\n          children: \"% Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stocks-list\",\n        children: stocks.map((stock, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `stock-card ${stock.change < 0 ? 'negative' : 'positive'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stock-symbol\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"symbol\",\n              children: stock.symbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"company-name\",\n              children: getCompanyName(stock.symbol)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stock-price\",\n            children: [\"$\", formatNumber(stock.price)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stock-change\",\n            children: [stock.change >= 0 ? '+' : '', formatNumber(stock.change)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stock-change-percent\",\n            children: formatChangePercent(stock.changePercent)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n\n// Helper function to get company names\n_s(Watchlist, \"s9Hhq4TrQJfX8mup3AXNPsoZBUk=\");\n_c = Watchlist;\nconst getCompanyName = symbol => {\n  const companyNames = {\n    'AAPL': 'Apple',\n    'MSFT': 'Microsoft',\n    'GOOGL': 'Alphabet',\n    'AMZN': 'Amazon',\n    'META': 'Meta',\n    'TSLA': 'Tesla',\n    'NVDA': 'Nvidia',\n    'PYPL': 'PayPal',\n    'BABA': 'Alibaba',\n    'MSTR': 'MicroStrategy',\n    'HOOD': 'Robinhood',\n    'PTON': 'Peloton',\n    'COIN': 'Coinbase',\n    'NIO': 'NIO Inc.'\n  };\n  return companyNames[symbol] || '';\n};\nexport default Watchlist;\nvar _c;\n$RefreshReg$(_c, \"Watchlist\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Watchlist","_s","FINNHUB_API_KEY","stocks","setStocks","loading","setLoading","error","setError","socket","setSocket","fetchInitialData","stockSymbols","stockPromises","map","symbol","fetch","stockResponses","Promise","all","stockData","res","json","index","_stockData$index","_stockData$index2","_stockData$index3","price","c","change","d","changePercent","dp","err","console","length","ws","WebSocket","onopen","log","forEach","stock","send","JSON","stringify","type","onmessage","e","data","parse","prevStocks","p","onerror","onclose","close","formatNumber","num","undefined","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","formatChangePercent","percent","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","readyState","OPEN","i","getCompanyName","_c","companyNames","$RefreshReg$"],"sources":["C:/Users/Shagun Khandelwal/zerodha/client/src/components/Watchlist/Watchlist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Watchlist.css';\r\n\r\nconst Watchlist = () => {\r\n  const FINNHUB_API_KEY = 'd17tfrhr01qteuvpuh10d17tfrhr01qteuvpuh1g';\r\n  const [stocks, setStocks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [socket, setSocket] = useState(null);\r\n\r\n  // Initial data fetch\r\n  useEffect(() => {\r\n    const fetchInitialData = async () => {\r\n      try {\r\n        // Define the stocks we want to track (with some lossy stocks included)\r\n        const stockSymbols = [\r\n          // Tech Giants\r\n          'AAPL', 'MSFT', 'GOOGL', 'AMZN', 'META', 'TSLA', 'NVDA',\r\n          // Lossy/Volatile Stocks\r\n          'PYPL', 'BABA', 'MSTR', 'HOOD', 'PTON', 'COIN', 'NIO'\r\n        ];\r\n        \r\n        // Fetch initial stock prices\r\n        const stockPromises = stockSymbols.map(symbol => \r\n          fetch(`https://finnhub.io/api/v1/quote?symbol=${symbol}&token=${FINNHUB_API_KEY}`)\r\n        );\r\n\r\n        const stockResponses = await Promise.all(stockPromises);\r\n        const stockData = await Promise.all(stockResponses.map(res => res.json()));\r\n\r\n        setStocks(stockSymbols.map((symbol, index) => ({\r\n          symbol,\r\n          price: stockData[index]?.c || 0,\r\n          change: stockData[index]?.d || 0,\r\n          changePercent: stockData[index]?.dp || 0\r\n        })));\r\n\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Initial fetch failed:', err);\r\n        setError('Failed to load initial data. Trying real-time connection...');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchInitialData();\r\n  }, []);\r\n\r\n  // Initialize WebSocket connection\r\n  useEffect(() => {\r\n    if (loading || stocks.length === 0) return;\r\n\r\n    const ws = new WebSocket(`wss://ws.finnhub.io?token=${FINNHUB_API_KEY}`);\r\n    \r\n    ws.onopen = () => {\r\n      console.log('WebSocket connected');\r\n      stocks.forEach(stock => {\r\n        ws.send(JSON.stringify({ type: 'subscribe', symbol: stock.symbol }));\r\n      });\r\n    };\r\n\r\n    ws.onmessage = (e) => {\r\n      const data = JSON.parse(e.data);\r\n      if (data.type === 'trade') {\r\n        setStocks(prevStocks => \r\n          prevStocks.map(stock => \r\n            stock.symbol === data.symbol \r\n              ? { \r\n                  ...stock, \r\n                  price: data.p,\r\n                  change: data.p - (stock.price - stock.change),\r\n                  changePercent: ((data.p - (stock.price - stock.change)) / (stock.price - stock.change) * 100)\r\n                } \r\n              : stock\r\n          )\r\n        );\r\n      }\r\n    };\r\n\r\n    ws.onerror = (err) => {\r\n      console.error('WebSocket error:', err);\r\n      setError('Realtime connection issue');\r\n    };\r\n\r\n    ws.onclose = () => {\r\n      console.log('WebSocket disconnected');\r\n    };\r\n\r\n    setSocket(ws);\r\n\r\n    return () => {\r\n      if (ws) {\r\n        stocks.forEach(stock => {\r\n          ws.send(JSON.stringify({ type: 'unsubscribe', symbol: stock.symbol }));\r\n        });\r\n        ws.close();\r\n      }\r\n    };\r\n  }, [loading, stocks]);\r\n\r\n  const formatNumber = (num) => {\r\n    if (num === undefined || num === null || isNaN(num)) return '--';\r\n    return num.toLocaleString('en-US', { \r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2 \r\n    });\r\n  };\r\n\r\n  const formatChangePercent = (percent) => {\r\n    if (percent === undefined || percent === null || isNaN(percent)) return '--%';\r\n    return `${percent >= 0 ? '+' : ''}${percent.toFixed(2)}%`;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"watchlist-loading\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Loading market data...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"watchlist\">\r\n      <div className=\"watchlist-header\">\r\n        <h2>Stock Watchlist</h2>\r\n        <div className={`connection-status ${error ? 'error' : ''}`}>\r\n          {error || (socket?.readyState === WebSocket.OPEN ? 'ðŸŸ¢ Live' : 'ðŸ”´ Disconnected')}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"stocks-container\">\r\n        <div className=\"stocks-header\">\r\n          <div className=\"header-symbol\">Symbol</div>\r\n          <div className=\"header-price\">Price</div>\r\n          <div className=\"header-change\">Change</div>\r\n          <div className=\"header-change-percent\">% Change</div>\r\n        </div>\r\n        \r\n        <div className=\"stocks-list\">\r\n          {stocks.map((stock, i) => (\r\n            <div key={i} className={`stock-card ${stock.change < 0 ? 'negative' : 'positive'}`}>\r\n              <div className=\"stock-symbol\">\r\n                <span className=\"symbol\">{stock.symbol}</span>\r\n                <span className=\"company-name\">\r\n                  {getCompanyName(stock.symbol)}\r\n                </span>\r\n              </div>\r\n              <div className=\"stock-price\">${formatNumber(stock.price)}</div>\r\n              <div className=\"stock-change\">\r\n                {stock.change >= 0 ? '+' : ''}{formatNumber(stock.change)}\r\n              </div>\r\n              <div className=\"stock-change-percent\">\r\n                {formatChangePercent(stock.changePercent)}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Helper function to get company names\r\nconst getCompanyName = (symbol) => {\r\n  const companyNames = {\r\n    'AAPL': 'Apple',\r\n    'MSFT': 'Microsoft',\r\n    'GOOGL': 'Alphabet',\r\n    'AMZN': 'Amazon',\r\n    'META': 'Meta',\r\n    'TSLA': 'Tesla',\r\n    'NVDA': 'Nvidia',\r\n    'PYPL': 'PayPal',\r\n    'BABA': 'Alibaba',\r\n    'MSTR': 'MicroStrategy',\r\n    'HOOD': 'Robinhood',\r\n    'PTON': 'Peloton',\r\n    'COIN': 'Coinbase',\r\n    'NIO': 'NIO Inc.'\r\n  };\r\n  return companyNames[symbol] || '';\r\n};\r\n\r\nexport default Watchlist;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shagun Khandelwal\\\\zerodha\\\\client\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Check if user is authenticated on initial load\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const res = await axios.get('/api/auth/me');\n        setUser(res.data);\n      } catch (err) {\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n\n  // Register user\n  const register = async formData => {\n    try {\n      setError(null);\n      const res = await axios.post('/api/auth/register', formData, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      });\n      setUser(res.data.user);\n      navigate('/dashboard');\n      return res.data;\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response2, _err$response2$data;\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Registration failed';\n      setError(errorMessage);\n      throw new Error(errorMessage);\n    }\n  };\n\n  // Update the login function\n  const login = async formData => {\n    try {\n      setError(null);\n      const res = await axios.post('/api/auth/login', formData, {\n        withCredentials: true,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setUser(res.data.user);\n      navigate('/dashboard');\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Login failed');\n      throw err; // Re-throw the error to handle it in the component\n    }\n  };\n\n  // Logout user\n  const logout = async () => {\n    try {\n      await axios.get('/logout');\n      setUser(null);\n      navigate('/login');\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Logout failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      error,\n      register,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"d1+zLFPuYCTHzOWgvgMVqQqBcrg=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","navigate","checkAuth","res","get","data","err","register","formData","post","headers","withCredentials","_err$response","_err$response$data","_err$response2","_err$response2$data","errorMessage","response","message","Error","login","_err$response3","_err$response3$data","logout","_err$response4","_err$response4$data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shagun Khandelwal/zerodha/client/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Check if user is authenticated on initial load\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n        const res = await axios.get('/api/auth/me');\r\n        setUser(res.data);\r\n      } catch (err) {\r\n        setUser(null);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  // Register user\r\n const register = async (formData) => {\r\n  try {\r\n    setError(null);\r\n    const res = await axios.post('/api/auth/register', formData, {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      withCredentials: true\r\n    });\r\n    setUser(res.data.user);\r\n    navigate('/dashboard');\r\n    return res.data;\r\n  } catch (err) {\r\n    const errorMessage = err.response?.data?.message || \r\n                        err.response?.data?.error || \r\n                        'Registration failed';\r\n    setError(errorMessage);\r\n    throw new Error(errorMessage);\r\n  }\r\n};\r\n\r\n// Update the login function\r\nconst login = async (formData) => {\r\n  try {\r\n    setError(null);\r\n    const res = await axios.post('/api/auth/login', formData, {\r\n      withCredentials: true,\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    setUser(res.data.user);\r\n    navigate('/dashboard');\r\n  } catch (err) {\r\n    setError(err.response?.data?.message || 'Login failed');\r\n    throw err; // Re-throw the error to handle it in the component\r\n  }\r\n};\r\n\r\n  // Logout user\r\n  const logout = async () => {\r\n    try {\r\n      await axios.get('/logout');\r\n      setUser(null);\r\n      navigate('/login');\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Logout failed');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        loading,\r\n        error,\r\n        register,\r\n        login,\r\n        logout\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shagun Khandelwal\\\\zerodha\\\\client\\\\src\\\\components\\\\AISummary\\\\AISummary.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport './AISummary.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst AISummary = () => {\n  _s();\n  const {\n    symbol\n  } = useParams();\n  const navigate = useNavigate();\n  const [summary, setSummary] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [query, setQuery] = useState('');\n  const [customQueryResult, setCustomQueryResult] = useState(null);\n  const [isCustomQuery, setIsCustomQuery] = useState(false);\n  const [stockSearch, setStockSearch] = useState('');\n  const [chartData, setChartData] = useState(null);\n  const [news, setNews] = useState([]);\n  const [activeTab, setActiveTab] = useState('summary');\n  const [chartSummary, setChartSummary] = useState('');\n  const [newsSummary, setNewsSummary] = useState('');\n  const FINNHUB_API_KEY = 'd17tfrhr01qteuvpuh10d17tfrhr01qteuvpuh1g';\n  const OPENROUTER_API_KEY = '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';\n  const generateAISummary = async (content, context) => {\n    try {\n      const response = await axios.post('https://openrouter.ai/api/v1/chat/completions', {\n        model: \"openai/gpt-3.5-turbo\",\n        messages: [{\n          \"role\": \"system\",\n          \"content\": `You are a financial analyst. Provide a concise 100-150 word summary of the ${context}. \n                          Highlight key points, trends, and important information. Use bullet points for clarity.`\n        }, {\n          \"role\": \"user\",\n          \"content\": content\n        }],\n        max_tokens: 500\n      }, {\n        headers: {\n          'Authorization': `Bearer ${OPENROUTER_API_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      return response.data.choices[0].message.content;\n    } catch (err) {\n      console.error(\"Error generating AI summary:\", err);\n      return \"Could not generate summary. Please try again later.\";\n    }\n  };\n  const fetchStockSummary = async (stockSymbol, customQuestion = '') => {\n    try {\n      setLoading(true);\n      setError(null);\n      setIsCustomQuery(!!customQuestion);\n      const messages = [{\n        \"role\": \"system\",\n        \"content\": \"You are a financial analyst providing accurate stock information. Provide detailed responses with key metrics when available.\"\n      }];\n      if (customQuestion) {\n        messages.push({\n          \"role\": \"user\",\n          \"content\": `${customQuestion} about ${stockSymbol} stock. Provide detailed analysis with numbers if available.`\n        });\n      } else {\n        messages.push({\n          \"role\": \"system\",\n          \"content\": \"Provide a comprehensive analysis including company overview, recent performance, key metrics, and outlook. Keep it between 200-300 words.\"\n        }, {\n          \"role\": \"user\",\n          \"content\": `Provide a detailed analysis of ${stockSymbol} stock. Include important metrics like P/E ratio, market cap, dividend yield if available, and recent performance.`\n        });\n      }\n      const response = await axios.post('https://openrouter.ai/api/v1/chat/completions', {\n        model: \"openai/gpt-3.5-turbo\",\n        messages: messages,\n        max_tokens: 1000\n      }, {\n        headers: {\n          'Authorization': `Bearer ${OPENROUTER_API_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const result = response.data.choices[0].message.content;\n      if (customQuestion) {\n        setCustomQueryResult(result);\n      } else {\n        setSummary(result);\n      }\n      setLoading(false);\n    } catch (err) {\n      console.error(\"Error generating summary:\", err);\n      setError('Failed to generate response. Please try again.');\n      setLoading(false);\n    }\n  };\n  const fetchStockChart = async stockSymbol => {\n    try {\n      var _response$data$c;\n      const to = Math.floor(Date.now() / 1000);\n      const from = to - 24 * 60 * 60; // 1 day data\n\n      const response = await axios.get(`https://finnhub.io/api/v1/stock/candle?symbol=${stockSymbol}&resolution=5&from=${from}&to=${to}&token=${FINNHUB_API_KEY}`);\n      if (response.data.s === 'ok' && ((_response$data$c = response.data.c) === null || _response$data$c === void 0 ? void 0 : _response$data$c.length) > 0) {\n        const labels = response.data.t.map(timestamp => new Date(timestamp * 1000).toLocaleTimeString());\n        const chartData = {\n          labels: labels,\n          datasets: [{\n            label: `${stockSymbol} Price (1D)`,\n            data: response.data.c,\n            borderColor: '#3a80e9',\n            backgroundColor: 'rgba(58, 128, 233, 0.1)',\n            borderWidth: 2,\n            tension: 0.1,\n            fill: true\n          }]\n        };\n        setChartData(chartData);\n\n        // Generate chart summary\n        const priceData = response.data.c;\n        const openPrice = priceData[0];\n        const closePrice = priceData[priceData.length - 1];\n        const highPrice = Math.max(...priceData);\n        const lowPrice = Math.min(...priceData);\n        const volume = response.data.v ? Math.round(response.data.v.reduce((a, b) => a + b, 0) / 1000) : null;\n        const chartContent = `\n          Stock: ${stockSymbol}\n          Time Period: Last trading day\n          Open Price: ${openPrice}\n          Close Price: ${closePrice}\n          High Price: ${highPrice}\n          Low Price: ${lowPrice}\n          ${volume ? `Volume: ${volume}K shares` : ''}\n          Price Change: ${((closePrice - openPrice) / openPrice * 100).toFixed(2)}%\n          Price Range: ${lowPrice} to ${highPrice}\n        `;\n        const summary = await generateAISummary(chartContent, \"price chart data\");\n        setChartSummary(summary);\n      } else {\n        await fetchYahooChart(stockSymbol);\n      }\n    } catch (err) {\n      console.error(\"Error fetching chart data:\", err);\n      await fetchYahooChart(stockSymbol);\n    }\n  };\n  const fetchYahooChart = async stockSymbol => {\n    try {\n      const proxyUrl = 'https://api.allorigins.win/get?url=';\n      const yahooUrl = `https://query1.finance.yahoo.com/v8/finance/chart/${stockSymbol}?range=1d&interval=5m`;\n      const response = await fetch(proxyUrl + encodeURIComponent(yahooUrl));\n      const data = await response.json();\n      const parsedData = JSON.parse(data.contents);\n      if (!parsedData.chart.result) {\n        throw new Error('No chart data available');\n      }\n      const result = parsedData.chart.result[0];\n      const timestamps = result.timestamp;\n      const quotes = result.indicators.quote[0];\n      const chartLabels = timestamps.map(timestamp => new Date(timestamp * 1000).toLocaleTimeString());\n      const chartData = {\n        labels: chartLabels,\n        datasets: [{\n          label: `${stockSymbol} Price (1D)`,\n          data: quotes.close,\n          borderColor: '#3a80e9',\n          backgroundColor: 'rgba(58, 128, 233, 0.1)',\n          borderWidth: 2,\n          tension: 0.1,\n          fill: true\n        }]\n      };\n      setChartData(chartData);\n\n      // Generate chart summary from Yahoo data\n      const priceData = quotes.close.filter(Boolean);\n      if (priceData.length > 0) {\n        const openPrice = priceData[0];\n        const closePrice = priceData[priceData.length - 1];\n        const highPrice = Math.max(...priceData);\n        const lowPrice = Math.min(...priceData);\n        const chartContent = `\n          Stock: ${stockSymbol}\n          Time Period: Last trading day (Yahoo Finance)\n          Open Price: ${openPrice}\n          Close Price: ${closePrice}\n          High Price: ${highPrice}\n          Low Price: ${lowPrice}\n          Price Change: ${((closePrice - openPrice) / openPrice * 100).toFixed(2)}%\n          Price Range: ${lowPrice} to ${highPrice}\n        `;\n        const summary = await generateAISummary(chartContent, \"price chart data\");\n        setChartSummary(summary);\n      }\n    } catch (err) {\n      console.error(\"Error fetching Yahoo Finance data:\", err);\n      setChartData(null);\n      setChartSummary(\"Could not generate chart summary due to data loading issues.\");\n    }\n  };\n  const fetchStockNews = async stockSymbol => {\n    try {\n      const response = await axios.get(`https://finnhub.io/api/v1/company-news?symbol=${stockSymbol}&from=${new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]}&to=${new Date().toISOString().split('T')[0]}&token=${FINNHUB_API_KEY}`);\n\n      // Filter out news without image or with \"Removed\" headline\n      const filteredNews = response.data.filter(item => item.image && item.headline && !item.headline.includes('Removed:')).slice(0, 5); // Limit to 5 news items\n\n      setNews(filteredNews);\n\n      // Generate news summary\n      if (filteredNews.length > 0) {\n        const newsContent = filteredNews.map(item => `Headline: ${item.headline}\\nSummary: ${item.summary || 'No summary available'}\\nSource: ${item.source}\\n`).join('\\n');\n        const summary = await generateAISummary(`Recent news about ${stockSymbol}:\\n${newsContent}`, \"market news\");\n        setNewsSummary(summary);\n      } else {\n        setNewsSummary(\"No recent news available to summarize.\");\n      }\n    } catch (err) {\n      console.error(\"Error fetching news:\", err);\n      setNews([]);\n      setNewsSummary(\"Could not generate news summary due to data loading issues.\");\n    }\n  };\n  useEffect(() => {\n    if (symbol) {\n      fetchStockSummary(symbol);\n      fetchStockChart(symbol);\n      fetchStockNews(symbol);\n    }\n  }, [symbol]);\n\n  // ... (keep the rest of your existing functions handleQuerySubmit, handleStockSearch)\n\n  // If no symbol is selected (direct access to /ai-summary)\n  if (!symbol) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-summary-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-summary-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'summary' ? 'active' : ''}`,\n        onClick: () => setActiveTab('summary'),\n        children: \"Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'chart' ? 'active' : ''}`,\n        onClick: () => setActiveTab('chart'),\n        children: \"Price Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab-button ${activeTab === 'news' ? 'active' : ''}`,\n        onClick: () => setActiveTab('news'),\n        children: \"Market News\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-summary-content\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Generating AI-powered response...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.reload(),\n          className: \"retry-button\",\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }, this) : isCustomQuery ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"query-result\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Response to your query:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-text\",\n          children: customQueryResult.split('\\n').map((paragraph, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: paragraph\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsCustomQuery(false),\n          className: \"show-original-button\",\n          children: \"Show Original Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [activeTab === 'summary' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Comprehensive Analysis of \", symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-text\",\n            children: summary.split('\\n').map((paragraph, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: paragraph\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 15\n        }, this), activeTab === 'chart' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [symbol, \" 1-Day Price Chart\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 17\n          }, this), chartData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container\",\n              children: /*#__PURE__*/_jsxDEV(Line, {\n                data: chartData,\n                options: {\n                  responsive: true,\n                  plugins: {\n                    legend: {\n                      position: 'top'\n                    },\n                    tooltip: {\n                      mode: 'index',\n                      intersect: false\n                    }\n                  },\n                  scales: {\n                    x: {\n                      display: true,\n                      title: {\n                        display: true,\n                        text: 'Time'\n                      }\n                    },\n                    y: {\n                      display: true,\n                      title: {\n                        display: true,\n                        text: 'Price (USD)'\n                      }\n                    }\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-summary\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Chart Analysis Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-text\",\n                children: chartSummary.split('\\n').map((paragraph, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: paragraph\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-data\",\n            children: \"Could not load chart data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 15\n        }, this), activeTab === 'news' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"news-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Latest News About \", symbol]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 17\n          }, this), news.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"news-summary-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"News Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-text\",\n                children: newsSummary.split('\\n').map((paragraph, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: paragraph\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"news-grid\",\n              children: news.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"news-card\",\n                children: [item.image && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"news-image\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: item.image,\n                    alt: item.headline\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 460,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"news-content\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: item.url,\n                      target: \"_blank\",\n                      rel: \"noopener noreferrer\",\n                      children: item.headline\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 465,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 464,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"news-source\",\n                    children: item.source\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"news-summary\",\n                    children: item.summary || 'No summary available'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 470,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"news-date\",\n                    children: new Date(item.datetime * 1000).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 473,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 27\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-data\",\n            children: \"No recent news found for this stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 5\n  }, this);\n};\n_s(AISummary, \"ArEsD+MzAkepWKDXq4sZOVbLccA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AISummary;\nexport default AISummary;\nvar _c;\n$RefreshReg$(_c, \"AISummary\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","register","AISummary","_s","symbol","navigate","summary","setSummary","loading","setLoading","error","setError","query","setQuery","customQueryResult","setCustomQueryResult","isCustomQuery","setIsCustomQuery","stockSearch","setStockSearch","chartData","setChartData","news","setNews","activeTab","setActiveTab","chartSummary","setChartSummary","newsSummary","setNewsSummary","FINNHUB_API_KEY","OPENROUTER_API_KEY","generateAISummary","content","context","response","post","model","messages","max_tokens","headers","data","choices","message","err","console","fetchStockSummary","stockSymbol","customQuestion","push","result","fetchStockChart","_response$data$c","to","Math","floor","Date","now","from","get","s","c","length","labels","t","map","timestamp","toLocaleTimeString","datasets","label","borderColor","backgroundColor","borderWidth","tension","fill","priceData","openPrice","closePrice","highPrice","max","lowPrice","min","volume","v","round","reduce","a","b","chartContent","toFixed","fetchYahooChart","proxyUrl","yahooUrl","fetch","encodeURIComponent","json","parsedData","JSON","parse","contents","chart","Error","timestamps","quotes","indicators","quote","chartLabels","close","filter","Boolean","fetchStockNews","toISOString","split","filteredNews","item","image","headline","includes","slice","newsContent","source","join","className","fileName","_jsxFileName","lineNumber","columnNumber","children","onClick","window","location","reload","paragraph","i","options","responsive","plugins","legend","position","tooltip","mode","intersect","scales","x","display","title","text","y","index","src","alt","href","url","target","rel","datetime","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Shagun Khandelwal/zerodha/client/src/components/AISummary/AISummary.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\nimport './AISummary.css';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst AISummary = () => {\r\n  const { symbol } = useParams();\r\n  const navigate = useNavigate();\r\n  const [summary, setSummary] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [query, setQuery] = useState('');\r\n  const [customQueryResult, setCustomQueryResult] = useState(null);\r\n  const [isCustomQuery, setIsCustomQuery] = useState(false);\r\n  const [stockSearch, setStockSearch] = useState('');\r\n  const [chartData, setChartData] = useState(null);\r\n  const [news, setNews] = useState([]);\r\n  const [activeTab, setActiveTab] = useState('summary');\r\n  const [chartSummary, setChartSummary] = useState('');\r\n  const [newsSummary, setNewsSummary] = useState('');\r\n\r\n  const FINNHUB_API_KEY = 'd17tfrhr01qteuvpuh10d17tfrhr01qteuvpuh1g';\r\n  const OPENROUTER_API_KEY = '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';\r\n\r\n  const generateAISummary = async (content, context) => {\r\n    try {\r\n      const response = await axios.post(\r\n        'https://openrouter.ai/api/v1/chat/completions',\r\n        {\r\n          model: \"openai/gpt-3.5-turbo\",\r\n          messages: [\r\n            { \r\n              \"role\": \"system\", \r\n              \"content\": `You are a financial analyst. Provide a concise 100-150 word summary of the ${context}. \r\n                          Highlight key points, trends, and important information. Use bullet points for clarity.`\r\n            },\r\n            { \r\n              \"role\": \"user\", \r\n              \"content\": content \r\n            }\r\n          ],\r\n          max_tokens: 500\r\n        },\r\n        {\r\n          headers: {\r\n            'Authorization': `Bearer ${OPENROUTER_API_KEY}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }\r\n      );\r\n      return response.data.choices[0].message.content;\r\n    } catch (err) {\r\n      console.error(\"Error generating AI summary:\", err);\r\n      return \"Could not generate summary. Please try again later.\";\r\n    }\r\n  };\r\n\r\n  const fetchStockSummary = async (stockSymbol, customQuestion = '') => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      setIsCustomQuery(!!customQuestion);\r\n\r\n      const messages = [\r\n        { \r\n          \"role\": \"system\", \r\n          \"content\": \"You are a financial analyst providing accurate stock information. Provide detailed responses with key metrics when available.\" \r\n        }\r\n      ];\r\n\r\n      if (customQuestion) {\r\n        messages.push({\r\n          \"role\": \"user\",\r\n          \"content\": `${customQuestion} about ${stockSymbol} stock. Provide detailed analysis with numbers if available.`\r\n        });\r\n      } else {\r\n        messages.push(\r\n          {\r\n            \"role\": \"system\",\r\n            \"content\": \"Provide a comprehensive analysis including company overview, recent performance, key metrics, and outlook. Keep it between 200-300 words.\"\r\n          },\r\n          {\r\n            \"role\": \"user\",\r\n            \"content\": `Provide a detailed analysis of ${stockSymbol} stock. Include important metrics like P/E ratio, market cap, dividend yield if available, and recent performance.`\r\n          }\r\n        );\r\n      }\r\n\r\n      const response = await axios.post(\r\n        'https://openrouter.ai/api/v1/chat/completions',\r\n        {\r\n          model: \"openai/gpt-3.5-turbo\",\r\n          messages: messages,\r\n          max_tokens: 1000\r\n        },\r\n        {\r\n          headers: {\r\n            'Authorization': `Bearer ${OPENROUTER_API_KEY}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }\r\n      );\r\n\r\n      const result = response.data.choices[0].message.content;\r\n      \r\n      if (customQuestion) {\r\n        setCustomQueryResult(result);\r\n      } else {\r\n        setSummary(result);\r\n      }\r\n      \r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error(\"Error generating summary:\", err);\r\n      setError('Failed to generate response. Please try again.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchStockChart = async (stockSymbol) => {\r\n    try {\r\n      const to = Math.floor(Date.now() / 1000);\r\n      const from = to - (24 * 60 * 60); // 1 day data\r\n      \r\n      const response = await axios.get(\r\n        `https://finnhub.io/api/v1/stock/candle?symbol=${stockSymbol}&resolution=5&from=${from}&to=${to}&token=${FINNHUB_API_KEY}`\r\n      );\r\n      \r\n      if (response.data.s === 'ok' && response.data.c?.length > 0) {\r\n        const labels = response.data.t.map(timestamp => \r\n          new Date(timestamp * 1000).toLocaleTimeString()\r\n        );\r\n        \r\n        const chartData = {\r\n          labels: labels,\r\n          datasets: [\r\n            {\r\n              label: `${stockSymbol} Price (1D)`,\r\n              data: response.data.c,\r\n              borderColor: '#3a80e9',\r\n              backgroundColor: 'rgba(58, 128, 233, 0.1)',\r\n              borderWidth: 2,\r\n              tension: 0.1,\r\n              fill: true\r\n            }\r\n          ]\r\n        };\r\n        \r\n        setChartData(chartData);\r\n        \r\n        // Generate chart summary\r\n        const priceData = response.data.c;\r\n        const openPrice = priceData[0];\r\n        const closePrice = priceData[priceData.length - 1];\r\n        const highPrice = Math.max(...priceData);\r\n        const lowPrice = Math.min(...priceData);\r\n        const volume = response.data.v ? Math.round(response.data.v.reduce((a, b) => a + b, 0) / 1000) : null;\r\n        \r\n        const chartContent = `\r\n          Stock: ${stockSymbol}\r\n          Time Period: Last trading day\r\n          Open Price: ${openPrice}\r\n          Close Price: ${closePrice}\r\n          High Price: ${highPrice}\r\n          Low Price: ${lowPrice}\r\n          ${volume ? `Volume: ${volume}K shares` : ''}\r\n          Price Change: ${((closePrice - openPrice) / openPrice * 100).toFixed(2)}%\r\n          Price Range: ${lowPrice} to ${highPrice}\r\n        `;\r\n        \r\n        const summary = await generateAISummary(chartContent, \"price chart data\");\r\n        setChartSummary(summary);\r\n      } else {\r\n        await fetchYahooChart(stockSymbol);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching chart data:\", err);\r\n      await fetchYahooChart(stockSymbol);\r\n    }\r\n  };\r\n\r\n  const fetchYahooChart = async (stockSymbol) => {\r\n    try {\r\n      const proxyUrl = 'https://api.allorigins.win/get?url=';\r\n      const yahooUrl = `https://query1.finance.yahoo.com/v8/finance/chart/${stockSymbol}?range=1d&interval=5m`;\r\n      \r\n      const response = await fetch(proxyUrl + encodeURIComponent(yahooUrl));\r\n      const data = await response.json();\r\n      const parsedData = JSON.parse(data.contents);\r\n      \r\n      if (!parsedData.chart.result) {\r\n        throw new Error('No chart data available');\r\n      }\r\n      \r\n      const result = parsedData.chart.result[0];\r\n      const timestamps = result.timestamp;\r\n      const quotes = result.indicators.quote[0];\r\n      \r\n      const chartLabels = timestamps.map(timestamp => \r\n        new Date(timestamp * 1000).toLocaleTimeString()\r\n      );\r\n      \r\n      const chartData = {\r\n        labels: chartLabels,\r\n        datasets: [\r\n          {\r\n            label: `${stockSymbol} Price (1D)`,\r\n            data: quotes.close,\r\n            borderColor: '#3a80e9',\r\n            backgroundColor: 'rgba(58, 128, 233, 0.1)',\r\n            borderWidth: 2,\r\n            tension: 0.1,\r\n            fill: true\r\n          }\r\n        ]\r\n      };\r\n      \r\n      setChartData(chartData);\r\n      \r\n      // Generate chart summary from Yahoo data\r\n      const priceData = quotes.close.filter(Boolean);\r\n      if (priceData.length > 0) {\r\n        const openPrice = priceData[0];\r\n        const closePrice = priceData[priceData.length - 1];\r\n        const highPrice = Math.max(...priceData);\r\n        const lowPrice = Math.min(...priceData);\r\n        \r\n        const chartContent = `\r\n          Stock: ${stockSymbol}\r\n          Time Period: Last trading day (Yahoo Finance)\r\n          Open Price: ${openPrice}\r\n          Close Price: ${closePrice}\r\n          High Price: ${highPrice}\r\n          Low Price: ${lowPrice}\r\n          Price Change: ${((closePrice - openPrice) / openPrice * 100).toFixed(2)}%\r\n          Price Range: ${lowPrice} to ${highPrice}\r\n        `;\r\n        \r\n        const summary = await generateAISummary(chartContent, \"price chart data\");\r\n        setChartSummary(summary);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching Yahoo Finance data:\", err);\r\n      setChartData(null);\r\n      setChartSummary(\"Could not generate chart summary due to data loading issues.\");\r\n    }\r\n  };\r\n\r\n  const fetchStockNews = async (stockSymbol) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://finnhub.io/api/v1/company-news?symbol=${stockSymbol}&from=${new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]}&to=${new Date().toISOString().split('T')[0]}&token=${FINNHUB_API_KEY}`\r\n      );\r\n      \r\n      // Filter out news without image or with \"Removed\" headline\r\n      const filteredNews = response.data\r\n        .filter(item => item.image && item.headline && !item.headline.includes('Removed:'))\r\n        .slice(0, 5); // Limit to 5 news items\r\n      \r\n      setNews(filteredNews);\r\n      \r\n      // Generate news summary\r\n      if (filteredNews.length > 0) {\r\n        const newsContent = filteredNews.map(item => \r\n          `Headline: ${item.headline}\\nSummary: ${item.summary || 'No summary available'}\\nSource: ${item.source}\\n`\r\n        ).join('\\n');\r\n        \r\n        const summary = await generateAISummary(\r\n          `Recent news about ${stockSymbol}:\\n${newsContent}`,\r\n          \"market news\"\r\n        );\r\n        setNewsSummary(summary);\r\n      } else {\r\n        setNewsSummary(\"No recent news available to summarize.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching news:\", err);\r\n      setNews([]);\r\n      setNewsSummary(\"Could not generate news summary due to data loading issues.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (symbol) {\r\n      fetchStockSummary(symbol);\r\n      fetchStockChart(symbol);\r\n      fetchStockNews(symbol);\r\n    }\r\n  }, [symbol]);\r\n\r\n  // ... (keep the rest of your existing functions handleQuerySubmit, handleStockSearch)\r\n\r\n  // If no symbol is selected (direct access to /ai-summary)\r\n  if (!symbol) {\r\n    return (\r\n      <div className=\"ai-summary-container\">\r\n        {/* Keep the existing search view */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"ai-summary-container\">\r\n      {/* Keep the existing header and search section */}\r\n\r\n      <div className=\"tabs\">\r\n        <button \r\n          className={`tab-button ${activeTab === 'summary' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('summary')}\r\n        >\r\n          Summary\r\n        </button>\r\n        <button \r\n          className={`tab-button ${activeTab === 'chart' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('chart')}\r\n        >\r\n          Price Chart\r\n        </button>\r\n        <button \r\n          className={`tab-button ${activeTab === 'news' ? 'active' : ''}`}\r\n          onClick={() => setActiveTab('news')}\r\n        >\r\n          Market News\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"ai-summary-content\">\r\n        {loading ? (\r\n          <div className=\"loading-spinner\">\r\n            <div className=\"spinner\"></div>\r\n            <p>Generating AI-powered response...</p>\r\n          </div>\r\n        ) : error ? (\r\n          <div className=\"error-message\">\r\n            <p>{error}</p>\r\n            <button onClick={() => window.location.reload()} className=\"retry-button\">\r\n              Retry\r\n            </button>\r\n          </div>\r\n        ) : isCustomQuery ? (\r\n          <div className=\"query-result\">\r\n            <h3>Response to your query:</h3>\r\n            <div className=\"result-text\">\r\n              {customQueryResult.split('\\n').map((paragraph, i) => (\r\n                <p key={i}>{paragraph}</p>\r\n              ))}\r\n            </div>\r\n            <button \r\n              onClick={() => setIsCustomQuery(false)} \r\n              className=\"show-original-button\"\r\n            >\r\n              Show Original Analysis\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {activeTab === 'summary' && (\r\n              <div className=\"summary-section\">\r\n                <h3>Comprehensive Analysis of {symbol}</h3>\r\n                <div className=\"summary-text\">\r\n                  {summary.split('\\n').map((paragraph, i) => (\r\n                    <p key={i}>{paragraph}</p>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'chart' && (\r\n              <div className=\"chart-section\">\r\n                <h3>{symbol} 1-Day Price Chart</h3>\r\n                {chartData ? (\r\n                  <>\r\n                    <div className=\"chart-container\">\r\n                      <Line \r\n                        data={chartData} \r\n                        options={{\r\n                          responsive: true,\r\n                          plugins: {\r\n                            legend: {\r\n                              position: 'top',\r\n                            },\r\n                            tooltip: {\r\n                              mode: 'index',\r\n                              intersect: false,\r\n                            }\r\n                          },\r\n                          scales: {\r\n                            x: {\r\n                              display: true,\r\n                              title: {\r\n                                display: true,\r\n                                text: 'Time'\r\n                              }\r\n                            },\r\n                            y: {\r\n                              display: true,\r\n                              title: {\r\n                                display: true,\r\n                                text: 'Price (USD)'\r\n                              }\r\n                            }\r\n                          }\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"chart-summary\">\r\n                      <h4>Chart Analysis Summary</h4>\r\n                      <div className=\"summary-text\">\r\n                        {chartSummary.split('\\n').map((paragraph, i) => (\r\n                          <p key={i}>{paragraph}</p>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <p className=\"no-data\">Could not load chart data</p>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {activeTab === 'news' && (\r\n              <div className=\"news-section\">\r\n                <h3>Latest News About {symbol}</h3>\r\n                {news.length > 0 ? (\r\n                  <>\r\n                    <div className=\"news-summary-section\">\r\n                      <h4>News Summary</h4>\r\n                      <div className=\"summary-text\">\r\n                        {newsSummary.split('\\n').map((paragraph, i) => (\r\n                          <p key={i}>{paragraph}</p>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"news-grid\">\r\n                      {news.map((item, index) => (\r\n                        <div key={index} className=\"news-card\">\r\n                          {item.image && (\r\n                            <div className=\"news-image\">\r\n                              <img src={item.image} alt={item.headline} />\r\n                            </div>\r\n                          )}\r\n                          <div className=\"news-content\">\r\n                            <h4>\r\n                              <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                {item.headline}\r\n                              </a>\r\n                            </h4>\r\n                            <p className=\"news-source\">{item.source}</p>\r\n                            <p className=\"news-summary\">\r\n                              {item.summary || 'No summary available'}\r\n                            </p>\r\n                            <p className=\"news-date\">\r\n                              {new Date(item.datetime * 1000).toLocaleDateString()}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <p className=\"no-data\">No recent news found for this stock</p>\r\n                )}\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AISummary;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shagun Khandelwal\\\\zerodha\\\\client\\\\src\\\\components\\\\Positions\\\\Positions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../../context/AuthContext';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst FINNHUB_API_KEY = 'd17tfrhr01qteuvpuh10d17tfrhr01qteuvpuh1g';\nconst Positions = () => {\n  _s();\n  const {\n    user,\n    isAuthenticated\n  } = useAuth();\n  const [positions, setPositions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [marketPrices, setMarketPrices] = useState({});\n  const [chartData, setChartData] = useState(null);\n  const priceUpdateInterval = useRef(null);\n\n  // Calculate net P&L\n  const calculateNetPnL = () => {\n    return positions.reduce((total, position) => {\n      const currentPrice = marketPrices[position.symbol] || position.ltp || position.avgPrice;\n      return total + (currentPrice - position.avgPrice) * position.quantity;\n    }, 0);\n  };\n\n  // Fetch historical data for chart\n  const fetchHistoricalData = async symbols => {\n    try {\n      const to = Math.floor(Date.now() / 1000);\n      const from = to - 30 * 24 * 60 * 60; // 30 days data\n\n      const historicalPromises = symbols.map(symbol => axios.get(`https://finnhub.io/api/v1/stock/candle?symbol=${symbol}&resolution=D&from=${from}&to=${to}&token=${FINNHUB_API_KEY}`));\n      const responses = await Promise.all(historicalPromises);\n\n      // Process data for chart\n      const datasets = [];\n      const labels = [];\n      responses.forEach((response, index) => {\n        var _response$data$t;\n        if (response.data.s === 'ok' && ((_response$data$t = response.data.t) === null || _response$data$t === void 0 ? void 0 : _response$data$t.length) > 0) {\n          const symbol = symbols[index];\n          const position = positions.find(p => p.symbol === symbol);\n\n          // Use first response to set labels (dates)\n          if (labels.length === 0) {\n            labels.push(...response.data.t.map(timestamp => new Date(timestamp * 1000).toLocaleDateString()));\n          }\n\n          // Add dataset for this symbol\n          datasets.push({\n            label: symbol,\n            data: response.data.c,\n            borderColor: `#${Math.floor(Math.random() * 16777215).toString(16)}`,\n            backgroundColor: 'rgba(255, 255, 255, 0.1)',\n            borderWidth: 2,\n            tension: 0.1\n          });\n        }\n      });\n      setChartData({\n        labels,\n        datasets\n      });\n    } catch (err) {\n      console.error('Error fetching historical data:', err);\n    }\n  };\n\n  // Fetch live prices for all positions\n  const fetchLivePrices = async symbols => {\n    try {\n      const pricePromises = symbols.map(symbol => axios.get(`https://finnhub.io/api/v1/quote?symbol=${symbol}&token=${FINNHUB_API_KEY}`));\n      const responses = await Promise.all(pricePromises);\n      const newPrices = {};\n      responses.forEach((response, index) => {\n        if (response.data && response.data.c) {\n          newPrices[symbols[index]] = response.data.c; // Current price\n        }\n      });\n      setMarketPrices(prev => ({\n        ...prev,\n        ...newPrices\n      }));\n    } catch (err) {\n      console.error('Error fetching live prices:', err);\n    }\n  };\n\n  // Fetch initial positions data\n  useEffect(() => {\n    const fetchPositions = async () => {\n      if (!isAuthenticated) {\n        setLoading(false);\n        return;\n      }\n      try {\n        var _JSON$parse;\n        const token = (_JSON$parse = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.token;\n        if (!token) throw new Error('No authentication token found');\n        const response = await axios.get('/api/auth/user', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (response.data.success) {\n          const userPositions = response.data.user.positions || [];\n          setPositions(userPositions);\n\n          // Initialize market prices with current LTP values\n          const initialPrices = {};\n          userPositions.forEach(pos => {\n            initialPrices[pos.symbol] = pos.ltp || pos.avgPrice;\n          });\n          setMarketPrices(initialPrices);\n\n          // Fetch live prices and historical data for all positions\n          if (userPositions.length > 0) {\n            const symbols = userPositions.map(p => p.symbol);\n            await fetchLivePrices(symbols);\n            await fetchHistoricalData(symbols);\n\n            // Set up interval for periodic price updates (every 10 seconds)\n            priceUpdateInterval.current = setInterval(() => {\n              fetchLivePrices(symbols);\n            }, 10000);\n          }\n        }\n      } catch (err) {\n        console.error('Error fetching positions:', err);\n        setError('Failed to load positions. Please try again.');\n        if (user !== null && user !== void 0 && user.positions) {\n          setPositions([...user.positions]);\n          const initialPrices = {};\n          user.positions.forEach(pos => {\n            initialPrices[pos.symbol] = pos.ltp || pos.avgPrice;\n          });\n          setMarketPrices(initialPrices);\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPositions();\n    return () => {\n      // Cleanup interval\n      if (priceUpdateInterval.current) {\n        clearInterval(priceUpdateInterval.current);\n      }\n    };\n  }, [user, isAuthenticated]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading positions...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 21\n  }, this);\n  const netPnL = calculateNetPnL();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"positions\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connection-status\",\n      children: \"Market Data: \\uD83D\\uDD34 Live (10s refresh)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Positions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `net-pnl ${netPnL >= 0 ? 'positive' : 'negative'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Net Profit & Loss\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pnl-value\",\n        children: [\"\\u20B9\", netPnL.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pnl-percent\",\n        children: positions.length > 0 ? `${(netPnL / positions.reduce((total, pos) => total + pos.avgPrice * pos.quantity, 0) * 100).toFixed(2)}%` : '0.00%'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), positions && positions.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"positions-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Instrument\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Qty.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Avg.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"LTP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"P&L\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Chg.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: positions.map(position => {\n              const currentPrice = marketPrices[position.symbol] || position.ltp || position.avgPrice;\n              const pnl = (currentPrice - position.avgPrice) * position.quantity;\n              const change = position.avgPrice ? (currentPrice - position.avgPrice) / position.avgPrice * 100 : 0;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: position.product || 'CNC'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: position.symbol || 'N/A'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: position.quantity || 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"\\u20B9\", (position.avgPrice || 0).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\"\\u20B9\", currentPrice.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: pnl >= 0 ? 'positive' : 'negative',\n                  children: [\"\\u20B9\", pnl.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: change >= 0 ? 'positive' : 'negative',\n                  children: [change.toFixed(2), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 23\n                }, this)]\n              }, `${position.symbol}-${position.product}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"positions-chart\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Positions Performance (30 Days)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), chartData ? /*#__PURE__*/_jsxDEV(Line, {\n          data: chartData,\n          options: {\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'top'\n              },\n              tooltip: {\n                mode: 'index',\n                intersect: false\n              }\n            },\n            scales: {\n              y: {\n                beginAtZero: false,\n                ticks: {\n                  callback: function (value) {\n                    return '₹' + value.toFixed(2);\n                  }\n                }\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Loading chart data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-positions\",\n      children: \"You don't have any open positions.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n_s(Positions, \"hfFS+ZdVK2NCpUId1uiQfhQnCNE=\", false, function () {\n  return [useAuth];\n});\n_c = Positions;\nexport default Positions;\nvar _c;\n$RefreshReg$(_c, \"Positions\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuth","axios","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","register","FINNHUB_API_KEY","Positions","_s","user","isAuthenticated","positions","setPositions","loading","setLoading","error","setError","marketPrices","setMarketPrices","chartData","setChartData","priceUpdateInterval","calculateNetPnL","reduce","total","position","currentPrice","symbol","ltp","avgPrice","quantity","fetchHistoricalData","symbols","to","Math","floor","Date","now","from","historicalPromises","map","get","responses","Promise","all","datasets","labels","forEach","response","index","_response$data$t","data","s","t","length","find","p","push","timestamp","toLocaleDateString","label","c","borderColor","random","toString","backgroundColor","borderWidth","tension","err","console","fetchLivePrices","pricePromises","newPrices","prev","fetchPositions","_JSON$parse","token","JSON","parse","localStorage","getItem","Error","headers","success","userPositions","initialPrices","pos","current","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","netPnL","toFixed","pnl","change","product","options","responsive","plugins","legend","tooltip","mode","intersect","scales","y","beginAtZero","ticks","callback","value","_c","$RefreshReg$"],"sources":["C:/Users/Shagun Khandelwal/zerodha/client/src/components/Positions/Positions.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\n\r\n// Register ChartJS components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst FINNHUB_API_KEY = 'd17tfrhr01qteuvpuh10d17tfrhr01qteuvpuh1g';\r\n\r\nconst Positions = () => {\r\n  const { user, isAuthenticated } = useAuth();\r\n  const [positions, setPositions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [marketPrices, setMarketPrices] = useState({});\r\n  const [chartData, setChartData] = useState(null);\r\n  const priceUpdateInterval = useRef(null);\r\n\r\n  // Calculate net P&L\r\n  const calculateNetPnL = () => {\r\n    return positions.reduce((total, position) => {\r\n      const currentPrice = marketPrices[position.symbol] || position.ltp || position.avgPrice;\r\n      return total + ((currentPrice - position.avgPrice) * position.quantity);\r\n    }, 0);\r\n  };\r\n\r\n  // Fetch historical data for chart\r\n  const fetchHistoricalData = async (symbols) => {\r\n    try {\r\n      const to = Math.floor(Date.now() / 1000);\r\n      const from = to - (30 * 24 * 60 * 60); // 30 days data\r\n      \r\n      const historicalPromises = symbols.map(symbol => \r\n        axios.get(`https://finnhub.io/api/v1/stock/candle?symbol=${symbol}&resolution=D&from=${from}&to=${to}&token=${FINNHUB_API_KEY}`)\r\n      );\r\n\r\n      const responses = await Promise.all(historicalPromises);\r\n      \r\n      // Process data for chart\r\n      const datasets = [];\r\n      const labels = [];\r\n      \r\n      responses.forEach((response, index) => {\r\n        if (response.data.s === 'ok' && response.data.t?.length > 0) {\r\n          const symbol = symbols[index];\r\n          const position = positions.find(p => p.symbol === symbol);\r\n          \r\n          // Use first response to set labels (dates)\r\n          if (labels.length === 0) {\r\n            labels.push(...response.data.t.map(timestamp => \r\n              new Date(timestamp * 1000).toLocaleDateString()\r\n            ));\r\n          }\r\n          \r\n          // Add dataset for this symbol\r\n          datasets.push({\r\n            label: symbol,\r\n            data: response.data.c,\r\n            borderColor: `#${Math.floor(Math.random()*16777215).toString(16)}`,\r\n            backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n            borderWidth: 2,\r\n            tension: 0.1\r\n          });\r\n        }\r\n      });\r\n\r\n      setChartData({\r\n        labels,\r\n        datasets\r\n      });\r\n    } catch (err) {\r\n      console.error('Error fetching historical data:', err);\r\n    }\r\n  };\r\n\r\n  // Fetch live prices for all positions\r\n  const fetchLivePrices = async (symbols) => {\r\n    try {\r\n      const pricePromises = symbols.map(symbol => \r\n        axios.get(`https://finnhub.io/api/v1/quote?symbol=${symbol}&token=${FINNHUB_API_KEY}`)\r\n      );\r\n      \r\n      const responses = await Promise.all(pricePromises);\r\n      const newPrices = {};\r\n      \r\n      responses.forEach((response, index) => {\r\n        if (response.data && response.data.c) {\r\n          newPrices[symbols[index]] = response.data.c; // Current price\r\n        }\r\n      });\r\n      \r\n      setMarketPrices(prev => ({ ...prev, ...newPrices }));\r\n    } catch (err) {\r\n      console.error('Error fetching live prices:', err);\r\n    }\r\n  };\r\n\r\n  // Fetch initial positions data\r\n  useEffect(() => {\r\n    const fetchPositions = async () => {\r\n      if (!isAuthenticated) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const token = JSON.parse(localStorage.getItem('user'))?.token;\r\n        if (!token) throw new Error('No authentication token found');\r\n\r\n        const response = await axios.get('/api/auth/user', {\r\n          headers: { 'Authorization': `Bearer ${token}` }\r\n        });\r\n\r\n        if (response.data.success) {\r\n          const userPositions = response.data.user.positions || [];\r\n          setPositions(userPositions);\r\n          \r\n          // Initialize market prices with current LTP values\r\n          const initialPrices = {};\r\n          userPositions.forEach(pos => {\r\n            initialPrices[pos.symbol] = pos.ltp || pos.avgPrice;\r\n          });\r\n          setMarketPrices(initialPrices);\r\n\r\n          // Fetch live prices and historical data for all positions\r\n          if (userPositions.length > 0) {\r\n            const symbols = userPositions.map(p => p.symbol);\r\n            await fetchLivePrices(symbols);\r\n            await fetchHistoricalData(symbols);\r\n            \r\n            // Set up interval for periodic price updates (every 10 seconds)\r\n            priceUpdateInterval.current = setInterval(() => {\r\n              fetchLivePrices(symbols);\r\n            }, 10000);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching positions:', err);\r\n        setError('Failed to load positions. Please try again.');\r\n        if (user?.positions) {\r\n          setPositions([...user.positions]);\r\n          const initialPrices = {};\r\n          user.positions.forEach(pos => {\r\n            initialPrices[pos.symbol] = pos.ltp || pos.avgPrice;\r\n          });\r\n          setMarketPrices(initialPrices);\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPositions();\r\n\r\n    return () => {\r\n      // Cleanup interval\r\n      if (priceUpdateInterval.current) {\r\n        clearInterval(priceUpdateInterval.current);\r\n      }\r\n    };\r\n  }, [user, isAuthenticated]);\r\n\r\n  if (loading) return <div className=\"loading\">Loading positions...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n\r\n  const netPnL = calculateNetPnL();\r\n\r\n  return (\r\n    <div className=\"positions\">\r\n      <div className=\"connection-status\">\r\n        Market Data: 🔴 Live (10s refresh)\r\n      </div>\r\n      \r\n      <h2>Your Positions</h2>\r\n      \r\n      {/* Net P&L Summary */}\r\n      <div className={`net-pnl ${netPnL >= 0 ? 'positive' : 'negative'}`}>\r\n        <h3>Net Profit & Loss</h3>\r\n        <div className=\"pnl-value\">₹{netPnL.toFixed(2)}</div>\r\n        <div className=\"pnl-percent\">\r\n          {positions.length > 0 ? \r\n            `${((netPnL / positions.reduce((total, pos) => total + (pos.avgPrice * pos.quantity), 0)) * 100).toFixed(2)}%` : \r\n            '0.00%'}\r\n        </div>\r\n      </div>\r\n      \r\n      {positions && positions.length > 0 ? (\r\n        <>\r\n          <div className=\"table-responsive\">\r\n            <table className=\"positions-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Product</th>\r\n                  <th>Instrument</th>\r\n                  <th>Qty.</th>\r\n                  <th>Avg.</th>\r\n                  <th>LTP</th>\r\n                  <th>P&L</th>\r\n                  <th>Chg.</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {positions.map((position) => {\r\n                  const currentPrice = marketPrices[position.symbol] || position.ltp || position.avgPrice;\r\n                  const pnl = (currentPrice - position.avgPrice) * position.quantity;\r\n                  const change = position.avgPrice \r\n                    ? ((currentPrice - position.avgPrice) / position.avgPrice) * 100\r\n                    : 0;\r\n                  \r\n                  return (\r\n                    <tr key={`${position.symbol}-${position.product}`}>\r\n                      <td>{position.product || 'CNC'}</td>\r\n                      <td>{position.symbol || 'N/A'}</td>\r\n                      <td>{position.quantity || 0}</td>\r\n                      <td>₹{(position.avgPrice || 0).toFixed(2)}</td>\r\n                      <td>₹{currentPrice.toFixed(2)}</td>\r\n                      <td className={pnl >= 0 ? 'positive' : 'negative'}>\r\n                        ₹{pnl.toFixed(2)}\r\n                      </td>\r\n                      <td className={change >= 0 ? 'positive' : 'negative'}>\r\n                        {change.toFixed(2)}%\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          \r\n          {/* Positions Performance Chart */}\r\n          <div className=\"positions-chart\">\r\n            <h3>Positions Performance (30 Days)</h3>\r\n            {chartData ? (\r\n              <Line \r\n                data={chartData}\r\n                options={{\r\n                  responsive: true,\r\n                  plugins: {\r\n                    legend: {\r\n                      position: 'top',\r\n                    },\r\n                    tooltip: {\r\n                      mode: 'index',\r\n                      intersect: false,\r\n                    }\r\n                  },\r\n                  scales: {\r\n                    y: {\r\n                      beginAtZero: false,\r\n                      ticks: {\r\n                        callback: function(value) {\r\n                          return '₹' + value.toFixed(2);\r\n                        }\r\n                      }\r\n                    }\r\n                  }\r\n                }}\r\n              />\r\n            ) : (\r\n              <div className=\"loading\">Loading chart data...</div>\r\n            )}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <p className=\"no-positions\">You don't have any open positions.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Positions;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
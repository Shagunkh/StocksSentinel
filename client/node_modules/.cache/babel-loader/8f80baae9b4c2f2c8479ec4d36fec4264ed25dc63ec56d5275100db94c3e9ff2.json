{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shagun Khandelwal\\\\zerodha\\\\client\\\\src\\\\components\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from 'chart.js';\nimport './Dashboard.css';\nimport axios from 'axios';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst Dashboard = ({\n  chartData,\n  chartSymbol,\n  showChart,\n  onCloseChart\n}) => {\n  _s();\n  const [currentChartData, setCurrentChartData] = useState(chartData);\n  const [currentTimeRange, setCurrentTimeRange] = useState('3mo');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const FINNHUB_API_KEY = 'd17tfrhr01qteuvpuh10d17tfrhr01qteuvpuh1g';\n  useEffect(() => {\n    if (showChart && chartData) {\n      setCurrentChartData(chartData);\n    }\n  }, [showChart, chartData]);\n  const determineChartColor = data => {\n    if (!data || data.length < 2) return '#3a80e9'; // Default blue if not enough data\n\n    const firstValue = data[0];\n    const lastValue = data[data.length - 1];\n    return lastValue >= firstValue ? '#4CAF50' : '#F44336'; // Green for increase, red for decrease\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            let label = context.dataset.label || '';\n            if (label) {\n              label += ': ';\n            }\n            if (context.parsed.y !== null) {\n              label += '₹' + context.parsed.y.toFixed(2);\n            }\n            return label;\n          }\n        }\n      }\n    },\n    elements: {\n      point: {\n        radius: 0\n      },\n      line: {\n        tension: 0,\n        fill: true\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: false,\n        ticks: {\n          callback: function (value) {\n            return '₹' + value.toFixed(2);\n          }\n        }\n      }\n    }\n  };\n  const fetchChartData = async timeRange => {\n    if (!chartSymbol) return;\n    setLoading(true);\n    setError(null);\n    try {\n      // First try Finnhub\n      try {\n        var _data$c;\n        const to = Math.floor(Date.now() / 1000);\n        let from;\n        let resolution = 'D';\n        switch (timeRange) {\n          case '1D':\n            from = to - 24 * 60 * 60;\n            resolution = '5';\n            break;\n          case '5D':\n            from = to - 5 * 24 * 60 * 60;\n            resolution = '15';\n            break;\n          case '1M':\n            from = to - 30 * 24 * 60 * 60;\n            break;\n          case '6M':\n            from = to - 6 * 30 * 24 * 60 * 60;\n            break;\n          case '1Y':\n            from = to - 365 * 24 * 60 * 60;\n            break;\n          case '5Y':\n            from = to - 5 * 365 * 24 * 60 * 60;\n            break;\n          default:\n            from = to - 90 * 24 * 60 * 60;\n        }\n        const response = await axios.get(`https://finnhub.io/api/v1/stock/candle?symbol=${chartSymbol}&resolution=${resolution}&from=${from}&to=${to}&token=${FINNHUB_API_KEY}`);\n        const data = response.data;\n        if (data.s === 'ok' && ((_data$c = data.c) === null || _data$c === void 0 ? void 0 : _data$c.length) > 0) {\n          const chartLabels = data.t.map(timestamp => timeRange === '1D' || timeRange === '5D' ? new Date(timestamp * 1000).toLocaleTimeString() : new Date(timestamp * 1000).toLocaleDateString());\n          const lineColor = determineChartColor(data.c);\n          const fillColor = lineColor === '#4CAF50' ? 'rgba(76, 175, 80, 0.3)' : 'rgba(244, 67, 54, 0.3)';\n          const newChartData = {\n            labels: chartLabels,\n            datasets: [{\n              label: `${chartSymbol} Price`,\n              data: data.c,\n              borderColor: lineColor,\n              backgroundColor: fillColor,\n              borderWidth: 2,\n              tension: 0,\n              fill: true\n            }],\n            timeRange\n          };\n          setCurrentChartData(newChartData);\n          setCurrentTimeRange(timeRange);\n          return;\n        }\n      } catch (finnhubError) {\n        console.log('Finnhub failed, trying Yahoo Finance...');\n      }\n\n      // Fallback to Yahoo Finance\n      let yahooRange;\n      let interval;\n      switch (timeRange) {\n        case '1D':\n          yahooRange = '1d';\n          interval = '5m';\n          break;\n        case '5D':\n          yahooRange = '5d';\n          interval = '15m';\n          break;\n        case '1M':\n          yahooRange = '1mo';\n          interval = '1d';\n          break;\n        case '6M':\n          yahooRange = '6mo';\n          interval = '1d';\n          break;\n        case '1Y':\n          yahooRange = '1y';\n          interval = '1wk';\n          break;\n        case '5Y':\n          yahooRange = '5y';\n          interval = '1mo';\n          break;\n        default:\n          yahooRange = '3mo';\n          interval = '1d';\n      }\n      const proxyUrl = 'https://api.allorigins.win/get?url=';\n      const yahooUrl = `https://query1.finance.yahoo.com/v8/finance/chart/${chartSymbol}?range=${yahooRange}&interval=${interval}`;\n      const response = await axios.get(proxyUrl + encodeURIComponent(yahooUrl));\n      const parsedData = JSON.parse(response.data.contents);\n      if (!parsedData.chart.result) {\n        throw new Error('No chart data available');\n      }\n      const result = parsedData.chart.result[0];\n      const timestamps = result.timestamp;\n      const quotes = result.indicators.quote[0];\n      const chartLabels = timestamps.map(timestamp => timeRange === '1D' || timeRange === '5D' ? new Date(timestamp * 1000).toLocaleTimeString() : new Date(timestamp * 1000).toLocaleDateString());\n      const lineColor = determineChartColor(quotes.close);\n      const fillColor = lineColor === '#4CAF50' ? 'rgba(76, 175, 80, 0.3)' : 'rgba(244, 67, 54, 0.3)';\n      const newChartData = {\n        labels: chartLabels,\n        datasets: [{\n          label: `${chartSymbol} Price`,\n          data: quotes.close,\n          borderColor: lineColor,\n          backgroundColor: fillColor,\n          borderWidth: 2,\n          tension: 0,\n          fill: true\n        }],\n        timeRange\n      };\n      setCurrentChartData(newChartData);\n      setCurrentTimeRange(timeRange);\n    } catch (err) {\n      console.error('Error fetching chart data:', err);\n      setError('Failed to load chart data. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getTimeRangeLabel = () => {\n    switch (currentTimeRange) {\n      case '1D':\n        return '1 Day';\n      case '5D':\n        return '5 Days';\n      case '1M':\n        return '1 Month';\n      case '6M':\n        return '6 Months';\n      case '1Y':\n        return '1 Year';\n      case '5Y':\n        return '5 Years';\n      default:\n        return '3 Months';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your portfolio summary and analytics will appear here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), showChart && currentChartData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [chartSymbol, \" - \", getTimeRangeLabel(), \" Price History\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-time-range-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => fetchChartData('1D'),\n              children: \"1D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => fetchChartData('5D'),\n              children: \"5D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => fetchChartData('1M'),\n              children: \"1M\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => fetchChartData('6M'),\n              children: \"6M\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => fetchChartData('1Y'),\n              children: \"1Y\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => fetchChartData('5Y'),\n              children: \"5Y\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-chart\",\n            onClick: onCloseChart,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-loading\",\n            children: \"Loading chart data...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Line, {\n            data: currentChartData,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"x9Yp5fbIQxVgPeMu8l7g+2hWars=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","axios","jsxDEV","_jsxDEV","register","Dashboard","chartData","chartSymbol","showChart","onCloseChart","_s","currentChartData","setCurrentChartData","currentTimeRange","setCurrentTimeRange","loading","setLoading","error","setError","FINNHUB_API_KEY","determineChartColor","data","length","firstValue","lastValue","chartOptions","responsive","plugins","legend","position","tooltip","callbacks","label","context","dataset","parsed","y","toFixed","elements","point","radius","line","tension","fill","scales","beginAtZero","ticks","callback","value","fetchChartData","timeRange","_data$c","to","Math","floor","Date","now","from","resolution","response","get","s","c","chartLabels","t","map","timestamp","toLocaleTimeString","toLocaleDateString","lineColor","fillColor","newChartData","labels","datasets","borderColor","backgroundColor","borderWidth","finnhubError","console","log","yahooRange","interval","proxyUrl","yahooUrl","encodeURIComponent","parsedData","JSON","parse","contents","chart","result","Error","timestamps","quotes","indicators","quote","close","err","getTimeRangeLabel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","options","_c","$RefreshReg$"],"sources":["C:/Users/Shagun Khandelwal/zerodha/client/src/components/Dashboard/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  Filler,\r\n} from 'chart.js';\r\nimport './Dashboard.css';\r\nimport axios from 'axios';\r\n\r\n// Register ChartJS components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  Filler\r\n);\r\n\r\nconst Dashboard = ({ chartData, chartSymbol, showChart, onCloseChart }) => {\r\n  const [currentChartData, setCurrentChartData] = useState(chartData);\r\n  const [currentTimeRange, setCurrentTimeRange] = useState('3mo');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const FINNHUB_API_KEY = 'd17tfrhr01qteuvpuh10d17tfrhr01qteuvpuh1g';\r\n\r\n  useEffect(() => {\r\n    if (showChart && chartData) {\r\n      setCurrentChartData(chartData);\r\n    }\r\n  }, [showChart, chartData]);\r\n\r\n  const determineChartColor = (data) => {\r\n    if (!data || data.length < 2) return '#3a80e9'; // Default blue if not enough data\r\n    \r\n    const firstValue = data[0];\r\n    const lastValue = data[data.length - 1];\r\n    \r\n    return lastValue >= firstValue ? '#4CAF50' : '#F44336'; // Green for increase, red for decrease\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function(context) {\r\n            let label = context.dataset.label || '';\r\n            if (label) {\r\n              label += ': ';\r\n            }\r\n            if (context.parsed.y !== null) {\r\n              label += '₹' + context.parsed.y.toFixed(2);\r\n            }\r\n            return label;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 0,\r\n      },\r\n      line: {\r\n        tension: 0,\r\n        fill: true,\r\n      }\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: false,\r\n        ticks: {\r\n          callback: function(value) {\r\n            return '₹' + value.toFixed(2);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchChartData = async (timeRange) => {\r\n    if (!chartSymbol) return;\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // First try Finnhub\r\n      try {\r\n        const to = Math.floor(Date.now() / 1000);\r\n        let from;\r\n        let resolution = 'D';\r\n        \r\n        switch(timeRange) {\r\n          case '1D':\r\n            from = to - (24 * 60 * 60);\r\n            resolution = '5';\r\n            break;\r\n          case '5D':\r\n            from = to - (5 * 24 * 60 * 60);\r\n            resolution = '15';\r\n            break;\r\n          case '1M':\r\n            from = to - (30 * 24 * 60 * 60);\r\n            break;\r\n          case '6M':\r\n            from = to - (6 * 30 * 24 * 60 * 60);\r\n            break;\r\n          case '1Y':\r\n            from = to - (365 * 24 * 60 * 60);\r\n            break;\r\n          case '5Y':\r\n            from = to - (5 * 365 * 24 * 60 * 60);\r\n            break;\r\n          default:\r\n            from = to - (90 * 24 * 60 * 60);\r\n        }\r\n        \r\n        const response = await axios.get(\r\n          `https://finnhub.io/api/v1/stock/candle?symbol=${chartSymbol}&resolution=${resolution}&from=${from}&to=${to}&token=${FINNHUB_API_KEY}`\r\n        );\r\n        \r\n        const data = response.data;\r\n        \r\n        if (data.s === 'ok' && data.c?.length > 0) {\r\n          const chartLabels = data.t.map(timestamp => \r\n            timeRange === '1D' || timeRange === '5D'\r\n              ? new Date(timestamp * 1000).toLocaleTimeString() \r\n              : new Date(timestamp * 1000).toLocaleDateString()\r\n          );\r\n          \r\n          const lineColor = determineChartColor(data.c);\r\n          const fillColor = lineColor === '#4CAF50' ? 'rgba(76, 175, 80, 0.3)' : 'rgba(244, 67, 54, 0.3)';\r\n          \r\n          const newChartData = {\r\n            labels: chartLabels,\r\n            datasets: [\r\n              {\r\n                label: `${chartSymbol} Price`,\r\n                data: data.c,\r\n                borderColor: lineColor,\r\n                backgroundColor: fillColor,\r\n                borderWidth: 2,\r\n                tension: 0,\r\n                fill: true\r\n              }\r\n            ],\r\n            timeRange\r\n          };\r\n          \r\n          setCurrentChartData(newChartData);\r\n          setCurrentTimeRange(timeRange);\r\n          return;\r\n        }\r\n      } catch (finnhubError) {\r\n        console.log('Finnhub failed, trying Yahoo Finance...');\r\n      }\r\n      \r\n      // Fallback to Yahoo Finance\r\n      let yahooRange;\r\n      let interval;\r\n      switch(timeRange) {\r\n        case '1D': yahooRange = '1d'; interval = '5m'; break;\r\n        case '5D': yahooRange = '5d'; interval = '15m'; break;\r\n        case '1M': yahooRange = '1mo'; interval = '1d'; break;\r\n        case '6M': yahooRange = '6mo'; interval = '1d'; break;\r\n        case '1Y': yahooRange = '1y'; interval = '1wk'; break;\r\n        case '5Y': yahooRange = '5y'; interval = '1mo'; break;\r\n        default: yahooRange = '3mo'; interval = '1d';\r\n      }\r\n      \r\n      const proxyUrl = 'https://api.allorigins.win/get?url=';\r\n      const yahooUrl = `https://query1.finance.yahoo.com/v8/finance/chart/${chartSymbol}?range=${yahooRange}&interval=${interval}`;\r\n      \r\n      const response = await axios.get(proxyUrl + encodeURIComponent(yahooUrl));\r\n      const parsedData = JSON.parse(response.data.contents);\r\n      \r\n      if (!parsedData.chart.result) {\r\n        throw new Error('No chart data available');\r\n      }\r\n      \r\n      const result = parsedData.chart.result[0];\r\n      const timestamps = result.timestamp;\r\n      const quotes = result.indicators.quote[0];\r\n      \r\n      const chartLabels = timestamps.map(timestamp => \r\n        timeRange === '1D' || timeRange === '5D'\r\n          ? new Date(timestamp * 1000).toLocaleTimeString() \r\n          : new Date(timestamp * 1000).toLocaleDateString()\r\n      );\r\n      \r\n      const lineColor = determineChartColor(quotes.close);\r\n      const fillColor = lineColor === '#4CAF50' ? 'rgba(76, 175, 80, 0.3)' : 'rgba(244, 67, 54, 0.3)';\r\n      \r\n      const newChartData = {\r\n        labels: chartLabels,\r\n        datasets: [\r\n          {\r\n            label: `${chartSymbol} Price`,\r\n            data: quotes.close,\r\n            borderColor: lineColor,\r\n            backgroundColor: fillColor,\r\n            borderWidth: 2,\r\n            tension: 0,\r\n            fill: true\r\n          }\r\n        ],\r\n        timeRange\r\n      };\r\n      \r\n      setCurrentChartData(newChartData);\r\n      setCurrentTimeRange(timeRange);\r\n      \r\n    } catch (err) {\r\n      console.error('Error fetching chart data:', err);\r\n      setError('Failed to load chart data. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getTimeRangeLabel = () => {\r\n    switch(currentTimeRange) {\r\n      case '1D': return '1 Day';\r\n      case '5D': return '5 Days';\r\n      case '1M': return '1 Month';\r\n      case '6M': return '6 Months';\r\n      case '1Y': return '1 Year';\r\n      case '5Y': return '5 Years';\r\n      default: return '3 Months';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-content\">\r\n      <h2>Dashboard Overview</h2>\r\n      <p>Your portfolio summary and analytics will appear here.</p>\r\n\r\n      {/* Chart Modal */}\r\n      {showChart && currentChartData && (\r\n        <div className=\"chart-modal\">\r\n          <div className=\"chart-modal-content\">\r\n            <div className=\"chart-header\">\r\n              <h3>{chartSymbol} - {getTimeRangeLabel()} Price History</h3>\r\n              <div className=\"chart-time-range-buttons\">\r\n                <button onClick={() => fetchChartData('1D')}>1D</button>\r\n                <button onClick={() => fetchChartData('5D')}>5D</button>\r\n                <button onClick={() => fetchChartData('1M')}>1M</button>\r\n                <button onClick={() => fetchChartData('6M')}>6M</button>\r\n                <button onClick={() => fetchChartData('1Y')}>1Y</button>\r\n                <button onClick={() => fetchChartData('5Y')}>5Y</button>\r\n              </div>\r\n              <button className=\"close-chart\" onClick={onCloseChart}>×</button>\r\n            </div>\r\n            <div className=\"chart-container\">\r\n              {loading ? (\r\n                <div className=\"chart-loading\">Loading chart data...</div>\r\n              ) : error ? (\r\n                <div className=\"chart-error\">{error}</div>\r\n              ) : (\r\n                <Line data={currentChartData} options={chartOptions} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
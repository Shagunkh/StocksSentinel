{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shagun Khandelwal\\\\zerodha\\\\client\\\\src\\\\components\\\\AIPrediction\\\\AIPrediction.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './AIPrediction.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AIPrediction = () => {\n  _s();\n  const {\n    symbol\n  } = useParams();\n  const navigate = useNavigate();\n  const [prediction, setPrediction] = useState(null);\n  const [sentiment, setSentiment] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [news, setNews] = useState([]);\n  const [priceData, setPriceData] = useState(null);\n  const [technicalIndicators, setTechnicalIndicators] = useState(null);\n  const [marketSentiment, setMarketSentiment] = useState(null);\n  const [volumeData, setVolumeData] = useState({\n    average: null,\n    current: null,\n    trend: null\n  });\n  const [priceTrend, setPriceTrend] = useState({\n    direction: null,\n    strength: null\n  });\n\n  // API Keys (consider moving these to environment variables)\n  const FINNHUB_API_KEY = 'd1aopp9r01qjhvtqeebgd1aopp9r01qjhvtqeec0';\n  const OPENROUTER_API_KEY = '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';\n  const ALPHA_VANTAGE_KEY = 'OH0ZQBRUAB4ABC4X';\n  const POLYGON_API_KEY = 'TpJTOM9gDn4q_3d1L0Gyp4mFlap7OSLh';\n  const TWELVE_DATA_KEY = '689a986b8a534491b05fff638cd7f1b1';\n\n  // Clean AI response by removing markdown and formatting\n  const cleanPredictionText = text => {\n    return text.replace(/^#+\\s*/gm, '') // Remove markdown headers\n    .replace(/\\*\\*(.*?)\\*\\*/g, '$1') // Remove bold markdown\n    .replace(/\\[(.*?)\\]\\(.*?\\)/g, '$1') // Remove markdown links\n    .split('\\n').filter(line => line.trim() !== '') // Remove empty lines\n    .map(line => line.trim());\n  };\n\n  // Fetch technical indicators from multiple sources\n  const fetchTechnicalIndicators = async symbol => {\n    try {\n      var _alphaResponse$data, _alphaResponse$data$T, _twelveResponse$data, _twelveResponse$data$, _twelveResponse$data$2;\n      // Fetch from Alpha Vantage\n      const alphaResponse = await axios.get(`https://www.alphavantage.co/query?function=RSI&symbol=${symbol}&interval=daily&time_period=14&series_type=close&apikey=${ALPHA_VANTAGE_KEY}`);\n\n      // Fetch from Twelve Data (fallback)\n      const twelveResponse = await axios.get(`https://api.twelvedata.com/rsi?symbol=${symbol}&interval=1day&outputsize=30&apikey=${TWELVE_DATA_KEY}`);\n\n      // Process indicators\n      const indicators = {\n        rsi: ((_alphaResponse$data = alphaResponse.data) === null || _alphaResponse$data === void 0 ? void 0 : (_alphaResponse$data$T = _alphaResponse$data.TechnicalAnalysis) === null || _alphaResponse$data$T === void 0 ? void 0 : _alphaResponse$data$T.RSI) || ((_twelveResponse$data = twelveResponse.data) === null || _twelveResponse$data === void 0 ? void 0 : (_twelveResponse$data$ = _twelveResponse$data.values) === null || _twelveResponse$data$ === void 0 ? void 0 : (_twelveResponse$data$2 = _twelveResponse$data$[0]) === null || _twelveResponse$data$2 === void 0 ? void 0 : _twelveResponse$data$2.rsi) || null\n        // Add more indicators as needed\n      };\n      setTechnicalIndicators(indicators);\n      return indicators;\n    } catch (err) {\n      console.error(\"Error fetching technical indicators:\", err);\n      return null;\n    }\n  };\n\n  // Fetch broader market sentiment\n  const fetchMarketSentiment = async () => {\n    try {\n      var _fgiResponse$data, _fgiResponse$data$dat, _fgiResponse$data$dat2, _quotes$, _quotes$2, _quotes$3;\n      // Fetch fear and greed index\n      const fgiResponse = await axios.get('https://api.alternative.me/fng/?limit=1');\n\n      // Fetch major indices performance\n      const indicesResponse = await axios.get(`https://www.alphavantage.co/query?function=BATCH_STOCK_QUOTES&symbols=SPY,QQQ,DIA&apikey=${ALPHA_VANTAGE_KEY}`);\n      console.log(indicesResponse);\n      // Correct the property name from StockQuotes to Stock Quotes\n      const quotes = indicesResponse.data['Stock Quotes'] || [];\n      const sentimentData = {\n        fearGreedIndex: ((_fgiResponse$data = fgiResponse.data) === null || _fgiResponse$data === void 0 ? void 0 : (_fgiResponse$data$dat = _fgiResponse$data.data) === null || _fgiResponse$data$dat === void 0 ? void 0 : (_fgiResponse$data$dat2 = _fgiResponse$data$dat[0]) === null || _fgiResponse$data$dat2 === void 0 ? void 0 : _fgiResponse$data$dat2.value) || null,\n        spyChange: ((_quotes$ = quotes[0]) === null || _quotes$ === void 0 ? void 0 : _quotes$['09. change']) || null,\n        qqqChange: ((_quotes$2 = quotes[1]) === null || _quotes$2 === void 0 ? void 0 : _quotes$2['09. change']) || null,\n        diaChange: ((_quotes$3 = quotes[2]) === null || _quotes$3 === void 0 ? void 0 : _quotes$3['09. change']) || null\n      };\n      setMarketSentiment(sentimentData);\n      return sentimentData;\n    } catch (err) {\n      console.error(\"Error fetching market sentiment:\", err);\n      return null;\n    }\n  };\n\n  // Enhanced sentiment analysis with NLP techniques\n  const calculateEnhancedSentiment = (priceChange, newsItems, technicalIndicators, marketSentiment) => {\n    // Base sentiment from price change (-1 to 1)\n    const priceChangeNum = parseFloat(priceChange) || 0;\n    let sentimentScore = Math.min(1, Math.max(-1, priceChangeNum / 5));\n\n    // Technical indicators influence\n    if (technicalIndicators !== null && technicalIndicators !== void 0 && technicalIndicators.rsi) {\n      const rsi = parseFloat(technicalIndicators.rsi);\n      // RSI between 30-70 is neutral, below 30 is oversold (bullish), above 70 is overbought (bearish)\n      const rsiInfluence = rsi < 30 ? 0.2 : rsi > 70 ? -0.2 : 0;\n      sentimentScore += rsiInfluence;\n    }\n\n    // Market sentiment influence\n    if (marketSentiment) {\n      // Fear and greed index (0-100, 0=extreme fear, 100=extreme greed)\n      const fgi = parseFloat(marketSentiment.fearGreedIndex) || 50;\n      const fgiInfluence = (fgi - 50) / 100; // Normalize to -0.5 to 0.5\n      sentimentScore += fgiInfluence * 0.3;\n\n      // Major indices performance\n      const spyChange = parseFloat(marketSentiment.spyChange) || 0;\n      const qqqChange = parseFloat(marketSentiment.qqqChange) || 0;\n      const diaChange = parseFloat(marketSentiment.diaChange) || 0;\n      const marketPerformance = (spyChange + qqqChange + diaChange) / 3;\n      sentimentScore += marketPerformance / 10;\n    }\n\n    // Enhanced news analysis with more sophisticated NLP\n    if (newsItems && newsItems.length > 0) {\n      let newsSentiment = 0;\n      const sentimentWords = {\n        positive: ['up', 'rise', 'gain', 'strong', 'beat', 'bullish', 'buy', 'outperform', 'positive', 'growth'],\n        negative: ['down', 'fall', 'drop', 'weak', 'miss', 'bearish', 'sell', 'underperform', 'negative', 'decline'],\n        strongPositive: ['surge', 'soar', 'rocket', 'record high', 'breakout', 'upgrade'],\n        strongNegative: ['plunge', 'crash', 'collapse', 'record low', 'downgrade', 'bankrupt']\n      };\n      newsItems.forEach(item => {\n        const headline = item.headline.toLowerCase();\n        const summary = (item.summary || '').toLowerCase();\n\n        // Check for sentiment words with different weights\n        sentimentWords.strongPositive.forEach(word => {\n          if (headline.includes(word) || summary.includes(word)) {\n            newsSentiment += 0.3;\n          }\n        });\n        sentimentWords.positive.forEach(word => {\n          if (headline.includes(word) || summary.includes(word)) {\n            newsSentiment += 0.1;\n          }\n        });\n        sentimentWords.negative.forEach(word => {\n          if (headline.includes(word) || summary.includes(word)) {\n            newsSentiment -= 0.1;\n          }\n        });\n        sentimentWords.strongNegative.forEach(word => {\n          if (headline.includes(word) || summary.includes(word)) {\n            newsSentiment -= 0.3;\n          }\n        });\n\n        // Check for sentiment shifters\n        if (headline.includes('but') || summary.includes('however')) {\n          newsSentiment *= 0.7; // Reduce sentiment impact for contradictory statements\n        }\n        if (headline.includes('!')) {\n          newsSentiment *= 1.2; // Amplify sentiment for emphatic statements\n        }\n      });\n\n      // Average news sentiment and combine with other factors\n      newsSentiment = newsSentiment / newsItems.length;\n      sentimentScore = sentimentScore * 0.5 + newsSentiment * 0.3 + ((technicalIndicators ? 0.1 : 0) + (marketSentiment ? 0.1 : 0));\n    }\n\n    // Normalize between -1 and 1\n    sentimentScore = Math.min(1, Math.max(-1, sentimentScore));\n\n    // Determine sentiment label with more granularity\n    let sentimentLabel;\n    if (sentimentScore > 0.6) {\n      sentimentLabel = 'extremely bullish';\n    } else if (sentimentScore > 0.3) {\n      sentimentLabel = 'strongly bullish';\n    } else if (sentimentScore > 0.1) {\n      sentimentLabel = 'bullish';\n    } else if (sentimentScore < -0.6) {\n      sentimentLabel = 'extremely bearish';\n    } else if (sentimentScore < -0.3) {\n      sentimentLabel = 'strongly bearish';\n    } else if (sentimentScore < -0.1) {\n      sentimentLabel = 'bearish';\n    } else {\n      sentimentLabel = 'neutral';\n    }\n    return {\n      score: sentimentScore.toFixed(2),\n      label: sentimentLabel,\n      confidence: Math.abs(sentimentScore) > 0.5 ? 'high' : Math.abs(sentimentScore) > 0.2 ? 'medium' : 'low'\n    };\n  };\n\n  // Fetch historical data for trend analysis with fallbacks\n  const fetchHistoricalData = async symbol => {\n    try {\n      var _last5Days$, _last5Days$2;\n      // Try Alpha Vantage first\n      const alphaResponse = await axios.get(`https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol}&outputsize=compact&apikey=${ALPHA_VANTAGE_KEY}`);\n      let timeSeries = alphaResponse.data['Time Series (Daily)'];\n      let source = 'Alpha Vantage';\n\n      // Fallback to Twelve Data if Alpha Vantage fails\n      if (!timeSeries) {\n        var _twelveResponse$data2, _twelveResponse$data3;\n        const twelveResponse = await axios.get(`https://api.twelvedata.com/time_series?symbol=${symbol}&interval=1day&outputsize=5&apikey=${TWELVE_DATA_KEY}`);\n        timeSeries = (_twelveResponse$data2 = twelveResponse.data) === null || _twelveResponse$data2 === void 0 ? void 0 : (_twelveResponse$data3 = _twelveResponse$data2.values) === null || _twelveResponse$data3 === void 0 ? void 0 : _twelveResponse$data3.reduce((acc, val) => {\n          acc[val.datetime] = {\n            '4. close': val.close,\n            '5. volume': val.volume\n          };\n          return acc;\n        }, {});\n        source = 'Twelve Data';\n      }\n\n      // Fallback to Polygon if both fail\n      if (!timeSeries) {\n        var _polygonResponse$data, _polygonResponse$data2;\n        const polygonResponse = await axios.get(`https://api.polygon.io/v2/aggs/ticker/${symbol}/range/1/day/${new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]}/${new Date().toISOString().split('T')[0]}?apiKey=${POLYGON_API_KEY}`);\n        timeSeries = (_polygonResponse$data = polygonResponse.data) === null || _polygonResponse$data === void 0 ? void 0 : (_polygonResponse$data2 = _polygonResponse$data.results) === null || _polygonResponse$data2 === void 0 ? void 0 : _polygonResponse$data2.reduce((acc, val) => {\n          const date = new Date(val.t).toISOString().split('T')[0];\n          acc[date] = {\n            '4. close': val.c,\n            '5. volume': val.v\n          };\n          return acc;\n        }, {});\n        source = 'Polygon';\n      }\n      if (!timeSeries) {\n        console.log(\"No historical data available from any source\");\n        return null;\n      }\n      const dates = Object.keys(timeSeries).sort();\n      const last5Days = dates.slice(0, 5).map(date => ({\n        date,\n        close: parseFloat(timeSeries[date]['4. close']),\n        volume: parseFloat(timeSeries[date]['5. volume'])\n      }));\n\n      // Calculate short-term trend\n      const priceChange = last5Days[0].close - last5Days[last5Days.length - 1].close;\n      const percentChange = priceChange / last5Days[last5Days.length - 1].close * 100;\n      const trend = {\n        direction: priceChange > 0 ? 'up' : priceChange < 0 ? 'down' : 'flat',\n        strength: Math.abs(percentChange) > 5 ? 'strong' : Math.abs(percentChange) > 2 ? 'moderate' : 'weak',\n        percentChange: percentChange.toFixed(2)\n      };\n\n      // Calculate volume metrics\n      const volumes = last5Days.map(day => day.volume).filter(v => v);\n      const avgVolume = volumes.length > 0 ? volumes.reduce((sum, vol) => sum + vol, 0) / volumes.length : null;\n      const volumeTrend = volumes.length > 1 ? volumes[0] > volumes[volumes.length - 1] * 1.2 ? 'increasing' : volumes[0] < volumes[volumes.length - 1] * 0.8 ? 'decreasing' : 'stable' : 'unknown';\n      setPriceTrend(trend);\n      setVolumeData({\n        average: avgVolume,\n        current: ((_last5Days$ = last5Days[0]) === null || _last5Days$ === void 0 ? void 0 : _last5Days$.volume) || null,\n        trend: volumeTrend,\n        source\n      });\n      return {\n        last5Days,\n        trend,\n        volume: ((_last5Days$2 = last5Days[0]) === null || _last5Days$2 === void 0 ? void 0 : _last5Days$2.volume) || null,\n        source\n      };\n    } catch (err) {\n      console.error(\"Error fetching historical data:\", err);\n      return null;\n    }\n  };\n\n  // Generate AI prediction with enhanced data\n  const generateEnhancedPrediction = async stockSymbol => {\n    try {\n      var _volumeData$current, _volumeData$average;\n      setLoading(true);\n      setError(null);\n\n      // Step 1: Gather all data from APIs in parallel\n      const [priceResponse, newsResponse, technicalIndicators, marketSentiment, historicalData] = await Promise.all([axios.get(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${stockSymbol}&apikey=${ALPHA_VANTAGE_KEY}`), axios.get(`https://finnhub.io/api/v1/company-news?symbol=${stockSymbol}&from=${new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString().split('T')[0]}&to=${new Date().toISOString().split('T')[0]}&token=${FINNHUB_API_KEY}`), fetchTechnicalIndicators(stockSymbol), fetchMarketSentiment(), fetchHistoricalData(stockSymbol)]);\n\n      // Process price data\n      const priceData = priceResponse.data['Global Quote'] || {};\n      const priceChange = priceData['10. change percent'] || '0%';\n      setPriceData({\n        current: priceData['05. price'],\n        change: priceData['09. change'],\n        changePercent: priceChange,\n        volume: volumeData.current || (historicalData === null || historicalData === void 0 ? void 0 : historicalData.volume) || null\n      });\n\n      // Process news data\n      const recentNews = newsResponse.data.filter(item => item.headline && item.image && item.url).slice(0, 5);\n      setNews(recentNews);\n\n      // Calculate enhanced sentiment\n      const sentimentAnalysis = calculateEnhancedSentiment(priceChange, recentNews, technicalIndicators, marketSentiment);\n      setSentiment(sentimentAnalysis);\n\n      // Prepare comprehensive data for AI\n      const latestNews = recentNews.length > 0 ? recentNews.slice(0, 3).map(item => item.headline).join('\\n- ') : 'No recent news available';\n      const technicalSummary = technicalIndicators ? `RSI: ${technicalIndicators.rsi || 'N/A'}` : 'No technical indicators available';\n      const marketSummary = marketSentiment ? `Market Sentiment: Fear/Greed Index ${marketSentiment.fearGreedIndex || 'N/A'}, \n         SPY: ${marketSentiment.spyChange || 'N/A'}, \n         QQQ: ${marketSentiment.qqqChange || 'N/A'}, \n         DIA: ${marketSentiment.diaChange || 'N/A'}` : 'No market sentiment data available';\n      const historicalSummary = historicalData ? `Recent trend: ${priceTrend.direction} (${priceTrend.strength}, ${priceTrend.percentChange}%), \n         Volume: ${volumeData.current ? volumeData.current.toLocaleString() : 'N/A'} (${volumeData.trend}), \n         Avg Volume: ${volumeData.average ? volumeData.average.toLocaleString() : 'N/A'}` : 'Limited historical data available';\n\n      // Step 2: Send to AI for enhanced prediction\n      const response = await axios.post('https://openrouter.ai/api/v1/chat/completions', {\n        model: \"anthropic/claude-3-haiku\",\n        messages: [{\n          \"role\": \"system\",\n          \"content\": `You are an advanced stock prediction AI that analyzes multiple data points to forecast stock movements.\n                        Provide a detailed prediction for the next 24 hours including:\n                        - Predicted direction and percentage change with confidence interval\n                        - Key technical factors (RSI, volume, trends)\n                        - Market sentiment context\n                        - News sentiment analysis\n                        - Potential support/resistance levels\n                        - Risk factors to consider\n                        - Trading strategy suggestion (if appropriate)\n                        - Important disclaimer about predictions being speculative\n                        \n                        Format your response with clear sections using markdown headers and bullet points.\n                        Current sentiment: ${sentimentAnalysis.label} (${sentimentAnalysis.score})\n                        Confidence: ${sentimentAnalysis.confidence}`\n        }, {\n          \"role\": \"user\",\n          \"content\": `Generate a comprehensive 24-hour prediction for ${stockSymbol} based on:\n                        - Current price: ${priceData['05. price']}\n                        - Price change: ${priceChange}\n                        - Volume: ${((_volumeData$current = volumeData.current) === null || _volumeData$current === void 0 ? void 0 : _volumeData$current.toLocaleString()) || 'N/A'} (${volumeData.trend || 'trend unknown'})\n                        - Avg Volume: ${((_volumeData$average = volumeData.average) === null || _volumeData$average === void 0 ? void 0 : _volumeData$average.toLocaleString()) || 'N/A'}\n                        - Price Trend: ${priceTrend.direction || 'unknown'} (${priceTrend.strength || 'unknown'}, ${priceTrend.percentChange || 'N/A'}%)\n                        - Technical indicators: ${technicalSummary}\n                        - Market context: ${marketSummary}\n                        - Latest news headlines:\n                          - ${latestNews}`\n        }],\n        max_tokens: 1500\n      }, {\n        headers: {\n          'Authorization': `Bearer ${OPENROUTER_API_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const cleanedPrediction = cleanPredictionText(response.data.choices[0].message.content);\n      setPrediction(cleanedPrediction);\n    } catch (err) {\n      console.error(\"Error generating prediction:\", err);\n      setError('Failed to generate prediction. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch additional market data\n  const fetchStockNews = async stockSymbol => {\n    try {\n      var _polygonNews$data;\n      // Try multiple news sources\n      const [finnhubNews, polygonNews] = await Promise.all([axios.get(`https://finnhub.io/api/v1/company-news?symbol=${stockSymbol}&from=${new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]}&to=${new Date().toISOString().split('T')[0]}&token=${FINNHUB_API_KEY}`), axios.get(`https://api.polygon.io/v2/reference/news?ticker=${stockSymbol}&limit=5&apiKey=${POLYGON_API_KEY}`).catch(() => ({\n        data: {\n          results: []\n        }\n      })) // Fallback if fails\n      ]);\n\n      // Combine and filter news\n      const allNews = [...(finnhubNews.data || []), ...(((_polygonNews$data = polygonNews.data) === null || _polygonNews$data === void 0 ? void 0 : _polygonNews$data.results) || [])];\n      const filteredNews = allNews.filter(item => item.headline && (item.image || item.thumbnail_url) && item.url).slice(0, 5).map(item => ({\n        headline: item.headline || item.title,\n        summary: item.summary || item.description,\n        image: item.image || item.thumbnail_url,\n        url: item.url || item.article_url,\n        source: item.source || (item.publisher ? item.publisher.name : 'Unknown'),\n        date: item.datetime || item.published_utc\n      }));\n      setNews(filteredNews);\n    } catch (err) {\n      console.error(\"Error fetching news:\", err);\n    }\n  };\n\n  // Load all data when symbol changes\n  useEffect(() => {\n    if (symbol) {\n      setLoading(true);\n      generateEnhancedPrediction(symbol);\n      fetchStockNews(symbol);\n    }\n  }, [symbol]);\n  if (!symbol) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-prediction-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-icon\",\n          children: \"\\uD83D\\uDCC8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No Stock Selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please select a stock symbol to view AI predictions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/watchlist'),\n          className: \"primary-button\",\n          children: \"Browse Stocks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-prediction-container dark-theme\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-prediction-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"stock-symbol\",\n            children: symbol.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 13\n          }, this), priceData && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"price-container\",\n            children: priceData.volume && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"volume-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"volume-label\",\n                children: \"VOLUME:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"volume-value\",\n                children: priceData.volume.toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stock-name\",\n          children: \"Advanced 24-Hour AI Prediction Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(-1),\n        className: \"back-button\",\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-state\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-animation\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Analyzing market data for \", symbol.toUpperCase(), \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading-subtext\",\n        children: \"Fetching price data, news, and technical indicators\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-state\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-icon\",\n        children: \"\\u26A0\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Prediction Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"primary-button\",\n        children: \"Retry Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prediction-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prediction-card glass-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sentiment-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"prediction-title\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"title-icon\",\n                  children: \"\\u2728AI\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 13\n                }, this), \"AI Stock Analysis\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `sentiment-indicator ${sentiment.label.replace(' ', '-')}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"sentiment-badge\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"sentiment-label\",\n                    children: sentiment.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 543,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"sentiment-confidence-bubble\",\n                    children: [sentiment.confidence, \" confidence\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 544,\n                    columnNumber: 15\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"sentiment-meter\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"meter-fill\",\n                    style: {\n                      width: `${(parseFloat(sentiment.score) + 1) * 50}%`,\n                      background: sentiment.score >= 0 ? `linear-gradient(90deg, #00C805 ${Math.abs(sentiment.score) * 100}%, #f0f0f0 0%)` : `linear-gradient(90deg, #FF3B30 ${Math.abs(sentiment.score) * 100}%, #f0f0f0 0%)`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 547,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"meter-labels\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Bearish\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 557,\n                      columnNumber: 17\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Neutral\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 558,\n                      columnNumber: 17\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Bullish\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 559,\n                      columnNumber: 17\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 556,\n                    columnNumber: 15\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 541,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prediction-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"full-prediction\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Detailed Analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 11\n              }, this), prediction.map((line, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"prediction-line\",\n                children: line.startsWith('**') ? /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: line.replace(/\\*\\*/g, '')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 574,\n                  columnNumber: 17\n                }, this) : line\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 13\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prediction-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"action-bar\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => generateEnhancedPrediction(symbol),\n                className: \"refresh-button\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"refresh-icon\",\n                  children: \"\\uD83D\\uDD04\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 13\n                }, this), \" Update Analysis\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"last-updated\",\n                children: [\"Last updated: \", new Date().toLocaleTimeString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"disclaimer\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"disclaimer-icon\",\n                children: \"\\u26A0\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Disclaimer:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 598,\n                  columnNumber: 13\n                }, this), \" This AI-generated forecast is for informational purposes only and should not be considered financial advice. Past performance is not indicative of future results.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-sections\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"technical-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"Technical Indicators\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"indicators-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"indicator-card glass-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"RSI (14-day)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"indicator-value-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"indicator-value\",\n                  children: (technicalIndicators === null || technicalIndicators === void 0 ? void 0 : technicalIndicators.rsi) || '--'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 615,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `indicator-status ${!(technicalIndicators !== null && technicalIndicators !== void 0 && technicalIndicators.rsi) ? 'neutral' : technicalIndicators.rsi > 70 ? 'overbought' : technicalIndicators.rsi < 30 ? 'oversold' : 'neutral'}`,\n                  children: !(technicalIndicators !== null && technicalIndicators !== void 0 && technicalIndicators.rsi) ? 'N/A' : technicalIndicators.rsi > 70 ? 'Overbought' : technicalIndicators.rsi < 30 ? 'Oversold' : 'Neutral'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 616,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"indicator-card glass-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Price Trend\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"indicator-value-container\",\n                children: priceTrend.direction ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `trend-direction ${priceTrend.direction}`,\n                    children: priceTrend.direction.toUpperCase()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 633,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"trend-strength\",\n                    children: [priceTrend.strength, \" (\", priceTrend.percentChange, \"%)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 636,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"no-data\",\n                  children: \"No trend data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 641,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"indicator-card glass-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Volume Analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 647,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"volume-metrics\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"volume-metric\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"metric-label\",\n                    children: \"Current:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 650,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"metric-value\",\n                    children: volumeData.current ? volumeData.current.toLocaleString() : '--'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 651,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 649,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"volume-metric\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"metric-label\",\n                    children: \"Average:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 656,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"metric-value\",\n                    children: volumeData.average ? volumeData.average.toLocaleString() : '--'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 657,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 655,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"volume-trend\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"trend-label\",\n                    children: \"Trend:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 662,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `trend-value ${volumeData.trend || 'unknown'}`,\n                    children: volumeData.trend || 'unknown'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 663,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 661,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 611,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"market-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"Market Sentiment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 15\n          }, this), marketSentiment ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"market-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"market-card glass-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Fear & Greed Index\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"gauge-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"gauge-fill\",\n                  style: {\n                    width: `${marketSentiment.fearGreedIndex}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 679,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"gauge-value\",\n                  children: marketSentiment.fearGreedIndex\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 683,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"market-analysis\",\n                children: marketSentiment.fearGreedIndex > 70 ? 'Extreme Greed' : marketSentiment.fearGreedIndex < 30 ? 'Extreme Fear' : 'Neutral'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"market-card glass-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"SPY (S&P 500)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `index-change ${marketSentiment.spyChange >= 0 ? 'positive' : 'negative'}`,\n                children: marketSentiment.spyChange || '--'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 693,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"market-card glass-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"QQQ (Nasdaq)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `index-change ${marketSentiment.qqqChange >= 0 ? 'positive' : 'negative'}`,\n                children: marketSentiment.qqqChange || '--'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 700,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"market-card glass-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"DIA (Dow Jones)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 706,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `index-change ${marketSentiment.diaChange >= 0 ? 'positive' : 'negative'}`,\n                children: marketSentiment.diaChange || '--'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 707,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-market\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No market sentiment data available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"news-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"Latest Market News\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => fetchStockNews(symbol),\n            className: \"refresh-news\",\n            children: \"\\u21BB Refresh News\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 13\n        }, this), news.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"news-grid\",\n          children: news.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"news-card glass-card\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: item.url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"news-image-container\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: item.image,\n                  alt: item.headline,\n                  className: \"news-image\",\n                  onError: e => {\n                    e.target.onerror = null;\n                    e.target.src = 'https://via.placeholder.com/300x200?text=No+Image';\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 733,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"news-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"news-headline\",\n                  children: item.headline\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 744,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"news-meta\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"news-source\",\n                    children: item.source\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 746,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"news-date\",\n                    children: item.date ? new Date(item.date).toLocaleDateString() : 'Recent'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 747,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 745,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"news-summary\",\n                  children: item.summary || 'Read more...'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 751,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 743,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 21\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-news\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"No recent news found for \", symbol.toUpperCase()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 489,\n    columnNumber: 5\n  }, this);\n};\n_s(AIPrediction, \"1vieeyPtuOlV5PQ5Xt+pvP7Veyg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AIPrediction;\nexport default AIPrediction;\nvar _c;\n$RefreshReg$(_c, \"AIPrediction\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AIPrediction","_s","symbol","navigate","prediction","setPrediction","sentiment","setSentiment","loading","setLoading","error","setError","news","setNews","priceData","setPriceData","technicalIndicators","setTechnicalIndicators","marketSentiment","setMarketSentiment","volumeData","setVolumeData","average","current","trend","priceTrend","setPriceTrend","direction","strength","FINNHUB_API_KEY","OPENROUTER_API_KEY","ALPHA_VANTAGE_KEY","POLYGON_API_KEY","TWELVE_DATA_KEY","cleanPredictionText","text","replace","split","filter","line","trim","map","fetchTechnicalIndicators","_alphaResponse$data","_alphaResponse$data$T","_twelveResponse$data","_twelveResponse$data$","_twelveResponse$data$2","alphaResponse","get","twelveResponse","indicators","rsi","data","TechnicalAnalysis","RSI","values","err","console","fetchMarketSentiment","_fgiResponse$data","_fgiResponse$data$dat","_fgiResponse$data$dat2","_quotes$","_quotes$2","_quotes$3","fgiResponse","indicesResponse","log","quotes","sentimentData","fearGreedIndex","value","spyChange","qqqChange","diaChange","calculateEnhancedSentiment","priceChange","newsItems","priceChangeNum","parseFloat","sentimentScore","Math","min","max","rsiInfluence","fgi","fgiInfluence","marketPerformance","length","newsSentiment","sentimentWords","positive","negative","strongPositive","strongNegative","forEach","item","headline","toLowerCase","summary","word","includes","sentimentLabel","score","toFixed","label","confidence","abs","fetchHistoricalData","_last5Days$","_last5Days$2","timeSeries","source","_twelveResponse$data2","_twelveResponse$data3","reduce","acc","val","datetime","close","volume","_polygonResponse$data","_polygonResponse$data2","polygonResponse","Date","now","toISOString","results","date","t","c","v","dates","Object","keys","sort","last5Days","slice","percentChange","volumes","day","avgVolume","sum","vol","volumeTrend","generateEnhancedPrediction","stockSymbol","_volumeData$current","_volumeData$average","priceResponse","newsResponse","historicalData","Promise","all","change","changePercent","recentNews","image","url","sentimentAnalysis","latestNews","join","technicalSummary","marketSummary","historicalSummary","toLocaleString","response","post","model","messages","max_tokens","headers","cleanedPrediction","choices","message","content","fetchStockNews","_polygonNews$data","finnhubNews","polygonNews","catch","allNews","filteredNews","thumbnail_url","title","description","article_url","publisher","name","published_utc","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toUpperCase","window","location","reload","style","width","background","i","startsWith","toLocaleTimeString","index","href","target","rel","src","alt","onError","e","onerror","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Shagun Khandelwal/zerodha/client/src/components/AIPrediction/AIPrediction.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport './AIPrediction.css';\r\n\r\nconst AIPrediction = () => {\r\n  const { symbol } = useParams();\r\n  const navigate = useNavigate();\r\n  const [prediction, setPrediction] = useState(null);\r\n  const [sentiment, setSentiment] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [news, setNews] = useState([]);\r\n  const [priceData, setPriceData] = useState(null);\r\n  const [technicalIndicators, setTechnicalIndicators] = useState(null);\r\n  const [marketSentiment, setMarketSentiment] = useState(null);\r\n  const [volumeData, setVolumeData] = useState({ average: null, current: null, trend: null });\r\n  const [priceTrend, setPriceTrend] = useState({ direction: null, strength: null });\r\n\r\n  // API Keys (consider moving these to environment variables)\r\n  const FINNHUB_API_KEY = 'd1aopp9r01qjhvtqeebgd1aopp9r01qjhvtqeec0';\r\n  const OPENROUTER_API_KEY = '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';\r\n  const ALPHA_VANTAGE_KEY = 'OH0ZQBRUAB4ABC4X';\r\n  const POLYGON_API_KEY = 'TpJTOM9gDn4q_3d1L0Gyp4mFlap7OSLh';\r\n  const TWELVE_DATA_KEY = '689a986b8a534491b05fff638cd7f1b1';\r\n\r\n  // Clean AI response by removing markdown and formatting\r\n  const cleanPredictionText = (text) => {\r\n    return text\r\n      .replace(/^#+\\s*/gm, '') // Remove markdown headers\r\n      .replace(/\\*\\*(.*?)\\*\\*/g, '$1') // Remove bold markdown\r\n      .replace(/\\[(.*?)\\]\\(.*?\\)/g, '$1') // Remove markdown links\r\n      .split('\\n')\r\n      .filter(line => line.trim() !== '') // Remove empty lines\r\n      .map(line => line.trim());\r\n  };\r\n\r\n  // Fetch technical indicators from multiple sources\r\n  const fetchTechnicalIndicators = async (symbol) => {\r\n    try {\r\n      // Fetch from Alpha Vantage\r\n      const alphaResponse = await axios.get(\r\n        `https://www.alphavantage.co/query?function=RSI&symbol=${symbol}&interval=daily&time_period=14&series_type=close&apikey=${ALPHA_VANTAGE_KEY}`\r\n      );\r\n      \r\n      // Fetch from Twelve Data (fallback)\r\n      const twelveResponse = await axios.get(\r\n        `https://api.twelvedata.com/rsi?symbol=${symbol}&interval=1day&outputsize=30&apikey=${TWELVE_DATA_KEY}`\r\n      );\r\n      \r\n      // Process indicators\r\n      const indicators = {\r\n        rsi: alphaResponse.data?.TechnicalAnalysis?.RSI || twelveResponse.data?.values?.[0]?.rsi || null,\r\n        // Add more indicators as needed\r\n      };\r\n      \r\n      setTechnicalIndicators(indicators);\r\n      return indicators;\r\n    } catch (err) {\r\n      console.error(\"Error fetching technical indicators:\", err);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Fetch broader market sentiment\r\n const fetchMarketSentiment = async () => {\r\n  try {\r\n    // Fetch fear and greed index\r\n    const fgiResponse = await axios.get(\r\n      'https://api.alternative.me/fng/?limit=1'\r\n    );\r\n    \r\n    // Fetch major indices performance\r\n    const indicesResponse = await axios.get(\r\n      `https://www.alphavantage.co/query?function=BATCH_STOCK_QUOTES&symbols=SPY,QQQ,DIA&apikey=${ALPHA_VANTAGE_KEY}`\r\n    );\r\n    \r\n    console.log(indicesResponse);\r\n    // Correct the property name from StockQuotes to Stock Quotes\r\n    const quotes = indicesResponse.data['Stock Quotes'] || [];\r\n    \r\n    const sentimentData = {\r\n      fearGreedIndex: fgiResponse.data?.data?.[0]?.value || null,\r\n      spyChange: quotes[0]?.['09. change'] || null,\r\n      qqqChange: quotes[1]?.['09. change'] || null,\r\n      diaChange: quotes[2]?.['09. change'] || null,\r\n    };\r\n    \r\n    setMarketSentiment(sentimentData);\r\n    return sentimentData;\r\n  } catch (err) {\r\n    console.error(\"Error fetching market sentiment:\", err);\r\n    return null;\r\n  }\r\n};\r\n\r\n  // Enhanced sentiment analysis with NLP techniques\r\n  const calculateEnhancedSentiment = (priceChange, newsItems, technicalIndicators, marketSentiment) => {\r\n    // Base sentiment from price change (-1 to 1)\r\n    const priceChangeNum = parseFloat(priceChange) || 0;\r\n    let sentimentScore = Math.min(1, Math.max(-1, priceChangeNum / 5));\r\n    \r\n    // Technical indicators influence\r\n    if (technicalIndicators?.rsi) {\r\n      const rsi = parseFloat(technicalIndicators.rsi);\r\n      // RSI between 30-70 is neutral, below 30 is oversold (bullish), above 70 is overbought (bearish)\r\n      const rsiInfluence = rsi < 30 ? 0.2 : rsi > 70 ? -0.2 : 0;\r\n      sentimentScore += rsiInfluence;\r\n    }\r\n    \r\n    // Market sentiment influence\r\n    if (marketSentiment) {\r\n      // Fear and greed index (0-100, 0=extreme fear, 100=extreme greed)\r\n      const fgi = parseFloat(marketSentiment.fearGreedIndex) || 50;\r\n      const fgiInfluence = (fgi - 50) / 100; // Normalize to -0.5 to 0.5\r\n      sentimentScore += fgiInfluence * 0.3;\r\n      \r\n      // Major indices performance\r\n      const spyChange = parseFloat(marketSentiment.spyChange) || 0;\r\n      const qqqChange = parseFloat(marketSentiment.qqqChange) || 0;\r\n      const diaChange = parseFloat(marketSentiment.diaChange) || 0;\r\n      const marketPerformance = (spyChange + qqqChange + diaChange) / 3;\r\n      sentimentScore += marketPerformance / 10;\r\n    }\r\n    \r\n    // Enhanced news analysis with more sophisticated NLP\r\n    if (newsItems && newsItems.length > 0) {\r\n      let newsSentiment = 0;\r\n      const sentimentWords = {\r\n        positive: ['up', 'rise', 'gain', 'strong', 'beat', 'bullish', 'buy', 'outperform', 'positive', 'growth'],\r\n        negative: ['down', 'fall', 'drop', 'weak', 'miss', 'bearish', 'sell', 'underperform', 'negative', 'decline'],\r\n        strongPositive: ['surge', 'soar', 'rocket', 'record high', 'breakout', 'upgrade'],\r\n        strongNegative: ['plunge', 'crash', 'collapse', 'record low', 'downgrade', 'bankrupt']\r\n      };\r\n      \r\n      newsItems.forEach(item => {\r\n        const headline = item.headline.toLowerCase();\r\n        const summary = (item.summary || '').toLowerCase();\r\n        \r\n        // Check for sentiment words with different weights\r\n        sentimentWords.strongPositive.forEach(word => {\r\n          if (headline.includes(word) || summary.includes(word)) {\r\n            newsSentiment += 0.3;\r\n          }\r\n        });\r\n        \r\n        sentimentWords.positive.forEach(word => {\r\n          if (headline.includes(word) || summary.includes(word)) {\r\n            newsSentiment += 0.1;\r\n          }\r\n        });\r\n        \r\n        sentimentWords.negative.forEach(word => {\r\n          if (headline.includes(word) || summary.includes(word)) {\r\n            newsSentiment -= 0.1;\r\n          }\r\n        });\r\n        \r\n        sentimentWords.strongNegative.forEach(word => {\r\n          if (headline.includes(word) || summary.includes(word)) {\r\n            newsSentiment -= 0.3;\r\n          }\r\n        });\r\n        \r\n        // Check for sentiment shifters\r\n        if (headline.includes('but') || summary.includes('however')) {\r\n          newsSentiment *= 0.7; // Reduce sentiment impact for contradictory statements\r\n        }\r\n        \r\n        if (headline.includes('!')) {\r\n          newsSentiment *= 1.2; // Amplify sentiment for emphatic statements\r\n        }\r\n      });\r\n      \r\n      // Average news sentiment and combine with other factors\r\n      newsSentiment = newsSentiment / newsItems.length;\r\n      sentimentScore = (sentimentScore * 0.5) + (newsSentiment * 0.3) + \r\n                      ((technicalIndicators ? 0.1 : 0) + (marketSentiment ? 0.1 : 0));\r\n    }\r\n    \r\n    // Normalize between -1 and 1\r\n    sentimentScore = Math.min(1, Math.max(-1, sentimentScore));\r\n    \r\n    // Determine sentiment label with more granularity\r\n    let sentimentLabel;\r\n    if (sentimentScore > 0.6) {\r\n      sentimentLabel = 'extremely bullish';\r\n    } else if (sentimentScore > 0.3) {\r\n      sentimentLabel = 'strongly bullish';\r\n    } else if (sentimentScore > 0.1) {\r\n      sentimentLabel = 'bullish';\r\n    } else if (sentimentScore < -0.6) {\r\n      sentimentLabel = 'extremely bearish';\r\n    } else if (sentimentScore < -0.3) {\r\n      sentimentLabel = 'strongly bearish';\r\n    } else if (sentimentScore < -0.1) {\r\n      sentimentLabel = 'bearish';\r\n    } else {\r\n      sentimentLabel = 'neutral';\r\n    }\r\n    \r\n    return {\r\n      score: sentimentScore.toFixed(2),\r\n      label: sentimentLabel,\r\n      confidence: Math.abs(sentimentScore) > 0.5 ? 'high' : \r\n                 Math.abs(sentimentScore) > 0.2 ? 'medium' : 'low'\r\n    };\r\n  };\r\n\r\n  // Fetch historical data for trend analysis with fallbacks\r\n  const fetchHistoricalData = async (symbol) => {\r\n    try {\r\n      // Try Alpha Vantage first\r\n      const alphaResponse = await axios.get(\r\n        `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol}&outputsize=compact&apikey=${ALPHA_VANTAGE_KEY}`\r\n      );\r\n      \r\n      let timeSeries = alphaResponse.data['Time Series (Daily)'];\r\n      let source = 'Alpha Vantage';\r\n      \r\n      // Fallback to Twelve Data if Alpha Vantage fails\r\n      if (!timeSeries) {\r\n        const twelveResponse = await axios.get(\r\n          `https://api.twelvedata.com/time_series?symbol=${symbol}&interval=1day&outputsize=5&apikey=${TWELVE_DATA_KEY}`\r\n        );\r\n        timeSeries = twelveResponse.data?.values?.reduce((acc, val) => {\r\n          acc[val.datetime] = {\r\n            '4. close': val.close,\r\n            '5. volume': val.volume\r\n          };\r\n          return acc;\r\n        }, {});\r\n        source = 'Twelve Data';\r\n      }\r\n      \r\n      // Fallback to Polygon if both fail\r\n      if (!timeSeries) {\r\n        const polygonResponse = await axios.get(\r\n          `https://api.polygon.io/v2/aggs/ticker/${symbol}/range/1/day/${new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]}/${new Date().toISOString().split('T')[0]}?apiKey=${POLYGON_API_KEY}`\r\n        );\r\n        timeSeries = polygonResponse.data?.results?.reduce((acc, val) => {\r\n          const date = new Date(val.t).toISOString().split('T')[0];\r\n          acc[date] = {\r\n            '4. close': val.c,\r\n            '5. volume': val.v\r\n          };\r\n          return acc;\r\n        }, {});\r\n        source = 'Polygon';\r\n      }\r\n      \r\n      if (!timeSeries) {\r\n        console.log(\"No historical data available from any source\");\r\n        return null;\r\n      }\r\n      \r\n      const dates = Object.keys(timeSeries).sort();\r\n      const last5Days = dates.slice(0, 5).map(date => ({\r\n        date,\r\n        close: parseFloat(timeSeries[date]['4. close']),\r\n        volume: parseFloat(timeSeries[date]['5. volume'])\r\n      }));\r\n      \r\n      // Calculate short-term trend\r\n      const priceChange = last5Days[0].close - last5Days[last5Days.length - 1].close;\r\n      const percentChange = (priceChange / last5Days[last5Days.length - 1].close) * 100;\r\n      \r\n      const trend = {\r\n        direction: priceChange > 0 ? 'up' : priceChange < 0 ? 'down' : 'flat',\r\n        strength: Math.abs(percentChange) > 5 ? 'strong' : \r\n                 Math.abs(percentChange) > 2 ? 'moderate' : 'weak',\r\n        percentChange: percentChange.toFixed(2)\r\n      };\r\n      \r\n      // Calculate volume metrics\r\n      const volumes = last5Days.map(day => day.volume).filter(v => v);\r\n      const avgVolume = volumes.length > 0 ? \r\n        volumes.reduce((sum, vol) => sum + vol, 0) / volumes.length : \r\n        null;\r\n      \r\n      const volumeTrend = volumes.length > 1 ? \r\n        volumes[0] > volumes[volumes.length - 1] * 1.2 ? 'increasing' :\r\n        volumes[0] < volumes[volumes.length - 1] * 0.8 ? 'decreasing' : 'stable' : \r\n        'unknown';\r\n      \r\n      setPriceTrend(trend);\r\n      setVolumeData({\r\n        average: avgVolume,\r\n        current: last5Days[0]?.volume || null,\r\n        trend: volumeTrend,\r\n        source\r\n      });\r\n      \r\n      return {\r\n        last5Days,\r\n        trend,\r\n        volume: last5Days[0]?.volume || null,\r\n        source\r\n      };\r\n    } catch (err) {\r\n      console.error(\"Error fetching historical data:\", err);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Generate AI prediction with enhanced data\r\n  const generateEnhancedPrediction = async (stockSymbol) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // Step 1: Gather all data from APIs in parallel\r\n      const [\r\n        priceResponse, \r\n        newsResponse,\r\n        technicalIndicators,\r\n        marketSentiment,\r\n        historicalData\r\n      ] = await Promise.all([\r\n        axios.get(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${stockSymbol}&apikey=${ALPHA_VANTAGE_KEY}`),\r\n        axios.get(`https://finnhub.io/api/v1/company-news?symbol=${stockSymbol}&from=${new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString().split('T')[0]}&to=${new Date().toISOString().split('T')[0]}&token=${FINNHUB_API_KEY}`),\r\n        fetchTechnicalIndicators(stockSymbol),\r\n        fetchMarketSentiment(),\r\n        fetchHistoricalData(stockSymbol)\r\n      ]);\r\n\r\n      // Process price data\r\n      const priceData = priceResponse.data['Global Quote'] || {};\r\n      const priceChange = priceData['10. change percent'] || '0%';\r\n      setPriceData({\r\n        current: priceData['05. price'],\r\n        change: priceData['09. change'],\r\n        changePercent: priceChange,\r\n        volume: volumeData.current || historicalData?.volume || null\r\n      });\r\n\r\n      // Process news data\r\n      const recentNews = newsResponse.data\r\n        .filter(item => item.headline && item.image && item.url)\r\n        .slice(0, 5);\r\n      setNews(recentNews);\r\n\r\n      // Calculate enhanced sentiment\r\n      const sentimentAnalysis = calculateEnhancedSentiment(\r\n        priceChange, \r\n        recentNews,\r\n        technicalIndicators,\r\n        marketSentiment\r\n      );\r\n      setSentiment(sentimentAnalysis);\r\n\r\n      // Prepare comprehensive data for AI\r\n      const latestNews = recentNews.length > 0 ? \r\n        recentNews.slice(0, 3).map(item => item.headline).join('\\n- ') : \r\n        'No recent news available';\r\n      \r\n      const technicalSummary = technicalIndicators ? \r\n        `RSI: ${technicalIndicators.rsi || 'N/A'}` : \r\n        'No technical indicators available';\r\n      \r\n      const marketSummary = marketSentiment ? \r\n        `Market Sentiment: Fear/Greed Index ${marketSentiment.fearGreedIndex || 'N/A'}, \r\n         SPY: ${marketSentiment.spyChange || 'N/A'}, \r\n         QQQ: ${marketSentiment.qqqChange || 'N/A'}, \r\n         DIA: ${marketSentiment.diaChange || 'N/A'}` : \r\n        'No market sentiment data available';\r\n      \r\n      const historicalSummary = historicalData ? \r\n        `Recent trend: ${priceTrend.direction} (${priceTrend.strength}, ${priceTrend.percentChange}%), \r\n         Volume: ${volumeData.current ? volumeData.current.toLocaleString() : 'N/A'} (${volumeData.trend}), \r\n         Avg Volume: ${volumeData.average ? volumeData.average.toLocaleString() : 'N/A'}` : \r\n        'Limited historical data available';\r\n\r\n      // Step 2: Send to AI for enhanced prediction\r\n      const response = await axios.post('https://openrouter.ai/api/v1/chat/completions', {\r\n        model: \"anthropic/claude-3-haiku\",\r\n        messages: [\r\n          { \r\n            \"role\": \"system\", \r\n            \"content\": `You are an advanced stock prediction AI that analyzes multiple data points to forecast stock movements.\r\n                        Provide a detailed prediction for the next 24 hours including:\r\n                        - Predicted direction and percentage change with confidence interval\r\n                        - Key technical factors (RSI, volume, trends)\r\n                        - Market sentiment context\r\n                        - News sentiment analysis\r\n                        - Potential support/resistance levels\r\n                        - Risk factors to consider\r\n                        - Trading strategy suggestion (if appropriate)\r\n                        - Important disclaimer about predictions being speculative\r\n                        \r\n                        Format your response with clear sections using markdown headers and bullet points.\r\n                        Current sentiment: ${sentimentAnalysis.label} (${sentimentAnalysis.score})\r\n                        Confidence: ${sentimentAnalysis.confidence}`\r\n          },\r\n          { \r\n            \"role\": \"user\", \r\n            \"content\": `Generate a comprehensive 24-hour prediction for ${stockSymbol} based on:\r\n                        - Current price: ${priceData['05. price']}\r\n                        - Price change: ${priceChange}\r\n                        - Volume: ${volumeData.current?.toLocaleString() || 'N/A'} (${volumeData.trend || 'trend unknown'})\r\n                        - Avg Volume: ${volumeData.average?.toLocaleString() || 'N/A'}\r\n                        - Price Trend: ${priceTrend.direction || 'unknown'} (${priceTrend.strength || 'unknown'}, ${priceTrend.percentChange || 'N/A'}%)\r\n                        - Technical indicators: ${technicalSummary}\r\n                        - Market context: ${marketSummary}\r\n                        - Latest news headlines:\r\n                          - ${latestNews}`\r\n          }\r\n        ],\r\n        max_tokens: 1500\r\n      }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${OPENROUTER_API_KEY}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      const cleanedPrediction = cleanPredictionText(response.data.choices[0].message.content);\r\n      setPrediction(cleanedPrediction);\r\n\r\n    } catch (err) {\r\n      console.error(\"Error generating prediction:\", err);\r\n      setError('Failed to generate prediction. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch additional market data\r\n  const fetchStockNews = async (stockSymbol) => {\r\n    try {\r\n      // Try multiple news sources\r\n      const [finnhubNews, polygonNews] = await Promise.all([\r\n        axios.get(\r\n          `https://finnhub.io/api/v1/company-news?symbol=${stockSymbol}&from=${new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]}&to=${new Date().toISOString().split('T')[0]}&token=${FINNHUB_API_KEY}`\r\n        ),\r\n        axios.get(\r\n          `https://api.polygon.io/v2/reference/news?ticker=${stockSymbol}&limit=5&apiKey=${POLYGON_API_KEY}`\r\n        ).catch(() => ({ data: { results: [] }})) // Fallback if fails\r\n      ]);\r\n      \r\n      // Combine and filter news\r\n      const allNews = [\r\n        ...(finnhubNews.data || []),\r\n        ...(polygonNews.data?.results || [])\r\n      ];\r\n      \r\n      const filteredNews = allNews\r\n        .filter(item => item.headline && (item.image || item.thumbnail_url) && item.url)\r\n        .slice(0, 5)\r\n        .map(item => ({\r\n          headline: item.headline || item.title,\r\n          summary: item.summary || item.description,\r\n          image: item.image || item.thumbnail_url,\r\n          url: item.url || item.article_url,\r\n          source: item.source || (item.publisher ? item.publisher.name : 'Unknown'),\r\n          date: item.datetime || item.published_utc\r\n        }));\r\n      \r\n      setNews(filteredNews);\r\n    } catch (err) {\r\n      console.error(\"Error fetching news:\", err);\r\n    }\r\n  };\r\n\r\n  // Load all data when symbol changes\r\n  useEffect(() => {\r\n    if (symbol) {\r\n      setLoading(true);\r\n      generateEnhancedPrediction(symbol);\r\n      fetchStockNews(symbol);\r\n    }\r\n  }, [symbol]);\r\n\r\n  if (!symbol) {\r\n    return (\r\n      <div className=\"ai-prediction-container\">\r\n        <div className=\"empty-state\">\r\n          <div className=\"empty-icon\">📈</div>\r\n          <h3>No Stock Selected</h3>\r\n          <p>Please select a stock symbol to view AI predictions</p>\r\n          <button onClick={() => navigate('/watchlist')} className=\"primary-button\">\r\n            Browse Stocks\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\nreturn (\r\n    <div className=\"ai-prediction-container dark-theme\">\r\n      <div className=\"ai-prediction-header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"stock-header\">\r\n            <h1 className=\"stock-symbol\">{symbol.toUpperCase()}</h1>\r\n            {priceData && (\r\n              <div className=\"price-container\">\r\n                \r\n                {priceData.volume && (\r\n                  <div className=\"volume-display\">\r\n                    <span className=\"volume-label\">VOLUME:</span>\r\n                    <span className=\"volume-value\">{priceData.volume.toLocaleString()}</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <p className=\"stock-name\">Advanced 24-Hour AI Prediction Analysis</p>\r\n        </div>\r\n        <button onClick={() => navigate(-1)} className=\"back-button\">\r\n          ← Back\r\n        </button>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <div className=\"loading-state\">\r\n          <div className=\"loading-animation\">\r\n            <div className=\"loading-spinner\"></div>\r\n          </div>\r\n          <p>Analyzing market data for {symbol.toUpperCase()}...</p>\r\n          <p className=\"loading-subtext\">Fetching price data, news, and technical indicators</p>\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"error-state\">\r\n          <div className=\"error-icon\">⚠️</div>\r\n          <h3>Prediction Error</h3>\r\n          <p>{error}</p>\r\n          <button onClick={() => window.location.reload()} className=\"primary-button\">\r\n            Retry Analysis\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n         {prediction && (\r\n  <div className=\"prediction-section\">\r\n    <div className=\"prediction-card glass-card\">\r\n      <div className=\"card-header\">\r\n        <div className=\"sentiment-header\">\r\n          <h2 className=\"prediction-title\">\r\n            <span className=\"title-icon\">✨AI</span>\r\n            AI Stock Analysis\r\n          </h2>\r\n          <div className={`sentiment-indicator ${sentiment.label.replace(' ', '-')}`}>\r\n            <div className=\"sentiment-badge\">\r\n              <span className=\"sentiment-label\">{sentiment.label}</span>\r\n              <span className=\"sentiment-confidence-bubble\">{sentiment.confidence} confidence</span>\r\n            </div>\r\n            <div className=\"sentiment-meter\">\r\n              <div \r\n                className=\"meter-fill\" \r\n                style={{\r\n                  width: `${(parseFloat(sentiment.score) + 1) * 50}%`,\r\n                  background: sentiment.score >= 0 ? \r\n                    `linear-gradient(90deg, #00C805 ${Math.abs(sentiment.score) * 100}%, #f0f0f0 0%)` :\r\n                    `linear-gradient(90deg, #FF3B30 ${Math.abs(sentiment.score) * 100}%, #f0f0f0 0%)`\r\n                }}\r\n              ></div>\r\n              <div className=\"meter-labels\">\r\n                <span>Bearish</span>\r\n                <span>Neutral</span>\r\n                <span>Bullish</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"prediction-content\">\r\n        \r\n        \r\n        <div className=\"full-prediction\">\r\n          <h3>Detailed Analysis</h3>\r\n          {prediction.map((line, i) => (\r\n            <p key={i} className=\"prediction-line\">\r\n              {line.startsWith('**') ? (\r\n                <strong>{line.replace(/\\*\\*/g, '')}</strong>\r\n              ) : (\r\n                line\r\n              )}\r\n            </p>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"prediction-footer\">\r\n        <div className=\"action-bar\">\r\n          <button \r\n            onClick={() => generateEnhancedPrediction(symbol)} \r\n            className=\"refresh-button\"\r\n          >\r\n            <span className=\"refresh-icon\">🔄</span> Update Analysis\r\n          </button>\r\n          <div className=\"last-updated\">\r\n            Last updated: {new Date().toLocaleTimeString()}\r\n          </div>\r\n        </div>\r\n        <div className=\"disclaimer\">\r\n          <div className=\"disclaimer-icon\">⚠️</div>\r\n          <p>\r\n            <strong>Disclaimer:</strong> This AI-generated forecast is for informational purposes only \r\n            and should not be considered financial advice. Past performance is not indicative \r\n            of future results.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)}\r\n\r\n          <div className=\"data-sections\">\r\n            <div className=\"technical-section\">\r\n              <h2 className=\"section-title\">Technical Indicators</h2>\r\n              <div className=\"indicators-grid\">\r\n                <div className=\"indicator-card glass-card\">\r\n                  <h3>RSI (14-day)</h3>\r\n                  <div className=\"indicator-value-container\">\r\n                    <span className=\"indicator-value\">{technicalIndicators?.rsi || '--'}</span>\r\n                    <div className={`indicator-status ${\r\n                      !technicalIndicators?.rsi ? 'neutral' : \r\n                      technicalIndicators.rsi > 70 ? 'overbought' : \r\n                      technicalIndicators.rsi < 30 ? 'oversold' : 'neutral'\r\n                    }`}>\r\n                      {!technicalIndicators?.rsi ? 'N/A' : \r\n                       technicalIndicators.rsi > 70 ? 'Overbought' : \r\n                       technicalIndicators.rsi < 30 ? 'Oversold' : 'Neutral'}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"indicator-card glass-card\">\r\n                  <h3>Price Trend</h3>\r\n                  <div className=\"indicator-value-container\">\r\n                    {priceTrend.direction ? (\r\n                      <>\r\n                        <span className={`trend-direction ${priceTrend.direction}`}>\r\n                          {priceTrend.direction.toUpperCase()}\r\n                        </span>\r\n                        <span className=\"trend-strength\">\r\n                          {priceTrend.strength} ({priceTrend.percentChange}%)\r\n                        </span>\r\n                      </>\r\n                    ) : (\r\n                      <span className=\"no-data\">No trend data</span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"indicator-card glass-card\">\r\n                  <h3>Volume Analysis</h3>\r\n                  <div className=\"volume-metrics\">\r\n                    <div className=\"volume-metric\">\r\n                      <span className=\"metric-label\">Current:</span>\r\n                      <span className=\"metric-value\">\r\n                        {volumeData.current ? volumeData.current.toLocaleString() : '--'}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"volume-metric\">\r\n                      <span className=\"metric-label\">Average:</span>\r\n                      <span className=\"metric-value\">\r\n                        {volumeData.average ? volumeData.average.toLocaleString() : '--'}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"volume-trend\">\r\n                      <span className=\"trend-label\">Trend:</span>\r\n                      <span className={`trend-value ${volumeData.trend || 'unknown'}`}>\r\n                        {volumeData.trend || 'unknown'}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"market-section\">\r\n              <h2 className=\"section-title\">Market Sentiment</h2>\r\n              {marketSentiment ? (\r\n                <div className=\"market-grid\">\r\n                  <div className=\"market-card glass-card\">\r\n                    <h3>Fear & Greed Index</h3>\r\n                    <div className=\"gauge-container\">\r\n                      <div \r\n                        className=\"gauge-fill\" \r\n                        style={{ width: `${marketSentiment.fearGreedIndex}%` }}\r\n                      ></div>\r\n                      <span className=\"gauge-value\">{marketSentiment.fearGreedIndex}</span>\r\n                    </div>\r\n                    <p className=\"market-analysis\">\r\n                      {marketSentiment.fearGreedIndex > 70 ? 'Extreme Greed' :\r\n                       marketSentiment.fearGreedIndex < 30 ? 'Extreme Fear' : 'Neutral'}\r\n                    </p>\r\n                  </div>\r\n                  \r\n                  <div className=\"market-card glass-card\">\r\n                    <h3>SPY (S&P 500)</h3>\r\n                    <div className={`index-change ${marketSentiment.spyChange >= 0 ? 'positive' : 'negative'}`}>\r\n                      {marketSentiment.spyChange || '--'}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"market-card glass-card\">\r\n                    <h3>QQQ (Nasdaq)</h3>\r\n                    <div className={`index-change ${marketSentiment.qqqChange >= 0 ? 'positive' : 'negative'}`}>\r\n                      {marketSentiment.qqqChange || '--'}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"market-card glass-card\">\r\n                    <h3>DIA (Dow Jones)</h3>\r\n                    <div className={`index-change ${marketSentiment.diaChange >= 0 ? 'positive' : 'negative'}`}>\r\n                      {marketSentiment.diaChange || '--'}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"empty-market\">\r\n                  <p>No market sentiment data available</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"news-section\">\r\n            <div className=\"section-header\">\r\n              <h2 className=\"section-title\">Latest Market News</h2>\r\n              <button onClick={() => fetchStockNews(symbol)} className=\"refresh-news\">\r\n                ↻ Refresh News\r\n              </button>\r\n            </div>\r\n            {news.length > 0 ? (\r\n              <div className=\"news-grid\">\r\n                {news.map((item, index) => (\r\n                  <div key={index} className=\"news-card glass-card\">\r\n                    <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      <div className=\"news-image-container\">\r\n                        <img \r\n                          src={item.image} \r\n                          alt={item.headline} \r\n                          className=\"news-image\"\r\n                          onError={(e) => {\r\n                            e.target.onerror = null;\r\n                            e.target.src = 'https://via.placeholder.com/300x200?text=No+Image';\r\n                          }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"news-content\">\r\n                        <h3 className=\"news-headline\">{item.headline}</h3>\r\n                        <div className=\"news-meta\">\r\n                          <span className=\"news-source\">{item.source}</span>\r\n                          <span className=\"news-date\">\r\n                            {item.date ? new Date(item.date).toLocaleDateString() : 'Recent'}\r\n                          </span>\r\n                        </div>\r\n                        <p className=\"news-summary\">{item.summary || 'Read more...'}</p>\r\n                      </div>\r\n                    </a>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"empty-news\">\r\n                <p>No recent news found for {symbol.toUpperCase()}</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default AIPrediction;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shagun Khandelwal\\\\zerodha\\\\client\\\\src\\\\components\\\\Watchlist\\\\Watchlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Watchlist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Watchlist = () => {\n  _s();\n  const FINNHUB_API_KEY = 'd17stm1r01qteuvpqihgd17stm1r01qteuvpqii0'; // Your API key\n  const [stocks, setStocks] = useState([{\n    symbol: 'RELIANCE',\n    price: 2456.75,\n    change: 12.50\n  }, {\n    symbol: 'HDFCBANK',\n    price: 1567.30,\n    change: 8.75\n  }, {\n    symbol: 'INFY',\n    price: 1678.90,\n    change: -3.20\n  }, {\n    symbol: 'TCS',\n    price: 3452.10,\n    change: -5.25\n  }]);\n  const [indices, setIndices] = useState([{\n    name: 'NIFTY 50',\n    value: 10865.65,\n    change: -1.37,\n    changePercent: -1.37\n  }, {\n    name: 'SENSEX',\n    value: 35400.61,\n    change: 1.41,\n    changePercent: 1.41\n  }]);\n  const [error, setError] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const ws = useRef(null);\n  const retryCount = useRef(0);\n  const maxRetries = 3;\n\n  // WebSocket connection management\n  const connectWebSocket = () => {\n    ws.current = new WebSocket(`wss://ws.finnhub.io?token=${FINNHUB_API_KEY}`);\n    ws.current.onopen = () => {\n      console.log('WebSocket connected');\n      setIsConnected(true);\n      retryCount.current = 0;\n\n      // Subscribe to symbols\n      const symbols = [...stocks.map(stock => `BSE:${stock.symbol}`), 'NSE:NIFTY_50', 'BSE:SENSEX'];\n      symbols.forEach(symbol => {\n        ws.current.send(JSON.stringify({\n          type: 'subscribe',\n          symbol\n        }));\n      });\n    };\n    ws.current.onmessage = e => {\n      const data = JSON.parse(e.data);\n      if (data.type === 'trade') {\n        updateData(data);\n      }\n    };\n    ws.current.onerror = err => {\n      console.error('WebSocket error:', err);\n      setError('Realtime connection issue. Retrying...');\n      setIsConnected(false);\n    };\n    ws.current.onclose = () => {\n      setIsConnected(false);\n      if (retryCount.current < maxRetries) {\n        retryCount.current += 1;\n        setTimeout(connectWebSocket, 3000 * retryCount.current); // Exponential backoff\n      } else {\n        setError('Failed to connect to realtime data. Using fallback API.');\n        fetchInitialData(); // Fallback to REST API\n      }\n    };\n  };\n\n  // Update stocks and indices\n  const updateData = data => {\n    const symbol = data.symbol.split(':')[1];\n\n    // Update stocks\n    setStocks(prev => prev.map(stock => stock.symbol === symbol ? {\n      ...stock,\n      price: data.p,\n      change: parseFloat((data.p - (stock.price - stock.change)).toFixed(2))\n    } : stock));\n\n    // Update indices\n    if (data.symbol === 'NSE:NIFTY_50' || data.symbol === 'BSE:SENSEX') {\n      setIndices(prev => prev.map(index => index.name.includes(symbol) ? {\n        ...index,\n        value: data.p,\n        change: parseFloat((data.p - (index.value - index.change)).toFixed(2)),\n        changePercent: parseFloat(((data.p - (index.value - index.change)) / (index.value - index.change) * 100).toFixed(2))\n      } : index));\n    }\n  };\n\n  // Fallback REST API\n  const fetchInitialData = async () => {\n    try {\n      // Fetch all stock data\n      const stockPromises = stocks.map(stock => fetch(`https://finnhub.io/api/v1/quote?symbol=${stock.symbol}&token=${FINNHUB_API_KEY}`).then(res => res.json()));\n      const stockResults = await Promise.all(stockPromises);\n      setStocks(prev => prev.map((stock, i) => ({\n        ...stock,\n        price: stockResults[i].c,\n        change: parseFloat((stockResults[i].c - stockResults[i].pc).toFixed(2))\n      })));\n\n      // Fetch indices\n      const [nifty, sensex] = await Promise.all([fetch(`https://finnhub.io/api/v1/quote?symbol=^NSEI&token=${FINNHUB_API_KEY}`).then(res => res.json()), fetch(`https://finnhub.io/api/v1/quote?symbol=^BSESN&token=${FINNHUB_API_KEY}`).then(res => res.json())]);\n      setIndices([{\n        name: 'NIFTY 50',\n        value: nifty.c,\n        change: parseFloat((nifty.c - nifty.pc).toFixed(2)),\n        changePercent: parseFloat(((nifty.c - nifty.pc) / nifty.pc * 100).toFixed(2))\n      }, {\n        name: 'SENSEX',\n        value: sensex.c,\n        change: parseFloat((sensex.c - sensex.pc).toFixed(2)),\n        changePercent: parseFloat(((sensex.c - sensex.pc) / sensex.pc * 100).toFixed(2))\n      }]);\n    } catch (err) {\n      console.error('Fallback API failed:', err);\n      setError('Unable to fetch latest data. Showing cached values.');\n    }\n  };\n  useEffect(() => {\n    connectWebSocket();\n    return () => {\n      if (ws.current) {\n        ws.current.close();\n      }\n    };\n  }, []);\n  const formatNumber = num => {\n    return num.toLocaleString('en-IN', {\n      maximumFractionDigits: 2\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"watchlist\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connection-status\",\n      children: [isConnected ? 'ðŸŸ¢ Live' : 'ðŸ”´ Disconnected', error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"market-indices\",\n      children: indices.map((index, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"index-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"index-name\",\n          children: index.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"index-value\",\n          children: formatNumber(index.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `index-change ${index.change >= 0 ? 'positive' : 'negative'}`,\n          children: [index.change >= 0 ? '+' : '', index.change, \" (\", index.changePercent, \"%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stock-list\",\n      children: stocks.map((stock, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stock-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-symbol\",\n          children: stock.symbol\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stock-price\",\n          children: formatNumber(stock.price)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `stock-change ${stock.change >= 0 ? 'positive' : 'negative'}`,\n          children: [stock.change >= 0 ? '+' : '', stock.change]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(Watchlist, \"mQx1TaAj4hNL3Fd7YA8XmGYXozA=\");\n_c = Watchlist;\nexport default Watchlist;\nvar _c;\n$RefreshReg$(_c, \"Watchlist\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Watchlist","_s","FINNHUB_API_KEY","stocks","setStocks","symbol","price","change","indices","setIndices","name","value","changePercent","error","setError","isConnected","setIsConnected","ws","retryCount","maxRetries","connectWebSocket","current","WebSocket","onopen","console","log","symbols","map","stock","forEach","send","JSON","stringify","type","onmessage","e","data","parse","updateData","onerror","err","onclose","setTimeout","fetchInitialData","split","prev","p","parseFloat","toFixed","index","includes","stockPromises","fetch","then","res","json","stockResults","Promise","all","i","c","pc","nifty","sensex","close","formatNumber","num","toLocaleString","maximumFractionDigits","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shagun Khandelwal/zerodha/client/src/components/Watchlist/Watchlist.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './Watchlist.css';\r\n\r\nconst Watchlist = () => {\r\n  const FINNHUB_API_KEY = 'd17stm1r01qteuvpqihgd17stm1r01qteuvpqii0'; // Your API key\r\n  const [stocks, setStocks] = useState([\r\n    { symbol: 'RELIANCE', price: 2456.75, change: 12.50 },\r\n    { symbol: 'HDFCBANK', price: 1567.30, change: 8.75 },\r\n    { symbol: 'INFY', price: 1678.90, change: -3.20 },\r\n    { symbol: 'TCS', price: 3452.10, change: -5.25 }\r\n  ]);\r\n\r\n  const [indices, setIndices] = useState([\r\n    { name: 'NIFTY 50', value: 10865.65, change: -1.37, changePercent: -1.37 },\r\n    { name: 'SENSEX', value: 35400.61, change: 1.41, changePercent: 1.41 }\r\n  ]);\r\n\r\n  const [error, setError] = useState(null);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const ws = useRef(null);\r\n  const retryCount = useRef(0);\r\n  const maxRetries = 3;\r\n\r\n  // WebSocket connection management\r\n  const connectWebSocket = () => {\r\n    ws.current = new WebSocket(`wss://ws.finnhub.io?token=${FINNHUB_API_KEY}`);\r\n\r\n    ws.current.onopen = () => {\r\n      console.log('WebSocket connected');\r\n      setIsConnected(true);\r\n      retryCount.current = 0;\r\n      \r\n      // Subscribe to symbols\r\n      const symbols = [\r\n        ...stocks.map(stock => `BSE:${stock.symbol}`),\r\n        'NSE:NIFTY_50',\r\n        'BSE:SENSEX'\r\n      ];\r\n      \r\n      symbols.forEach(symbol => {\r\n        ws.current.send(JSON.stringify({ type: 'subscribe', symbol }));\r\n      });\r\n    };\r\n\r\n    ws.current.onmessage = (e) => {\r\n      const data = JSON.parse(e.data);\r\n      if (data.type === 'trade') {\r\n        updateData(data);\r\n      }\r\n    };\r\n\r\n    ws.current.onerror = (err) => {\r\n      console.error('WebSocket error:', err);\r\n      setError('Realtime connection issue. Retrying...');\r\n      setIsConnected(false);\r\n    };\r\n\r\n    ws.current.onclose = () => {\r\n      setIsConnected(false);\r\n      if (retryCount.current < maxRetries) {\r\n        retryCount.current += 1;\r\n        setTimeout(connectWebSocket, 3000 * retryCount.current); // Exponential backoff\r\n      } else {\r\n        setError('Failed to connect to realtime data. Using fallback API.');\r\n        fetchInitialData(); // Fallback to REST API\r\n      }\r\n    };\r\n  };\r\n\r\n  // Update stocks and indices\r\n  const updateData = (data) => {\r\n    const symbol = data.symbol.split(':')[1];\r\n    \r\n    // Update stocks\r\n    setStocks(prev => \r\n      prev.map(stock => \r\n        stock.symbol === symbol\r\n          ? { \r\n              ...stock, \r\n              price: data.p,\r\n              change: parseFloat((data.p - (stock.price - stock.change)).toFixed(2)) \r\n            }\r\n          : stock\r\n      )\r\n    );\r\n\r\n    // Update indices\r\n    if (data.symbol === 'NSE:NIFTY_50' || data.symbol === 'BSE:SENSEX') {\r\n      setIndices(prev => \r\n        prev.map(index => \r\n          index.name.includes(symbol)\r\n            ? {\r\n                ...index,\r\n                value: data.p,\r\n                change: parseFloat((data.p - (index.value - index.change)).toFixed(2)),\r\n                changePercent: parseFloat(((data.p - (index.value - index.change)) / (index.value - index.change) * 100).toFixed(2))\r\n              }\r\n            : index\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  // Fallback REST API\r\n  const fetchInitialData = async () => {\r\n    try {\r\n      // Fetch all stock data\r\n      const stockPromises = stocks.map(stock => \r\n        fetch(`https://finnhub.io/api/v1/quote?symbol=${stock.symbol}&token=${FINNHUB_API_KEY}`)\r\n          .then(res => res.json())\r\n      );\r\n      \r\n      const stockResults = await Promise.all(stockPromises);\r\n      \r\n      setStocks(prev => \r\n        prev.map((stock, i) => ({\r\n          ...stock,\r\n          price: stockResults[i].c,\r\n          change: parseFloat((stockResults[i].c - stockResults[i].pc).toFixed(2))\r\n        }))\r\n      );\r\n\r\n      // Fetch indices\r\n      const [nifty, sensex] = await Promise.all([\r\n        fetch(`https://finnhub.io/api/v1/quote?symbol=^NSEI&token=${FINNHUB_API_KEY}`).then(res => res.json()),\r\n        fetch(`https://finnhub.io/api/v1/quote?symbol=^BSESN&token=${FINNHUB_API_KEY}`).then(res => res.json())\r\n      ]);\r\n\r\n      setIndices([\r\n        { \r\n          name: 'NIFTY 50', \r\n          value: nifty.c, \r\n          change: parseFloat((nifty.c - nifty.pc).toFixed(2)),\r\n          changePercent: parseFloat(((nifty.c - nifty.pc) / nifty.pc * 100).toFixed(2))\r\n        },\r\n        { \r\n          name: 'SENSEX', \r\n          value: sensex.c, \r\n          change: parseFloat((sensex.c - sensex.pc).toFixed(2)),\r\n          changePercent: parseFloat(((sensex.c - sensex.pc) / sensex.pc * 100).toFixed(2))\r\n        }\r\n      ]);\r\n\r\n    } catch (err) {\r\n      console.error('Fallback API failed:', err);\r\n      setError('Unable to fetch latest data. Showing cached values.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    connectWebSocket();\r\n    \r\n    return () => {\r\n      if (ws.current) {\r\n        ws.current.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const formatNumber = (num) => {\r\n    return num.toLocaleString('en-IN', { maximumFractionDigits: 2 });\r\n  };\r\n\r\n  return (\r\n    <div className=\"watchlist\">\r\n      <div className=\"connection-status\">\r\n        {isConnected ? 'ðŸŸ¢ Live' : 'ðŸ”´ Disconnected'}\r\n        {error && <span className=\"error-message\">{error}</span>}\r\n      </div>\r\n\r\n      {/* Indices */}\r\n      <div className=\"market-indices\">\r\n        {indices.map((index, i) => (\r\n          <div key={i} className=\"index-card\">\r\n            <div className=\"index-name\">{index.name}</div>\r\n            <div className=\"index-value\">{formatNumber(index.value)}</div>\r\n            <div className={`index-change ${index.change >= 0 ? 'positive' : 'negative'}`}>\r\n              {index.change >= 0 ? '+' : ''}{index.change} ({index.changePercent}%)\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Stocks */}\r\n      <div className=\"stock-list\">\r\n        {stocks.map((stock, i) => (\r\n          <div key={i} className=\"stock-row\">\r\n            <div className=\"stock-symbol\">{stock.symbol}</div>\r\n            <div className=\"stock-price\">{formatNumber(stock.price)}</div>\r\n            <div className={`stock-change ${stock.change >= 0 ? 'positive' : 'negative'}`}>\r\n              {stock.change >= 0 ? '+' : ''}{stock.change}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Watchlist;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shagun Khandelwal\\\\zerodha\\\\client\\\\src\\\\components\\\\AIPrediction\\\\AIPrediction.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './AIPrediction.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AIPrediction = () => {\n  _s();\n  const {\n    symbol\n  } = useParams();\n  const navigate = useNavigate();\n  const [prediction, setPrediction] = useState(null);\n  const [sentiment, setSentiment] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [news, setNews] = useState([]);\n  const [priceData, setPriceData] = useState(null);\n\n  // API Keys\n  const FINNHUB_API_KEY = 'd1aopp9r01qjhvtqeebgd1aopp9r01qjhvtqeec0';\n  const OPENROUTER_API_KEY = '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';\n  const ALPHA_VANTAGE_KEY = 'OH0ZQBRUAB4ABC4X';\n\n  // Clean AI response by removing markdown hashes\n  const cleanPredictionText = text => {\n    return text.replace(/^#+\\s*/gm, '') // Remove markdown headers\n    .replace(/\\*\\*(.*?)\\*\\*/g, '$1') // Remove bold markdown\n    .split('\\n').filter(line => line.trim() !== '') // Remove empty lines\n    .map(line => line.trim());\n  };\n\n  // Calculate sentiment score based on multiple factors\n  const calculateSentiment = (priceChange, newsItems) => {\n    // Base sentiment from price change (-1 to 1)\n    const priceChangeNum = parseFloat(priceChange) || 0;\n    let sentimentScore = Math.min(1, Math.max(-1, priceChangeNum / 5));\n\n    // Analyze news sentiment if available\n    if (newsItems && newsItems.length > 0) {\n      let newsSentiment = 0;\n      const sentimentWords = {\n        positive: ['up', 'rise', 'gain', 'strong', 'beat', 'bullish', 'buy', 'outperform'],\n        negative: ['down', 'fall', 'drop', 'weak', 'miss', 'bearish', 'sell', 'underperform']\n      };\n      newsItems.forEach(item => {\n        const headline = item.headline.toLowerCase();\n        const summary = (item.summary || '').toLowerCase();\n\n        // Check for positive words\n        sentimentWords.positive.forEach(word => {\n          if (headline.includes(word) || summary.includes(word)) {\n            newsSentiment += 0.1;\n          }\n        });\n\n        // Check for negative words\n        sentimentWords.negative.forEach(word => {\n          if (headline.includes(word) || summary.includes(word)) {\n            newsSentiment -= 0.1;\n          }\n        });\n      });\n\n      // Average news sentiment and combine with price sentiment\n      newsSentiment = newsSentiment / newsItems.length;\n      sentimentScore = sentimentScore * 0.6 + newsSentiment * 0.4;\n    }\n\n    // Normalize between -1 and 1\n    sentimentScore = Math.min(1, Math.max(-1, sentimentScore));\n\n    // Determine sentiment label\n    let sentimentLabel;\n    if (sentimentScore > 0.3) {\n      sentimentLabel = 'strong bullish';\n    } else if (sentimentScore > 0.1) {\n      sentimentLabel = 'bullish';\n    } else if (sentimentScore < -0.3) {\n      sentimentLabel = 'strong bearish';\n    } else if (sentimentScore < -0.1) {\n      sentimentLabel = 'bearish';\n    } else {\n      sentimentLabel = 'neutral';\n    }\n    return {\n      score: sentimentScore.toFixed(2),\n      label: sentimentLabel\n    };\n  };\n\n  // Generate AI prediction using OpenRouter API\n  const generateAIPrediction = async stockSymbol => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Step 1: Gather data from APIs\n      const [priceResponse, newsResponse] = await Promise.all([axios.get(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${stockSymbol}&apikey=${ALPHA_VANTAGE_KEY}`), axios.get(`https://finnhub.io/api/v1/company-news?symbol=${stockSymbol}&from=${new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString().split('T')[0]}&to=${new Date().toISOString().split('T')[0]}&token=${FINNHUB_API_KEY}`)]);\n\n      // Process price data\n      const priceData = priceResponse.data['Global Quote'] || {};\n      const priceChange = priceData['10. change percent'] || '0%';\n      setPriceData({\n        current: priceData['05. price'],\n        change: priceData['09. change'],\n        changePercent: priceChange\n      });\n\n      // Process news data\n      const recentNews = newsResponse.data.filter(item => item.headline && item.image && item.url).slice(0, 5);\n      setNews(recentNews);\n\n      // Calculate sentiment\n      const sentimentAnalysis = calculateSentiment(priceChange, recentNews);\n      setSentiment(sentimentAnalysis);\n\n      // Prepare news headlines for AI\n      const latestNews = recentNews.length > 0 ? recentNews.slice(0, 3).map(item => item.headline).join('\\n- ') : 'No recent news available';\n\n      // Step 2: Send to AI for prediction\n      const response = await axios.post('https://openrouter.ai/api/v1/chat/completions', {\n        model: \"openai/gpt-3.5-turbo\",\n        messages: [{\n          \"role\": \"system\",\n          \"content\": `You are an advanced stock prediction AI that analyzes multiple data points to forecast stock movements.\n                        Provide a detailed prediction for the next 24 hours including:\n                        - Predicted direction and percentage change\n                        - Key factors influencing the prediction\n                        - Confidence level (low/medium/high)\n                        - Technical analysis insights\n                        - Important disclaimer about predictions being speculative\n                        \n                        Format your response with clear sections and bullet points for better readability.\n                        Current sentiment: ${sentimentAnalysis.label} (${sentimentAnalysis.score})`\n        }, {\n          \"role\": \"user\",\n          \"content\": `Generate a 24-hour prediction for ${stockSymbol} based on:\n                        - Current price: ${priceData['05. price']}\n                        - Price change: ${priceChange}\n                        - Latest news headlines:\n                          - ${latestNews}`\n        }],\n        max_tokens: 1000\n      }, {\n        headers: {\n          'Authorization': `Bearer ${OPENROUTER_API_KEY}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const cleanedPrediction = cleanPredictionText(response.data.choices[0].message.content);\n      setPrediction(cleanedPrediction);\n    } catch (err) {\n      console.error(\"Error generating prediction:\", err);\n      setError('Failed to generate prediction. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch market news\n  const fetchStockNews = async stockSymbol => {\n    try {\n      const response = await axios.get(`https://finnhub.io/api/v1/company-news?symbol=${stockSymbol}&from=${new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]}&to=${new Date().toISOString().split('T')[0]}&token=${FINNHUB_API_KEY}`);\n      const filteredNews = response.data.filter(item => item.headline && item.image && item.url).slice(0, 5);\n      setNews(filteredNews);\n    } catch (err) {\n      console.error(\"Error fetching news:\", err);\n    }\n  };\n\n  // Load all data when symbol changes\n  useEffect(() => {\n    if (symbol) {\n      setLoading(true);\n      generateAIPrediction(symbol);\n      fetchStockNews(symbol);\n    }\n  }, [symbol]);\n  if (!symbol) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-prediction-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-icon\",\n          children: \"\\uD83D\\uDCC8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No Stock Selected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please select a stock symbol to view AI predictions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/watchlist'),\n          className: \"primary-button\",\n          children: \"Browse Stocks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-prediction-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-prediction-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"stock-symbol\",\n          children: symbol.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), priceData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `price-display ${parseFloat(priceData.change) >= 0 ? 'positive' : 'negative'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"price\",\n            children: [\"$\", priceData.current]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"change\",\n            children: [parseFloat(priceData.change) >= 0 ? '↑' : '↓', priceData.change, \" (\", priceData.changePercent, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"stock-name\",\n          children: \"24-Hour AI Prediction Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(-1),\n        className: \"back-button\",\n        children: \"\\u2190 Back to Watchlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-state\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-animation\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Analyzing market data for \", symbol.toUpperCase(), \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-state\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-icon\",\n        children: \"\\u26A0\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Prediction Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"primary-button\",\n        children: \"Retry Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prediction-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prediction-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sentiment-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `sentiment-dot ${sentiment.label.replace(' ', '-')}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"sentiment-label\",\n                children: [sentiment.label, \" sentiment (\", sentiment.score, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"prediction-title\",\n              children: \"AI Prediction Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prediction-content\",\n            children: prediction.map((line, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"prediction-line\",\n              children: line\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prediction-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"disclaimer\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Disclaimer: This AI-generated forecast is for informational purposes only and should not be considered financial advice.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => generateAIPrediction(symbol),\n              className: \"refresh-button\",\n              children: \"\\u21BB Refresh Prediction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"news-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"section-title\",\n          children: \"Latest Market News\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), news.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"news-grid\",\n          children: news.map((item, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n            href: item.url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"news-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"news-image-container\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.image,\n                alt: item.headline,\n                className: \"news-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"news-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"news-headline\",\n                children: item.headline\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"news-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"news-source\",\n                  children: item.source\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"news-date\",\n                  children: new Date(item.datetime * 1000).toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"news-summary\",\n                children: item.summary || 'Read more...'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-news\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"No recent news found for \", symbol.toUpperCase()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n};\n_s(AIPrediction, \"rEhLYml7d2AxmPikJ+xR2Eg0WtY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AIPrediction;\nexport default AIPrediction;\nvar _c;\n$RefreshReg$(_c, \"AIPrediction\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AIPrediction","_s","symbol","navigate","prediction","setPrediction","sentiment","setSentiment","loading","setLoading","error","setError","news","setNews","priceData","setPriceData","FINNHUB_API_KEY","OPENROUTER_API_KEY","ALPHA_VANTAGE_KEY","cleanPredictionText","text","replace","split","filter","line","trim","map","calculateSentiment","priceChange","newsItems","priceChangeNum","parseFloat","sentimentScore","Math","min","max","length","newsSentiment","sentimentWords","positive","negative","forEach","item","headline","toLowerCase","summary","word","includes","sentimentLabel","score","toFixed","label","generateAIPrediction","stockSymbol","priceResponse","newsResponse","Promise","all","get","Date","now","toISOString","data","current","change","changePercent","recentNews","image","url","slice","sentimentAnalysis","latestNews","join","response","post","model","messages","max_tokens","headers","cleanedPrediction","choices","message","content","err","console","fetchStockNews","filteredNews","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toUpperCase","window","location","reload","i","index","href","target","rel","src","alt","source","datetime","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Shagun Khandelwal/zerodha/client/src/components/AIPrediction/AIPrediction.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport './AIPrediction.css';\r\n\r\nconst AIPrediction = () => {\r\n  const { symbol } = useParams();\r\n  const navigate = useNavigate();\r\n  const [prediction, setPrediction] = useState(null);\r\n  const [sentiment, setSentiment] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [news, setNews] = useState([]);\r\n  const [priceData, setPriceData] = useState(null);\r\n\r\n  // API Keys\r\n  const FINNHUB_API_KEY = 'd1aopp9r01qjhvtqeebgd1aopp9r01qjhvtqeec0';\r\n  const OPENROUTER_API_KEY = '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';\r\n  const ALPHA_VANTAGE_KEY = 'OH0ZQBRUAB4ABC4X';\r\n\r\n  // Clean AI response by removing markdown hashes\r\n  const cleanPredictionText = (text) => {\r\n    return text\r\n      .replace(/^#+\\s*/gm, '') // Remove markdown headers\r\n      .replace(/\\*\\*(.*?)\\*\\*/g, '$1') // Remove bold markdown\r\n      .split('\\n')\r\n      .filter(line => line.trim() !== '') // Remove empty lines\r\n      .map(line => line.trim());\r\n  };\r\n\r\n  // Calculate sentiment score based on multiple factors\r\n  const calculateSentiment = (priceChange, newsItems) => {\r\n    // Base sentiment from price change (-1 to 1)\r\n    const priceChangeNum = parseFloat(priceChange) || 0;\r\n    let sentimentScore = Math.min(1, Math.max(-1, priceChangeNum / 5));\r\n    \r\n    // Analyze news sentiment if available\r\n    if (newsItems && newsItems.length > 0) {\r\n      let newsSentiment = 0;\r\n      const sentimentWords = {\r\n        positive: ['up', 'rise', 'gain', 'strong', 'beat', 'bullish', 'buy', 'outperform'],\r\n        negative: ['down', 'fall', 'drop', 'weak', 'miss', 'bearish', 'sell', 'underperform']\r\n      };\r\n      \r\n      newsItems.forEach(item => {\r\n        const headline = item.headline.toLowerCase();\r\n        const summary = (item.summary || '').toLowerCase();\r\n        \r\n        // Check for positive words\r\n        sentimentWords.positive.forEach(word => {\r\n          if (headline.includes(word) || summary.includes(word)) {\r\n            newsSentiment += 0.1;\r\n          }\r\n        });\r\n        \r\n        // Check for negative words\r\n        sentimentWords.negative.forEach(word => {\r\n          if (headline.includes(word) || summary.includes(word)) {\r\n            newsSentiment -= 0.1;\r\n          }\r\n        });\r\n      });\r\n      \r\n      // Average news sentiment and combine with price sentiment\r\n      newsSentiment = newsSentiment / newsItems.length;\r\n      sentimentScore = (sentimentScore * 0.6) + (newsSentiment * 0.4);\r\n    }\r\n    \r\n    // Normalize between -1 and 1\r\n    sentimentScore = Math.min(1, Math.max(-1, sentimentScore));\r\n    \r\n    // Determine sentiment label\r\n    let sentimentLabel;\r\n    if (sentimentScore > 0.3) {\r\n      sentimentLabel = 'strong bullish';\r\n    } else if (sentimentScore > 0.1) {\r\n      sentimentLabel = 'bullish';\r\n    } else if (sentimentScore < -0.3) {\r\n      sentimentLabel = 'strong bearish';\r\n    } else if (sentimentScore < -0.1) {\r\n      sentimentLabel = 'bearish';\r\n    } else {\r\n      sentimentLabel = 'neutral';\r\n    }\r\n    \r\n    return {\r\n      score: sentimentScore.toFixed(2),\r\n      label: sentimentLabel\r\n    };\r\n  };\r\n\r\n  // Generate AI prediction using OpenRouter API\r\n  const generateAIPrediction = async (stockSymbol) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // Step 1: Gather data from APIs\r\n      const [priceResponse, newsResponse] = await Promise.all([\r\n        axios.get(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${stockSymbol}&apikey=${ALPHA_VANTAGE_KEY}`),\r\n        axios.get(`https://finnhub.io/api/v1/company-news?symbol=${stockSymbol}&from=${new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString().split('T')[0]}&to=${new Date().toISOString().split('T')[0]}&token=${FINNHUB_API_KEY}`),\r\n      ]);\r\n\r\n      // Process price data\r\n      const priceData = priceResponse.data['Global Quote'] || {};\r\n      const priceChange = priceData['10. change percent'] || '0%';\r\n      setPriceData({\r\n        current: priceData['05. price'],\r\n        change: priceData['09. change'],\r\n        changePercent: priceChange\r\n      });\r\n\r\n      // Process news data\r\n      const recentNews = newsResponse.data\r\n        .filter(item => item.headline && item.image && item.url)\r\n        .slice(0, 5);\r\n      setNews(recentNews);\r\n\r\n      // Calculate sentiment\r\n      const sentimentAnalysis = calculateSentiment(priceChange, recentNews);\r\n      setSentiment(sentimentAnalysis);\r\n\r\n      // Prepare news headlines for AI\r\n      const latestNews = recentNews.length > 0 ? \r\n        recentNews.slice(0, 3).map(item => item.headline).join('\\n- ') : \r\n        'No recent news available';\r\n\r\n      // Step 2: Send to AI for prediction\r\n      const response = await axios.post('https://openrouter.ai/api/v1/chat/completions', {\r\n        model: \"openai/gpt-3.5-turbo\",\r\n        messages: [\r\n          { \r\n            \"role\": \"system\", \r\n            \"content\": `You are an advanced stock prediction AI that analyzes multiple data points to forecast stock movements.\r\n                        Provide a detailed prediction for the next 24 hours including:\r\n                        - Predicted direction and percentage change\r\n                        - Key factors influencing the prediction\r\n                        - Confidence level (low/medium/high)\r\n                        - Technical analysis insights\r\n                        - Important disclaimer about predictions being speculative\r\n                        \r\n                        Format your response with clear sections and bullet points for better readability.\r\n                        Current sentiment: ${sentimentAnalysis.label} (${sentimentAnalysis.score})`\r\n          },\r\n          { \r\n            \"role\": \"user\", \r\n            \"content\": `Generate a 24-hour prediction for ${stockSymbol} based on:\r\n                        - Current price: ${priceData['05. price']}\r\n                        - Price change: ${priceChange}\r\n                        - Latest news headlines:\r\n                          - ${latestNews}`\r\n          }\r\n        ],\r\n        max_tokens: 1000\r\n      }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${OPENROUTER_API_KEY}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      const cleanedPrediction = cleanPredictionText(response.data.choices[0].message.content);\r\n      setPrediction(cleanedPrediction);\r\n\r\n    } catch (err) {\r\n      console.error(\"Error generating prediction:\", err);\r\n      setError('Failed to generate prediction. Please try again later.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch market news\r\n  const fetchStockNews = async (stockSymbol) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://finnhub.io/api/v1/company-news?symbol=${stockSymbol}&from=${new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0]}&to=${new Date().toISOString().split('T')[0]}&token=${FINNHUB_API_KEY}`\r\n      );\r\n      \r\n      const filteredNews = response.data\r\n        .filter(item => item.headline && item.image && item.url)\r\n        .slice(0, 5);\r\n      \r\n      setNews(filteredNews);\r\n    } catch (err) {\r\n      console.error(\"Error fetching news:\", err);\r\n    }\r\n  };\r\n\r\n  // Load all data when symbol changes\r\n  useEffect(() => {\r\n    if (symbol) {\r\n      setLoading(true);\r\n      generateAIPrediction(symbol);\r\n      fetchStockNews(symbol);\r\n    }\r\n  }, [symbol]);\r\n\r\n  if (!symbol) {\r\n    return (\r\n      <div className=\"ai-prediction-container\">\r\n        <div className=\"empty-state\">\r\n          <div className=\"empty-icon\">📈</div>\r\n          <h3>No Stock Selected</h3>\r\n          <p>Please select a stock symbol to view AI predictions</p>\r\n          <button onClick={() => navigate('/watchlist')} className=\"primary-button\">\r\n            Browse Stocks\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"ai-prediction-container\">\r\n      <div className=\"ai-prediction-header\">\r\n        <div className=\"header-content\">\r\n          <h1 className=\"stock-symbol\">{symbol.toUpperCase()}</h1>\r\n          {priceData && (\r\n            <div className={`price-display ${parseFloat(priceData.change) >= 0 ? 'positive' : 'negative'}`}>\r\n              <span className=\"price\">${priceData.current}</span>\r\n              <span className=\"change\">\r\n                {parseFloat(priceData.change) >= 0 ? '↑' : '↓'} \r\n                {priceData.change} ({priceData.changePercent})\r\n              </span>\r\n            </div>\r\n          )}\r\n          <p className=\"stock-name\">24-Hour AI Prediction Analysis</p>\r\n        </div>\r\n        <button onClick={() => navigate(-1)} className=\"back-button\">\r\n          ← Back to Watchlist\r\n        </button>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <div className=\"loading-state\">\r\n          <div className=\"loading-animation\">\r\n            <div className=\"loading-bar\"></div>\r\n            <div className=\"loading-bar\"></div>\r\n            <div className=\"loading-bar\"></div>\r\n          </div>\r\n          <p>Analyzing market data for {symbol.toUpperCase()}...</p>\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"error-state\">\r\n          <div className=\"error-icon\">⚠️</div>\r\n          <h3>Prediction Error</h3>\r\n          <p>{error}</p>\r\n          <button onClick={() => window.location.reload()} className=\"primary-button\">\r\n            Retry Analysis\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {prediction && (\r\n            <div className=\"prediction-section\">\r\n              <div className=\"prediction-card\">\r\n                <div className=\"card-header\">\r\n                  <div className=\"sentiment-indicator\">\r\n                    <div className={`sentiment-dot ${sentiment.label.replace(' ', '-')}`}></div>\r\n                    <span className=\"sentiment-label\">\r\n                      {sentiment.label} sentiment ({sentiment.score})\r\n                    </span>\r\n                  </div>\r\n                  <h2 className=\"prediction-title\">AI Prediction Summary</h2>\r\n                </div>\r\n                \r\n                <div className=\"prediction-content\">\r\n                  {prediction.map((line, i) => (\r\n                    <p key={i} className=\"prediction-line\">{line}</p>\r\n                  ))}\r\n                </div>\r\n                \r\n                <div className=\"prediction-footer\">\r\n                  <div className=\"disclaimer\">\r\n                    <p>Disclaimer: This AI-generated forecast is for informational purposes only and should not be considered financial advice.</p>\r\n                  </div>\r\n                  <button \r\n                    onClick={() => generateAIPrediction(symbol)} \r\n                    className=\"refresh-button\"\r\n                  >\r\n                    ↻ Refresh Prediction\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"news-section\">\r\n            <h2 className=\"section-title\">Latest Market News</h2>\r\n            {news.length > 0 ? (\r\n              <div className=\"news-grid\">\r\n                {news.map((item, index) => (\r\n                  <a \r\n                    key={index} \r\n                    href={item.url} \r\n                    target=\"_blank\" \r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"news-card\"\r\n                  >\r\n                    <div className=\"news-image-container\">\r\n                      <img src={item.image} alt={item.headline} className=\"news-image\" />\r\n                    </div>\r\n                    <div className=\"news-content\">\r\n                      <h3 className=\"news-headline\">{item.headline}</h3>\r\n                      <div className=\"news-meta\">\r\n                        <span className=\"news-source\">{item.source}</span>\r\n                        <span className=\"news-date\">\r\n                          {new Date(item.datetime * 1000).toLocaleDateString()}\r\n                        </span>\r\n                      </div>\r\n                      <p className=\"news-summary\">{item.summary || 'Read more...'}</p>\r\n                    </div>\r\n                  </a>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"empty-news\">\r\n                <p>No recent news found for {symbol.toUpperCase()}</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AIPrediction;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}